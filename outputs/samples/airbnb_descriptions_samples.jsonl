{
    "function_id": "airbnb-1",
    "description": {
        "function_snippet": "def list_property_on_airbnb(property_details: Dict[str, Any], host_details: Dict[str, Any]) -> Dict[str, Any]:\n    \"\"\"\n    Lists a new property on Airbnb.\n\n    Parameters:\n        property_details (Dict[str, Any]): A dictionary containing property details.\n                                           Attributes include 'title', 'description', 'price', 'location', etc.\n        host_details (Dict[str, Any]): A dictionary containing host details.\n                                       Attributes include 'name', 'email', 'phone', etc.\n\n    Returns:\n        Dict[str, Any]: A dictionary with 'success' as a key and a boolean value indicating whether the listing was successful.\n    \"\"\"",
        "function_description": {
            "name": "list_property_on_airbnb",
            "description": "Lists a new property on Airbnb.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_details": {
                        "type": "object",
                        "description": "A dictionary containing property details. Attributes include 'title', 'description', 'price', 'location', etc."
                    },
                    "host_details": {
                        "type": "object",
                        "description": "A dictionary containing host details. Attributes include 'name', 'email', 'phone', etc."
                    }
                },
                "required": [
                    "property_details",
                    "host_details"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "success": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether the listing was successful."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"list_property_on_airbnb\",\n        \"description\": \"Lists a new property on Airbnb.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"property_details\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing property details. Attributes include 'title', 'description', 'price', 'location', etc.\"\n                },\n                \"host_details\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing host details. Attributes include 'name', 'email', 'phone', etc.\"\n                }\n            },\n            \"required\": [\"property_details\", \"host_details\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"success\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"A boolean value indicating whether the listing was successful.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me list my property on Airbnb?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can assist you with that. Please provide me with the property details and your host details.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have the property details and host details ready. How should I share them with you?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"You can pass the property details and host details as dictionaries to the 'list_property_on_airbnb' function.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Okay, I will do that. Thank you!\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"You're welcome! Let me know if you need any further assistance.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"list_property_on_airbnb\",\n        \"parameters\": {\n            \"property_details\": {...},\n            \"host_details\": {...}\n        }\n    }\n}",
    "data": "{\n    \"function_description\": {\n        \"name\": \"list_property_on_airbnb\",\n        \"description\": \"Lists a new property on Airbnb.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"property_details\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing property details. Attributes include 'title', 'description', 'price', 'location', etc.\"\n                },\n                \"host_details\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing host details. Attributes include 'name', 'email', 'phone', etc.\"\n                }\n            },\n            \"required\": [\"property_details\", \"host_details\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"success\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"A boolean value indicating whether the listing was successful.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me list my property on Airbnb?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can assist you with that. Please provide me with the property details and your host details.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have the property details and host details ready. How should I share them with you?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"You can pass the property details and host details as dictionaries to the 'list_property_on_airbnb' function.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Okay, I will do that. Thank you!\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"You're welcome! Let me know if you need any further assistance.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"list_property_on_airbnb\",\n        \"parameters\": {\n            \"property_details\": {...},\n            \"host_details\": {...}\n        }\n    }\n}",
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def list_property_on_airbnb(property_details: Dict[str, Any], host_details: Dict[str, Any]) -> Dict[str, Any]:\\n    \"\"\"\\n    Lists a new property on Airbnb.\\n\\n    Parameters:\\n        property_details (Dict[str, Any]): A dictionary containing property details.\\n                                           Attributes include \\'title\\', \\'description\\', \\'price\\', \\'location\\', etc.\\n        host_details (Dict[str, Any]): A dictionary containing host details.\\n                                       Attributes include \\'name\\', \\'email\\', \\'phone\\', etc.\\n\\n    Returns:\\n        Dict[str, Any]: A dictionary with \\'success\\' as a key and a boolean value indicating whether the listing was successful.\\n    \"\"\"', 'function_description': {'name': 'list_property_on_airbnb', 'description': 'Lists a new property on Airbnb.', 'parameters': {'type': 'object', 'properties': {'property_details': {'type': 'object', 'description': \"A dictionary containing property details. Attributes include 'title', 'description', 'price', 'location', etc.\"}, 'host_details': {'type': 'object', 'description': \"A dictionary containing host details. Attributes include 'name', 'email', 'phone', etc.\"}}, 'required': ['property_details', 'host_details']}, 'returns': {'type': 'object', 'properties': {'success': {'type': 'boolean', 'description': 'A boolean value indicating whether the listing was successful.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-2",
    "description": {
        "function_snippet": "def update_property_details(\n    property_id: str,\n    description: str,\n    amenities: List[str],\n    photos: List[str]\n) -> None:\n    \"\"\"\n    Updates the property details like description, amenities, and photos.\n\n    Parameters:\n        property_id (str): The ID of the property to update.\n        description (str): The updated description of the property.\n        amenities (List[str]): A list of updated amenities of the property.\n        photos (List[str]): A list of updated photos of the property.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "update_property_details",
            "description": "Updates the property details like description, amenities, and photos.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_id": {
                        "type": "string",
                        "description": "The ID of the property to update."
                    },
                    "description": {
                        "type": "string",
                        "description": "The updated description of the property."
                    },
                    "amenities": {
                        "type": "array",
                        "description": "A list of updated amenities of the property.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "photos": {
                        "type": "array",
                        "description": "A list of updated photos of the property.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "property_id",
                    "description",
                    "amenities",
                    "photos"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"update_property_details\",\n        \"description\": \"Updates the property details like description, amenities, and photos.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"property_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the property to update.\"\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The updated description of the property.\"\n                },\n                \"amenities\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of updated amenities of the property.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"photos\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of updated photos of the property.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"property_id\", \"description\", \"amenities\", \"photos\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, I want to update the details of my property.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, please provide me the ID of your property.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The ID of my property is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you. Now, please provide me the updated description of the property.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The updated description is 'A beautiful 2-bedroom apartment in downtown.'\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! Lastly, please provide me the updated amenities and photos of the property.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The updated amenities are ['swimming pool', 'gym', 'parking'] and the updated photos are ['photo1.jpg', 'photo2.jpg'].\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. Updating the property now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"update_property_details\",\n        \"parameters\": {\n            \"property_id\": \"12345\",\n            \"description\": \"A beautiful 2-bedroom apartment in downtown.\",\n            \"amenities\": [\"swimming pool\", \"gym\", \"parking\"],\n            \"photos\": [\"photo1.jpg\", \"photo2.jpg\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "update_property_details",
            "description": "Updates the property details like description, amenities, and photos.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_id": {
                        "type": "string",
                        "description": "The ID of the property to update."
                    },
                    "description": {
                        "type": "string",
                        "description": "The updated description of the property."
                    },
                    "amenities": {
                        "type": "array",
                        "description": "A list of updated amenities of the property.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "photos": {
                        "type": "array",
                        "description": "A list of updated photos of the property.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "property_id",
                    "description",
                    "amenities",
                    "photos"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, I want to update the details of my property."
            },
            {
                "role": "assistant",
                "text": "Sure, please provide me the ID of your property."
            },
            {
                "role": "user",
                "text": "The ID of my property is '12345'."
            },
            {
                "role": "assistant",
                "text": "Thank you. Now, please provide me the updated description of the property."
            },
            {
                "role": "user",
                "text": "The updated description is 'A beautiful 2-bedroom apartment in downtown.'"
            },
            {
                "role": "assistant",
                "text": "Great! Lastly, please provide me the updated amenities and photos of the property."
            },
            {
                "role": "user",
                "text": "The updated amenities are ['swimming pool', 'gym', 'parking'] and the updated photos are ['photo1.jpg', 'photo2.jpg']."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. Updating the property now."
            }
        ],
        "function_call": {
            "function_name": "update_property_details",
            "parameters": {
                "property_id": "12345",
                "description": "A beautiful 2-bedroom apartment in downtown.",
                "amenities": [
                    "swimming pool",
                    "gym",
                    "parking"
                ],
                "photos": [
                    "photo1.jpg",
                    "photo2.jpg"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def update_property_details(\\n    property_id: str,\\n    description: str,\\n    amenities: List[str],\\n    photos: List[str]\\n) -> None:\\n    \"\"\"\\n    Updates the property details like description, amenities, and photos.\\n\\n    Parameters:\\n        property_id (str): The ID of the property to update.\\n        description (str): The updated description of the property.\\n        amenities (List[str]): A list of updated amenities of the property.\\n        photos (List[str]): A list of updated photos of the property.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'update_property_details', 'description': 'Updates the property details like description, amenities, and photos.', 'parameters': {'type': 'object', 'properties': {'property_id': {'type': 'string', 'description': 'The ID of the property to update.'}, 'description': {'type': 'string', 'description': 'The updated description of the property.'}, 'amenities': {'type': 'array', 'description': 'A list of updated amenities of the property.', 'items': {'type': 'string'}}, 'photos': {'type': 'array', 'description': 'A list of updated photos of the property.', 'items': {'type': 'string'}}}, 'required': ['property_id', 'description', 'amenities', 'photos']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-3",
    "description": {
        "function_snippet": "def set_property_pricing(\n    property_id: int,\n    base_price: float,\n    season_rates: Dict[str, float],\n    event_rates: Dict[str, float]\n) -> None:\n    \"\"\"\n    Set or update pricing for the property, including special rates for seasons or events.\n\n    Parameters:\n        property_id (int): The ID of the property.\n        base_price (float): The base price of the property.\n        season_rates (Dict[str, float]): A dictionary containing the rates for different seasons.\n                                          The keys represent the season names and the values represent the rates.\n        event_rates (Dict[str, float]): A dictionary containing the rates for different events.\n                                         The keys represent the event names and the values represent the rates.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "set_property_pricing",
            "description": "Set or update pricing for the property, including special rates for seasons or events.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_id": {
                        "type": "integer",
                        "description": "The ID of the property."
                    },
                    "base_price": {
                        "type": "float",
                        "description": "The base price of the property."
                    },
                    "season_rates": {
                        "type": "object",
                        "description": "A dictionary containing the rates for different seasons. The keys represent the season names and the values represent the rates.",
                        "additionalProperties": {
                            "type": "float"
                        }
                    },
                    "event_rates": {
                        "type": "object",
                        "description": "A dictionary containing the rates for different events. The keys represent the event names and the values represent the rates.",
                        "additionalProperties": {
                            "type": "float"
                        }
                    }
                },
                "required": [
                    "property_id",
                    "base_price",
                    "season_rates",
                    "event_rates"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n        \"function_description\": {\n            \"name\": \"set_property_pricing\",\n            \"description\": \"Set or update pricing for the property, including special rates for seasons or events.\",\n            \"parameters\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"property_id\": {\n                        \"type\": \"integer\",\n                        \"description\": \"The ID of the property.\"\n                    },\n                    \"base_price\": {\n                        \"type\": \"float\",\n                        \"description\": \"The base price of the property.\"\n                    },\n                    \"season_rates\": {\n                        \"type\": \"object\",\n                        \"description\": \"A dictionary containing the rates for different seasons. The keys represent the season names and the values represent the rates.\",\n                        \"additionalProperties\": {\n                            \"type\": \"float\"\n                        }\n                    },\n                    \"event_rates\": {\n                        \"type\": \"object\",\n                        \"description\": \"A dictionary containing the rates for different events. The keys represent the event names and the values represent the rates.\",\n                        \"additionalProperties\": {\n                            \"type\": \"float\"\n                        }\n                    }\n                },\n                \"required\": [\n                    \"property_id\",\n                    \"base_price\",\n                    \"season_rates\",\n                    \"event_rates\"\n                ]\n            },\n            \"returns\": {\n                \"type\": \"None\"\n            }\n        },\n        \"conversation\": [\n            {\n                \"role\": \"user\",\n                \"text\": \"Can you update the pricing for my property?\"\n            },\n            {\n                \"role\": \"assistant\",\n                \"text\": \"Sure, I can do that. Please provide me with the property ID, base price, season rates, and event rates.\"\n            },\n            {\n                \"role\": \"user\",\n                \"text\": \"My property ID is 12345, base price is $1000, season rates are {'summer': 1.2, 'winter': 0.8}, and event rates are {'christmas': 1.5, 'new year': 2.0}.\"\n            },\n            {\n                \"role\": \"assistant\",\n                \"text\": \"Thank you for providing the details. Updating the pricing for your property now.\"\n            }\n        ],\n        \"function_call\": {\n            \"function_name\": \"set_property_pricing\",\n            \"parameters\": {\n                \"property_id\": 12345,\n                \"base_price\": 1000.0,\n                \"season_rates\": {\n                    \"summer\": 1.2,\n                    \"winter\": 0.8\n                },\n                \"event_rates\": {\n                    \"christmas\": 1.5,\n                    \"new year\": 2.0\n                }\n            }\n        }\n    }",
    "data": {
        "function_description": {
            "name": "set_property_pricing",
            "description": "Set or update pricing for the property, including special rates for seasons or events.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_id": {
                        "type": "integer",
                        "description": "The ID of the property."
                    },
                    "base_price": {
                        "type": "float",
                        "description": "The base price of the property."
                    },
                    "season_rates": {
                        "type": "object",
                        "description": "A dictionary containing the rates for different seasons. The keys represent the season names and the values represent the rates.",
                        "additionalProperties": {
                            "type": "float"
                        }
                    },
                    "event_rates": {
                        "type": "object",
                        "description": "A dictionary containing the rates for different events. The keys represent the event names and the values represent the rates.",
                        "additionalProperties": {
                            "type": "float"
                        }
                    }
                },
                "required": [
                    "property_id",
                    "base_price",
                    "season_rates",
                    "event_rates"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you update the pricing for my property?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the property ID, base price, season rates, and event rates."
            },
            {
                "role": "user",
                "text": "My property ID is 12345, base price is $1000, season rates are {'summer': 1.2, 'winter': 0.8}, and event rates are {'christmas': 1.5, 'new year': 2.0}."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. Updating the pricing for your property now."
            }
        ],
        "function_call": {
            "function_name": "set_property_pricing",
            "parameters": {
                "property_id": 12345,
                "base_price": 1000.0,
                "season_rates": {
                    "summer": 1.2,
                    "winter": 0.8
                },
                "event_rates": {
                    "christmas": 1.5,
                    "new year": 2.0
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def set_property_pricing(\\n    property_id: int,\\n    base_price: float,\\n    season_rates: Dict[str, float],\\n    event_rates: Dict[str, float]\\n) -> None:\\n    \"\"\"\\n    Set or update pricing for the property, including special rates for seasons or events.\\n\\n    Parameters:\\n        property_id (int): The ID of the property.\\n        base_price (float): The base price of the property.\\n        season_rates (Dict[str, float]): A dictionary containing the rates for different seasons.\\n                                          The keys represent the season names and the values represent the rates.\\n        event_rates (Dict[str, float]): A dictionary containing the rates for different events.\\n                                         The keys represent the event names and the values represent the rates.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'set_property_pricing', 'description': 'Set or update pricing for the property, including special rates for seasons or events.', 'parameters': {'type': 'object', 'properties': {'property_id': {'type': 'integer', 'description': 'The ID of the property.'}, 'base_price': {'type': 'float', 'description': 'The base price of the property.'}, 'season_rates': {'type': 'object', 'description': 'A dictionary containing the rates for different seasons. The keys represent the season names and the values represent the rates.', 'additionalProperties': {'type': 'float'}}, 'event_rates': {'type': 'object', 'description': 'A dictionary containing the rates for different events. The keys represent the event names and the values represent the rates.', 'additionalProperties': {'type': 'float'}}}, 'required': ['property_id', 'base_price', 'season_rates', 'event_rates']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-4",
    "description": {
        "function_snippet": "def block_off_unavailable_dates(property_id: str, unavailable_dates: List[str]) -> None:\n    \"\"\"\n    Blocks off unavailable dates on the calendar for a property.\n\n    Parameters:\n        property_id (str): The ID of the property.\n        unavailable_dates (List[str]): A list of unavailable dates in YYYY-MM-DD format.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "block_off_unavailable_dates",
            "description": "Blocks off unavailable dates on the calendar for a property.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_id": {
                        "type": "string",
                        "description": "The ID of the property."
                    },
                    "unavailable_dates": {
                        "type": "array",
                        "description": "A list of unavailable dates in YYYY-MM-DD format.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "property_id",
                    "unavailable_dates"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"block_off_unavailable_dates\",\n        \"description\": \"Blocks off unavailable dates on the calendar for a property.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"property_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the property.\"\n                },\n                \"unavailable_dates\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of unavailable dates in YYYY-MM-DD format.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"property_id\", \"unavailable_dates\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you block off unavailable dates on the calendar for my property?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I just need the ID of your property and a list of unavailable dates in YYYY-MM-DD format.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The ID of my property is '12345' and the unavailable dates are ['2022-01-01', '2022-01-02', '2022-01-03'].\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will block off the unavailable dates on the calendar for your property.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"block_off_unavailable_dates\",\n        \"parameters\": {\n            \"property_id\": \"12345\",\n            \"unavailable_dates\": [\"2022-01-01\", \"2022-01-02\", \"2022-01-03\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "block_off_unavailable_dates",
            "description": "Blocks off unavailable dates on the calendar for a property.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_id": {
                        "type": "string",
                        "description": "The ID of the property."
                    },
                    "unavailable_dates": {
                        "type": "array",
                        "description": "A list of unavailable dates in YYYY-MM-DD format.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "property_id",
                    "unavailable_dates"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you block off unavailable dates on the calendar for my property?"
            },
            {
                "role": "assistant",
                "text": "Of course! I just need the ID of your property and a list of unavailable dates in YYYY-MM-DD format."
            },
            {
                "role": "user",
                "text": "The ID of my property is '12345' and the unavailable dates are ['2022-01-01', '2022-01-02', '2022-01-03']."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will block off the unavailable dates on the calendar for your property."
            }
        ],
        "function_call": {
            "function_name": "block_off_unavailable_dates",
            "parameters": {
                "property_id": "12345",
                "unavailable_dates": [
                    "2022-01-01",
                    "2022-01-02",
                    "2022-01-03"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def block_off_unavailable_dates(property_id: str, unavailable_dates: List[str]) -> None:\\n    \"\"\"\\n    Blocks off unavailable dates on the calendar for a property.\\n\\n    Parameters:\\n        property_id (str): The ID of the property.\\n        unavailable_dates (List[str]): A list of unavailable dates in YYYY-MM-DD format.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'block_off_unavailable_dates', 'description': 'Blocks off unavailable dates on the calendar for a property.', 'parameters': {'type': 'object', 'properties': {'property_id': {'type': 'string', 'description': 'The ID of the property.'}, 'unavailable_dates': {'type': 'array', 'description': 'A list of unavailable dates in YYYY-MM-DD format.', 'items': {'type': 'string'}}}, 'required': ['property_id', 'unavailable_dates']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-5",
    "description": {
        "function_snippet": "def confirm_booking_requests(booking_requests: List[Dict[str, Any]]) -> List[bool]:\n    \"\"\"\n    Confirms or declines new booking requests.\n\n    Parameters:\n        booking_requests (List[Dict[str, Any]]): A list of dictionaries containing booking request details.\n                                                 Each dictionary should have 'name', 'date', 'guests', and 'status' keys.\n\n    Returns:\n        List[bool]: A list of boolean values indicating whether each booking request was confirmed or declined.\n    \"\"\"\n",
        "function_description": {
            "name": "confirm_booking_requests",
            "description": "Confirms or declines new booking requests.",
            "parameters": {
                "type": "object",
                "properties": {
                    "booking_requests": {
                        "type": "array",
                        "description": "A list of dictionaries containing booking request details. Each dictionary should have 'name', 'date', 'guests', and 'status' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "date": {
                                    "type": "string"
                                },
                                "guests": {
                                    "type": "number"
                                },
                                "status": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "date",
                                "guests",
                                "status"
                            ]
                        }
                    }
                },
                "required": [
                    "booking_requests"
                ]
            }
        },
        "returns": {
            "type": "array",
            "items": {
                "type": "boolean"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"confirm_booking_requests\",\n        \"description\": \"Confirms or declines new booking requests.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"booking_requests\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing booking request details. Each dictionary should have 'name', 'date', 'guests', and 'status' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\"type\": \"string\"},\n                            \"date\": {\"type\": \"string\"},\n                            \"guests\": {\"type\": \"number\"},\n                            \"status\": {\"type\": \"string\"}\n                        },\n                        \"required\": [\"name\", \"date\", \"guests\", \"status\"]\n                    }\n                }\n            },\n            \"required\": [\"booking_requests\"]\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you confirm my booking requests?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, please provide me the details of your booking requests.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have two booking requests. One for 'John' on '2022-01-01' with 5 guests, and another for 'Sarah' on '2022-02-01' with 3 guests.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it. Let me confirm your booking requests.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"confirm_booking_requests\",\n        \"parameters\": {\n            \"booking_requests\": [\n                {\n                    \"name\": \"John\",\n                    \"date\": \"2022-01-01\",\n                    \"guests\": 5,\n                    \"status\": \"confirmed\"\n                },\n                {\n                    \"name\": \"Sarah\",\n                    \"date\": \"2022-02-01\",\n                    \"guests\": 3,\n                    \"status\": \"confirmed\"\n                }\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "confirm_booking_requests",
            "description": "Confirms or declines new booking requests.",
            "parameters": {
                "type": "object",
                "properties": {
                    "booking_requests": {
                        "type": "array",
                        "description": "A list of dictionaries containing booking request details. Each dictionary should have 'name', 'date', 'guests', and 'status' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "date": {
                                    "type": "string"
                                },
                                "guests": {
                                    "type": "number"
                                },
                                "status": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "date",
                                "guests",
                                "status"
                            ]
                        }
                    }
                },
                "required": [
                    "booking_requests"
                ]
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you confirm my booking requests?"
            },
            {
                "role": "assistant",
                "text": "Sure, please provide me the details of your booking requests."
            },
            {
                "role": "user",
                "text": "I have two booking requests. One for 'John' on '2022-01-01' with 5 guests, and another for 'Sarah' on '2022-02-01' with 3 guests."
            },
            {
                "role": "assistant",
                "text": "Got it. Let me confirm your booking requests."
            }
        ],
        "function_call": {
            "function_name": "confirm_booking_requests",
            "parameters": {
                "booking_requests": [
                    {
                        "name": "John",
                        "date": "2022-01-01",
                        "guests": 5,
                        "status": "confirmed"
                    },
                    {
                        "name": "Sarah",
                        "date": "2022-02-01",
                        "guests": 3,
                        "status": "confirmed"
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def confirm_booking_requests(booking_requests: List[Dict[str, Any]]) -> List[bool]:\\n    \"\"\"\\n    Confirms or declines new booking requests.\\n\\n    Parameters:\\n        booking_requests (List[Dict[str, Any]]): A list of dictionaries containing booking request details.\\n                                                 Each dictionary should have \\'name\\', \\'date\\', \\'guests\\', and \\'status\\' keys.\\n\\n    Returns:\\n        List[bool]: A list of boolean values indicating whether each booking request was confirmed or declined.\\n    \"\"\"\\n', 'function_description': {'name': 'confirm_booking_requests', 'description': 'Confirms or declines new booking requests.', 'parameters': {'type': 'object', 'properties': {'booking_requests': {'type': 'array', 'description': \"A list of dictionaries containing booking request details. Each dictionary should have 'name', 'date', 'guests', and 'status' keys.\", 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'date': {'type': 'string'}, 'guests': {'type': 'number'}, 'status': {'type': 'string'}}, 'required': ['name', 'date', 'guests', 'status']}}}, 'required': ['booking_requests']}}, 'returns': {'type': 'array', 'items': {'type': 'boolean'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-6",
    "description": {
        "function_snippet": "def send_automated_messages(\n    guests: List[str],\n    message_type: str,\n) -> None:\n    \"\"\"\n    Sends automated messages to guests.\n\n    Parameters:\n        guests (List[str]): A list of guest names.\n        message_type (str): The type of message to send. Can be 'welcome', 'check-out', or 'review'.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "send_automated_messages",
            "description": "Sends automated messages to guests.",
            "parameters": {
                "type": "object",
                "properties": {
                    "guests": {
                        "type": "array",
                        "description": "A list of guest names.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message_type": {
                        "type": "string",
                        "description": "The type of message to send. Can be 'welcome', 'check-out', or 'review'."
                    }
                },
                "required": [
                    "guests",
                    "message_type"
                ]
            },
            "returns": {
                "type": "null"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"send_automated_messages\",\n        \"description\": \"Sends automated messages to guests.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"guests\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of guest names.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"message_type\": {\n                    \"type\": \"string\",\n                    \"description\": \"The type of message to send. Can be 'welcome', 'check-out', or 'review'.\"\n                }\n            },\n            \"required\": [\"guests\", \"message_type\"]\n        },\n        \"returns\": {\n            \"type\": \"null\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you send automated messages to my guests?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the list of guest names and the type of message you want to send.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have a list of guests and I want to send them a welcome message.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will send the welcome message to the guests.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"send_automated_messages\",\n        \"parameters\": {\n            \"guests\": [\"John\", \"Sarah\", \"Emily\"],\n            \"message_type\": \"welcome\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "send_automated_messages",
            "description": "Sends automated messages to guests.",
            "parameters": {
                "type": "object",
                "properties": {
                    "guests": {
                        "type": "array",
                        "description": "A list of guest names.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message_type": {
                        "type": "string",
                        "description": "The type of message to send. Can be 'welcome', 'check-out', or 'review'."
                    }
                },
                "required": [
                    "guests",
                    "message_type"
                ]
            },
            "returns": {
                "type": "null"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you send automated messages to my guests?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the list of guest names and the type of message you want to send."
            },
            {
                "role": "user",
                "text": "I have a list of guests and I want to send them a welcome message."
            },
            {
                "role": "assistant",
                "text": "Great, I will send the welcome message to the guests."
            }
        ],
        "function_call": {
            "function_name": "send_automated_messages",
            "parameters": {
                "guests": [
                    "John",
                    "Sarah",
                    "Emily"
                ],
                "message_type": "welcome"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def send_automated_messages(\\n    guests: List[str],\\n    message_type: str,\\n) -> None:\\n    \"\"\"\\n    Sends automated messages to guests.\\n\\n    Parameters:\\n        guests (List[str]): A list of guest names.\\n        message_type (str): The type of message to send. Can be \\'welcome\\', \\'check-out\\', or \\'review\\'.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'send_automated_messages', 'description': 'Sends automated messages to guests.', 'parameters': {'type': 'object', 'properties': {'guests': {'type': 'array', 'description': 'A list of guest names.', 'items': {'type': 'string'}}, 'message_type': {'type': 'string', 'description': \"The type of message to send. Can be 'welcome', 'check-out', or 'review'.\"}}, 'required': ['guests', 'message_type']}, 'returns': {'type': 'null'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-7",
    "description": {
        "function_snippet": "def check_and_respond_to_guest_reviews(reviews: List[Dict[str, str]]) -> Dict[str, str]:\n    \"\"\"\n    Checks and responds to guest reviews.\n\n    Parameters:\n        reviews (List[Dict[str, str]]): A list of dictionaries containing guest reviews.\n                                        Each dictionary should have 'guest_name' and 'review' keys.\n\n    Returns:\n        Dict[str, str]: A dictionary with 'response' as a key and the response message as a value.\n    \"\"\"\n    ",
        "function_description": {
            "name": "check_and_respond_to_guest_reviews",
            "description": "Checks and responds to guest reviews.",
            "parameters": {
                "type": "object",
                "properties": {
                    "reviews": {
                        "type": "array",
                        "description": "A list of dictionaries containing guest reviews. Each dictionary should have 'guest_name' and 'review' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "guest_name": {
                                    "type": "string"
                                },
                                "review": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "guest_name",
                                "review"
                            ]
                        }
                    }
                },
                "required": [
                    "reviews"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "The response message."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"check_and_respond_to_guest_reviews\",\n        \"description\": \"Checks and responds to guest reviews.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"reviews\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing guest reviews. Each dictionary should have 'guest_name' and 'review' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"guest_name\": {\"type\": \"string\"},\n                            \"review\": {\"type\": \"string\"}\n                        },\n                        \"required\": [\"guest_name\", \"review\"]\n                    }\n                }\n            },\n            \"required\": [\"reviews\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"response\": {\"type\": \"string\", \"description\": \"The response message.\"}\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you check and respond to my guest reviews?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the guest reviews as a list of dictionaries. Each dictionary should have 'guest_name' and 'review' keys.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here are my guest reviews: [{'guest_name': 'John', 'review': 'Great experience!'}, {'guest_name': 'Sarah', 'review': 'Could be better.'}]\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the guest reviews. I will check and respond to them now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"check_and_respond_to_guest_reviews\",\n        \"parameters\": {\n            \"reviews\": [\n                {\"guest_name\": \"John\", \"review\": \"Great experience!\"},\n                {\"guest_name\": \"Sarah\", \"review\": \"Could be better.\"}\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "check_and_respond_to_guest_reviews",
            "description": "Checks and responds to guest reviews.",
            "parameters": {
                "type": "object",
                "properties": {
                    "reviews": {
                        "type": "array",
                        "description": "A list of dictionaries containing guest reviews. Each dictionary should have 'guest_name' and 'review' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "guest_name": {
                                    "type": "string"
                                },
                                "review": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "guest_name",
                                "review"
                            ]
                        }
                    }
                },
                "required": [
                    "reviews"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string",
                        "description": "The response message."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you check and respond to my guest reviews?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the guest reviews as a list of dictionaries. Each dictionary should have 'guest_name' and 'review' keys."
            },
            {
                "role": "user",
                "text": "Here are my guest reviews: [{'guest_name': 'John', 'review': 'Great experience!'}, {'guest_name': 'Sarah', 'review': 'Could be better.'}]"
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the guest reviews. I will check and respond to them now."
            }
        ],
        "function_call": {
            "function_name": "check_and_respond_to_guest_reviews",
            "parameters": {
                "reviews": [
                    {
                        "guest_name": "John",
                        "review": "Great experience!"
                    },
                    {
                        "guest_name": "Sarah",
                        "review": "Could be better."
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def check_and_respond_to_guest_reviews(reviews: List[Dict[str, str]]) -> Dict[str, str]:\\n    \"\"\"\\n    Checks and responds to guest reviews.\\n\\n    Parameters:\\n        reviews (List[Dict[str, str]]): A list of dictionaries containing guest reviews.\\n                                        Each dictionary should have \\'guest_name\\' and \\'review\\' keys.\\n\\n    Returns:\\n        Dict[str, str]: A dictionary with \\'response\\' as a key and the response message as a value.\\n    \"\"\"\\n    ', 'function_description': {'name': 'check_and_respond_to_guest_reviews', 'description': 'Checks and responds to guest reviews.', 'parameters': {'type': 'object', 'properties': {'reviews': {'type': 'array', 'description': \"A list of dictionaries containing guest reviews. Each dictionary should have 'guest_name' and 'review' keys.\", 'items': {'type': 'object', 'properties': {'guest_name': {'type': 'string'}, 'review': {'type': 'string'}}, 'required': ['guest_name', 'review']}}}, 'required': ['reviews']}, 'returns': {'type': 'object', 'properties': {'response': {'type': 'string', 'description': 'The response message.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-8",
    "description": {
        "function_snippet": "def example_function(\n    num_tickets: int,\n    ticket_type: Dict[str, str]\n    event_details: str,\n    attendees: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders event tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        ticket_type (str): The type of ticket.\n        event_details (Dict[str, str]): Details about the event, should contain a date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing attendee details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"",
        "function_description": {
            "name": "example_function",
            "description": "Orders event tickets and returns the total price.",
            "parameters": {
                "type": "object",
                "properties": {
                    "num_tickets": {
                        "type": "integer",
                        "description": "The number of tickets to buy."
                    },
                    "ticket_type": {
                        "type": "object",
                        "description": "The type of ticket.",
                        "properties": {
                            "type": "string"
                        }
                    },
                    "event_details": {
                        "type": "object",
                        "description": "Details about the event, should contain a date in YYYY-MM-DD format.",
                        "properties": {
                            "date": {
                                "type": "string",
                                "description": "Event data in YYYY-MM-DD format."
                            }
                        },
                        "required": [
                            "date"
                        ]
                    },
                    "attendees": {
                        "type": "array",
                        "description": "A list of dictionaries containing attendee details. Each dictionary should have 'name' and 'age' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "age": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "age"
                            ]
                        }
                    }
                },
                "required": [
                    "num_tickets",
                    "ticket_type",
                    "event_details",
                    "attendees"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "total_price": {
                        "type": "float",
                        "description": "The total price for the tickets ordered."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"example_function\",\n        \"description\": \"Orders event tickets and returns the total price.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"num_tickets\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of tickets to buy.\"\n                },\n                \"ticket_type\": {\n                    \"type\": \"object\",\n                    \"description\": \"The type of ticket.\",\n                    \"properties\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"event_details\": {\n                    \"type\": \"object\",\n                    \"description\": \"Details about the event, should contain a date in YYYY-MM-DD format.\",\n                    \"properties\": {\n                        \"date\": {\n                            \"type\": \"string\",\n                            \"description\": \"Event data in YYYY-MM-DD format.\"\n                        }\n                    },\n                    \"required\": [\"date\"]\n                },\n                \"attendees\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing attendee details. Each dictionary should have 'name' and 'age' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\"type\": \"string\"},\n                            \"age\": {\"type\": \"string\"}\n                        },\n                        \"required\": [\"name\", \"age\"]\n                    }\n                }\n            },\n            \"required\": [\"num_tickets\", \"ticket_type\", \"event_details\", \"attendees\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"total_price\": {\n                    \"type\": \"float\",\n                    \"description\": \"The total price for the tickets ordered.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me order event tickets?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. How many tickets would you like to buy?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I would like to buy 2 tickets.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Okay. Could you please provide the type of ticket?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want the VIP ticket.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great. Can you give me some details about the event? Specifically, the date of the event.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The event is on 2022-12-31.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you. Lastly, I need the details of the attendees. Please provide their names and ages.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure. The first attendee is John, 25 years old. The second attendee is Sarah, 30 years old.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing all the necessary information. I will now proceed to order the tickets.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"example_function\",\n        \"parameters\": {\n            \"num_tickets\": 2,\n            \"ticket_type\": \"VIP\",\n            \"event_details\": {\"date\": \"2022-12-31\"},\n            \"attendees\": [\n                {\"name\": \"John\", \"age\": \"25\"},\n                {\"name\": \"Sarah\", \"age\": \"30\"}\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "example_function",
            "description": "Orders event tickets and returns the total price.",
            "parameters": {
                "type": "object",
                "properties": {
                    "num_tickets": {
                        "type": "integer",
                        "description": "The number of tickets to buy."
                    },
                    "ticket_type": {
                        "type": "object",
                        "description": "The type of ticket.",
                        "properties": {
                            "type": "string"
                        }
                    },
                    "event_details": {
                        "type": "object",
                        "description": "Details about the event, should contain a date in YYYY-MM-DD format.",
                        "properties": {
                            "date": {
                                "type": "string",
                                "description": "Event data in YYYY-MM-DD format."
                            }
                        },
                        "required": [
                            "date"
                        ]
                    },
                    "attendees": {
                        "type": "array",
                        "description": "A list of dictionaries containing attendee details. Each dictionary should have 'name' and 'age' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "age": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "age"
                            ]
                        }
                    }
                },
                "required": [
                    "num_tickets",
                    "ticket_type",
                    "event_details",
                    "attendees"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "total_price": {
                        "type": "float",
                        "description": "The total price for the tickets ordered."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me order event tickets?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. How many tickets would you like to buy?"
            },
            {
                "role": "user",
                "text": "I would like to buy 2 tickets."
            },
            {
                "role": "assistant",
                "text": "Okay. Could you please provide the type of ticket?"
            },
            {
                "role": "user",
                "text": "I want the VIP ticket."
            },
            {
                "role": "assistant",
                "text": "Great. Can you give me some details about the event? Specifically, the date of the event."
            },
            {
                "role": "user",
                "text": "The event is on 2022-12-31."
            },
            {
                "role": "assistant",
                "text": "Thank you. Lastly, I need the details of the attendees. Please provide their names and ages."
            },
            {
                "role": "user",
                "text": "Sure. The first attendee is John, 25 years old. The second attendee is Sarah, 30 years old."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing all the necessary information. I will now proceed to order the tickets."
            }
        ],
        "function_call": {
            "function_name": "example_function",
            "parameters": {
                "num_tickets": 2,
                "ticket_type": "VIP",
                "event_details": {
                    "date": "2022-12-31"
                },
                "attendees": [
                    {
                        "name": "John",
                        "age": "25"
                    },
                    {
                        "name": "Sarah",
                        "age": "30"
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def example_function(\\n    num_tickets: int,\\n    ticket_type: Dict[str, str]\\n    event_details: str,\\n    attendees: List[Dict[str, str]],\\n) -> Dict[str, float]:\\n    \"\"\"\\n    Orders event tickets and returns the total price.\\n\\n    Parameters:\\n        num_tickets (int): The number of tickets to buy.\\n        ticket_type (str): The type of ticket.\\n        event_details (Dict[str, str]): Details about the event, should contain a date in YYYY-MM-DD format.\\n        passengers (List[Dict[str, str]]): A list of dictionaries containing attendee details.\\n                                          Each dictionary should have \\'name\\' and \\'age\\' keys.\\n\\n    Returns:\\n        Dict[str, float]: A dictionary with \\'total_price\\' as a key and the total price as a value.\\n    \"\"\"', 'function_description': {'name': 'example_function', 'description': 'Orders event tickets and returns the total price.', 'parameters': {'type': 'object', 'properties': {'num_tickets': {'type': 'integer', 'description': 'The number of tickets to buy.'}, 'ticket_type': {'type': 'object', 'description': 'The type of ticket.', 'properties': {'type': 'string'}}, 'event_details': {'type': 'object', 'description': 'Details about the event, should contain a date in YYYY-MM-DD format.', 'properties': {'date': {'type': 'string', 'description': 'Event data in YYYY-MM-DD format.'}}, 'required': ['date']}, 'attendees': {'type': 'array', 'description': \"A list of dictionaries containing attendee details. Each dictionary should have 'name' and 'age' keys.\", 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'string'}}, 'required': ['name', 'age']}}}, 'required': ['num_tickets', 'ticket_type', 'event_details', 'attendees']}, 'returns': {'type': 'object', 'properties': {'total_price': {'type': 'float', 'description': 'The total price for the tickets ordered.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-9",
    "description": {
        "function_snippet": "def automate_payment_collection(\n    reservation_id: str,\n    guest_info: Dict[str, str],\n    payment_info: Dict[str, str]\n) -> Dict[str, str]:\n    \"\"\"\n    Automates the process for requesting and collecting payments from guests.\n\n    Parameters:\n        reservation_id (str): The unique identifier for the reservation.\n        guest_info (Dict[str, str]): A dictionary containing guest information.\n                                     Keys can include 'name', 'email', 'phone', etc.\n        payment_info (Dict[str, str]): A dictionary containing payment information.\n                                       Keys can include 'card_number', 'expiry_date', 'cvv', etc.\n\n    Returns:\n        Dict[str, str]: A dictionary with 'status' as a key and the payment status as a value.\n    \"\"\"",
        "function_description": {
            "name": "automate_payment_collection",
            "description": "Automates the process for requesting and collecting payments from guests.",
            "parameters": {
                "type": "object",
                "properties": {
                    "reservation_id": {
                        "type": "string",
                        "description": "The unique identifier for the reservation."
                    },
                    "guest_info": {
                        "type": "object",
                        "description": "A dictionary containing guest information. Keys can include 'name', 'email', 'phone', etc.",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ]
                    },
                    "payment_info": {
                        "type": "object",
                        "description": "A dictionary containing payment information. Keys can include 'card_number', 'expiry_date', 'cvv', etc.",
                        "properties": {
                            "card_number": {
                                "type": "string"
                            },
                            "expiry_date": {
                                "type": "string"
                            },
                            "cvv": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "card_number",
                            "expiry_date",
                            "cvv"
                        ]
                    }
                },
                "required": [
                    "reservation_id",
                    "guest_info",
                    "payment_info"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The payment status."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"automate_payment_collection\",\n        \"description\": \"Automates the process for requesting and collecting payments from guests.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"reservation_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The unique identifier for the reservation.\"\n                },\n                \"guest_info\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing guest information. Keys can include 'name', 'email', 'phone', etc.\",\n                    \"properties\": {\n                        \"name\": {\"type\": \"string\"},\n                        \"email\": {\"type\": \"string\"},\n                        \"phone\": {\"type\": \"string\"}\n                    },\n                    \"required\": [\"name\"]\n                },\n                \"payment_info\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing payment information. Keys can include 'card_number', 'expiry_date', 'cvv', etc.\",\n                    \"properties\": {\n                        \"card_number\": {\"type\": \"string\"},\n                        \"expiry_date\": {\"type\": \"string\"},\n                        \"cvv\": {\"type\": \"string\"}\n                    },\n                    \"required\": [\"card_number\", \"expiry_date\", \"cvv\"]\n                }\n            },\n            \"required\": [\"reservation_id\", \"guest_info\", \"payment_info\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"status\": {\"type\": \"string\", \"description\": \"The payment status.\"}\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you automate the payment collection for my reservation?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you provide me with the reservation ID?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, the reservation ID is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great. Now I need some guest information. Can you please provide the guest's name, email, and phone number?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The guest's name is John Doe, email is johndoe@example.com, and phone number is +1234567890.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Perfect. Lastly, I need the payment information including card number, expiry date, and CVV.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The card number is '1234567812345678', expiry date is '12/23', and CVV is '123'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing all the required information. I will now automate the payment collection process for your reservation.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"automate_payment_collection\",\n        \"parameters\": {\n            \"reservation_id\": \"12345\",\n            \"guest_info\": {\n                \"name\": \"John Doe\",\n                \"email\": \"johndoe@example.com\",\n                \"phone\": \"+1234567890\"\n            },\n            \"payment_info\": {\n                \"card_number\": \"1234567812345678\",\n                \"expiry_date\": \"12/23\",\n                \"cvv\": \"123\"\n            }\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "automate_payment_collection",
            "description": "Automates the process for requesting and collecting payments from guests.",
            "parameters": {
                "type": "object",
                "properties": {
                    "reservation_id": {
                        "type": "string",
                        "description": "The unique identifier for the reservation."
                    },
                    "guest_info": {
                        "type": "object",
                        "description": "A dictionary containing guest information. Keys can include 'name', 'email', 'phone', etc.",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ]
                    },
                    "payment_info": {
                        "type": "object",
                        "description": "A dictionary containing payment information. Keys can include 'card_number', 'expiry_date', 'cvv', etc.",
                        "properties": {
                            "card_number": {
                                "type": "string"
                            },
                            "expiry_date": {
                                "type": "string"
                            },
                            "cvv": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "card_number",
                            "expiry_date",
                            "cvv"
                        ]
                    }
                },
                "required": [
                    "reservation_id",
                    "guest_info",
                    "payment_info"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The payment status."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you automate the payment collection for my reservation?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you provide me with the reservation ID?"
            },
            {
                "role": "user",
                "text": "Yes, the reservation ID is '12345'."
            },
            {
                "role": "assistant",
                "text": "Great. Now I need some guest information. Can you please provide the guest's name, email, and phone number?"
            },
            {
                "role": "user",
                "text": "The guest's name is John Doe, email is johndoe@example.com, and phone number is +1234567890."
            },
            {
                "role": "assistant",
                "text": "Perfect. Lastly, I need the payment information including card number, expiry date, and CVV."
            },
            {
                "role": "user",
                "text": "The card number is '1234567812345678', expiry date is '12/23', and CVV is '123'."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing all the required information. I will now automate the payment collection process for your reservation."
            }
        ],
        "function_call": {
            "function_name": "automate_payment_collection",
            "parameters": {
                "reservation_id": "12345",
                "guest_info": {
                    "name": "John Doe",
                    "email": "johndoe@example.com",
                    "phone": "+1234567890"
                },
                "payment_info": {
                    "card_number": "1234567812345678",
                    "expiry_date": "12/23",
                    "cvv": "123"
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def automate_payment_collection(\\n    reservation_id: str,\\n    guest_info: Dict[str, str],\\n    payment_info: Dict[str, str]\\n) -> Dict[str, str]:\\n    \"\"\"\\n    Automates the process for requesting and collecting payments from guests.\\n\\n    Parameters:\\n        reservation_id (str): The unique identifier for the reservation.\\n        guest_info (Dict[str, str]): A dictionary containing guest information.\\n                                     Keys can include \\'name\\', \\'email\\', \\'phone\\', etc.\\n        payment_info (Dict[str, str]): A dictionary containing payment information.\\n                                       Keys can include \\'card_number\\', \\'expiry_date\\', \\'cvv\\', etc.\\n\\n    Returns:\\n        Dict[str, str]: A dictionary with \\'status\\' as a key and the payment status as a value.\\n    \"\"\"', 'function_description': {'name': 'automate_payment_collection', 'description': 'Automates the process for requesting and collecting payments from guests.', 'parameters': {'type': 'object', 'properties': {'reservation_id': {'type': 'string', 'description': 'The unique identifier for the reservation.'}, 'guest_info': {'type': 'object', 'description': \"A dictionary containing guest information. Keys can include 'name', 'email', 'phone', etc.\", 'properties': {'name': {'type': 'string'}, 'email': {'type': 'string'}, 'phone': {'type': 'string'}}, 'required': ['name']}, 'payment_info': {'type': 'object', 'description': \"A dictionary containing payment information. Keys can include 'card_number', 'expiry_date', 'cvv', etc.\", 'properties': {'card_number': {'type': 'string'}, 'expiry_date': {'type': 'string'}, 'cvv': {'type': 'string'}}, 'required': ['card_number', 'expiry_date', 'cvv']}}, 'required': ['reservation_id', 'guest_info', 'payment_info']}, 'returns': {'type': 'object', 'properties': {'status': {'type': 'string', 'description': 'The payment status.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-10",
    "description": {
        "function_snippet": "def manage_security_deposit_process(\n    action: str,\n    amount: float,\n    account: str,\n    transaction_id: int,\n) -> Dict[str, Union[str, float, int]]:\n    \"\"\"\n    Manages the security deposit process, including holds and releases.\n\n    Parameters:\n        action (str): The action to perform on the security deposit ('hold' or 'release').\n        amount (float): The amount of the security deposit.\n        account (str): The account to which the security deposit is associated.\n        transaction_id (int): The unique identifier of the transaction.\n\n    Returns:\n        Dict[str, Union[str, float, int]]: A dictionary with 'action', 'amount', 'account', and 'transaction_id' keys.\n    \"\"\"",
        "function_description": {
            "name": "manage_security_deposit_process",
            "description": "Manages the security deposit process, including holds and releases.",
            "parameters": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the security deposit ('hold' or 'release')."
                    },
                    "amount": {
                        "type": "float",
                        "description": "The amount of the security deposit."
                    },
                    "account": {
                        "type": "string",
                        "description": "The account to which the security deposit is associated."
                    },
                    "transaction_id": {
                        "type": "integer",
                        "description": "The unique identifier of the transaction."
                    }
                },
                "required": [
                    "action",
                    "amount",
                    "account",
                    "transaction_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "float"
                    },
                    "account": {
                        "type": "string"
                    },
                    "transaction_id": {
                        "type": "integer"
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"manage_security_deposit_process\",\n        \"description\": \"Manages the security deposit process, including holds and releases.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\n                    \"type\": \"string\",\n                    \"description\": \"The action to perform on the security deposit ('hold' or 'release').\"\n                },\n                \"amount\": {\n                    \"type\": \"float\",\n                    \"description\": \"The amount of the security deposit.\"\n                },\n                \"account\": {\n                    \"type\": \"string\",\n                    \"description\": \"The account to which the security deposit is associated.\"\n                },\n                \"transaction_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The unique identifier of the transaction.\"\n                }\n            },\n            \"required\": [\"action\", \"amount\", \"account\", \"transaction_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\"type\": \"string\"},\n                \"amount\": {\"type\": \"float\"},\n                \"account\": {\"type\": \"string\"},\n                \"transaction_id\": {\"type\": \"integer\"}\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me manage my security deposit?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! What action would you like to perform on your security deposit? (hold/release)\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I would like to release my security deposit.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, please provide the amount of your security deposit.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The amount of my security deposit is $500.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! Can you also provide your account number?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My account number is ABC123.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Lastly, please provide the transaction ID of your security deposit.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The transaction ID is 123456789.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will now proceed to release your security deposit.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"manage_security_deposit_process\",\n        \"parameters\": {\n            \"action\": \"release\",\n            \"amount\": 500.0,\n            \"account\": \"ABC123\",\n            \"transaction_id\": 123456789\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "manage_security_deposit_process",
            "description": "Manages the security deposit process, including holds and releases.",
            "parameters": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the security deposit ('hold' or 'release')."
                    },
                    "amount": {
                        "type": "float",
                        "description": "The amount of the security deposit."
                    },
                    "account": {
                        "type": "string",
                        "description": "The account to which the security deposit is associated."
                    },
                    "transaction_id": {
                        "type": "integer",
                        "description": "The unique identifier of the transaction."
                    }
                },
                "required": [
                    "action",
                    "amount",
                    "account",
                    "transaction_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "float"
                    },
                    "account": {
                        "type": "string"
                    },
                    "transaction_id": {
                        "type": "integer"
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me manage my security deposit?"
            },
            {
                "role": "assistant",
                "text": "Of course! What action would you like to perform on your security deposit? (hold/release)"
            },
            {
                "role": "user",
                "text": "I would like to release my security deposit."
            },
            {
                "role": "assistant",
                "text": "Sure, please provide the amount of your security deposit."
            },
            {
                "role": "user",
                "text": "The amount of my security deposit is $500."
            },
            {
                "role": "assistant",
                "text": "Great! Can you also provide your account number?"
            },
            {
                "role": "user",
                "text": "My account number is ABC123."
            },
            {
                "role": "assistant",
                "text": "Lastly, please provide the transaction ID of your security deposit."
            },
            {
                "role": "user",
                "text": "The transaction ID is 123456789."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the information. I will now proceed to release your security deposit."
            }
        ],
        "function_call": {
            "function_name": "manage_security_deposit_process",
            "parameters": {
                "action": "release",
                "amount": 500.0,
                "account": "ABC123",
                "transaction_id": 123456789
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def manage_security_deposit_process(\\n    action: str,\\n    amount: float,\\n    account: str,\\n    transaction_id: int,\\n) -> Dict[str, Union[str, float, int]]:\\n    \"\"\"\\n    Manages the security deposit process, including holds and releases.\\n\\n    Parameters:\\n        action (str): The action to perform on the security deposit (\\'hold\\' or \\'release\\').\\n        amount (float): The amount of the security deposit.\\n        account (str): The account to which the security deposit is associated.\\n        transaction_id (int): The unique identifier of the transaction.\\n\\n    Returns:\\n        Dict[str, Union[str, float, int]]: A dictionary with \\'action\\', \\'amount\\', \\'account\\', and \\'transaction_id\\' keys.\\n    \"\"\"', 'function_description': {'name': 'manage_security_deposit_process', 'description': 'Manages the security deposit process, including holds and releases.', 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'description': \"The action to perform on the security deposit ('hold' or 'release').\"}, 'amount': {'type': 'float', 'description': 'The amount of the security deposit.'}, 'account': {'type': 'string', 'description': 'The account to which the security deposit is associated.'}, 'transaction_id': {'type': 'integer', 'description': 'The unique identifier of the transaction.'}}, 'required': ['action', 'amount', 'account', 'transaction_id']}, 'returns': {'type': 'object', 'properties': {'action': {'type': 'string'}, 'amount': {'type': 'float'}, 'account': {'type': 'string'}, 'transaction_id': {'type': 'integer'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-11",
    "description": {
        "function_snippet": "def monitor_and_update_property_availability(\n    platforms: List[str],\n    property_id: str,\n) -> None:\n    \"\"\"\n    Monitor and update property availability across multiple platforms if listed on more than Airbnb.\n\n    Parameters:\n        platforms (List[str]): A list of platform names where the property is listed.\n        property_id (str): The ID of the property to monitor and update.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "monitor_and_update_property_availability",
            "description": "Monitor and update property availability across multiple platforms if listed on more than Airbnb.",
            "parameters": {
                "type": "object",
                "properties": {
                    "platforms": {
                        "type": "array",
                        "description": "A list of platform names where the property is listed.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "property_id": {
                        "type": "string",
                        "description": "The ID of the property to monitor and update."
                    }
                },
                "required": [
                    "platforms",
                    "property_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"monitor_and_update_property_availability\",\n        \"description\": \"Monitor and update property availability across multiple platforms if listed on more than Airbnb.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"platforms\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of platform names where the property is listed.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"property_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the property to monitor and update.\"\n                }\n            },\n            \"required\": [\"platforms\", \"property_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you monitor and update the availability of my property?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the platforms where your property is listed and the property ID.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My property is listed on Airbnb, Booking.com, and Expedia. The property ID is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will now monitor and update the availability of your property.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"monitor_and_update_property_availability\",\n        \"parameters\": {\n            \"platforms\": [\"Airbnb\", \"Booking.com\", \"Expedia\"],\n            \"property_id\": \"12345\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "monitor_and_update_property_availability",
            "description": "Monitor and update property availability across multiple platforms if listed on more than Airbnb.",
            "parameters": {
                "type": "object",
                "properties": {
                    "platforms": {
                        "type": "array",
                        "description": "A list of platform names where the property is listed.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "property_id": {
                        "type": "string",
                        "description": "The ID of the property to monitor and update."
                    }
                },
                "required": [
                    "platforms",
                    "property_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you monitor and update the availability of my property?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the platforms where your property is listed and the property ID."
            },
            {
                "role": "user",
                "text": "My property is listed on Airbnb, Booking.com, and Expedia. The property ID is '12345'."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the information. I will now monitor and update the availability of your property."
            }
        ],
        "function_call": {
            "function_name": "monitor_and_update_property_availability",
            "parameters": {
                "platforms": [
                    "Airbnb",
                    "Booking.com",
                    "Expedia"
                ],
                "property_id": "12345"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def monitor_and_update_property_availability(\\n    platforms: List[str],\\n    property_id: str,\\n) -> None:\\n    \"\"\"\\n    Monitor and update property availability across multiple platforms if listed on more than Airbnb.\\n\\n    Parameters:\\n        platforms (List[str]): A list of platform names where the property is listed.\\n        property_id (str): The ID of the property to monitor and update.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'monitor_and_update_property_availability', 'description': 'Monitor and update property availability across multiple platforms if listed on more than Airbnb.', 'parameters': {'type': 'object', 'properties': {'platforms': {'type': 'array', 'description': 'A list of platform names where the property is listed.', 'items': {'type': 'string'}}, 'property_id': {'type': 'string', 'description': 'The ID of the property to monitor and update.'}}, 'required': ['platforms', 'property_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-12",
    "description": {
        "function_snippet": "def schedule_cleaning_services(\n    check_out_date: str,\n    cleaning_company: str,\n    cleaning_duration: int,\n    cleaning_schedule: Dict[str, List[str]],\n) -> None:\n    \"\"\"\n    Automatically schedules cleaning services after guest check-out.\n\n    Parameters:\n        check_out_date (str): The date when the guest checks out in YYYY-MM-DD format.\n        cleaning_company (str): The name of the cleaning company.\n        cleaning_duration (int): The duration of the cleaning service in hours.\n        cleaning_schedule (Dict[str, List[str]]): A dictionary containing the cleaning schedule.\n                                              Each key is a date in YYYY-MM-DD format,\n                                              and each value is a list of scheduled services.\n\n    Returns:\n        None\n    \"\"\"\n\n",
        "function_description": {
            "name": "schedule_cleaning_services",
            "description": "Automatically schedules cleaning services after guest check-out.",
            "parameters": {
                "type": "object",
                "properties": {
                    "check_out_date": {
                        "type": "string",
                        "description": "The date when the guest checks out in YYYY-MM-DD format."
                    },
                    "cleaning_company": {
                        "type": "string",
                        "description": "The name of the cleaning company."
                    },
                    "cleaning_duration": {
                        "type": "integer",
                        "description": "The duration of the cleaning service in hours."
                    },
                    "cleaning_schedule": {
                        "type": "object",
                        "description": "A dictionary containing the cleaning schedule. Each key is a date in YYYY-MM-DD format, and each value is a list of scheduled services.",
                        "properties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "required": [
                    "check_out_date",
                    "cleaning_company",
                    "cleaning_duration",
                    "cleaning_schedule"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"schedule_cleaning_services\",\n        \"description\": \"Automatically schedules cleaning services after guest check-out.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"check_out_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The date when the guest checks out in YYYY-MM-DD format.\"\n                },\n                \"cleaning_company\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the cleaning company.\"\n                },\n                \"cleaning_duration\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The duration of the cleaning service in hours.\"\n                },\n                \"cleaning_schedule\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing the cleaning schedule. Each key is a date in YYYY-MM-DD format, and each value is a list of scheduled services.\",\n                    \"properties\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"required\": [\"check_out_date\", \"cleaning_company\", \"cleaning_duration\", \"cleaning_schedule\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me schedule a cleaning service after my check-out?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Can you please provide me with the following information:\\n- Your check-out date in YYYY-MM-DD format\\n- The name of the cleaning company\\n- The duration of the cleaning service in hours\\n- Your cleaning schedule as a dictionary, where each key is a date in YYYY-MM-DD format and each value is a list of scheduled services.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My check-out date is '2022-12-31', the cleaning company is 'CleanCo', the cleaning duration is 2 hours, and the cleaning schedule is {'2022-12-31': ['Service A', 'Service B'], '2023-01-01': ['Service C']}.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will now schedule the cleaning service for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"schedule_cleaning_services\",\n        \"parameters\": {\n            \"check_out_date\": \"2022-12-31\",\n            \"cleaning_company\": \"CleanCo\",\n            \"cleaning_duration\": 2,\n            \"cleaning_schedule\": {\n                \"2022-12-31\": [\"Service A\", \"Service B\"],\n                \"2023-01-01\": [\"Service C\"]\n            }\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "schedule_cleaning_services",
            "description": "Automatically schedules cleaning services after guest check-out.",
            "parameters": {
                "type": "object",
                "properties": {
                    "check_out_date": {
                        "type": "string",
                        "description": "The date when the guest checks out in YYYY-MM-DD format."
                    },
                    "cleaning_company": {
                        "type": "string",
                        "description": "The name of the cleaning company."
                    },
                    "cleaning_duration": {
                        "type": "integer",
                        "description": "The duration of the cleaning service in hours."
                    },
                    "cleaning_schedule": {
                        "type": "object",
                        "description": "A dictionary containing the cleaning schedule. Each key is a date in YYYY-MM-DD format, and each value is a list of scheduled services.",
                        "properties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "required": [
                    "check_out_date",
                    "cleaning_company",
                    "cleaning_duration",
                    "cleaning_schedule"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me schedule a cleaning service after my check-out?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Can you please provide me with the following information:\n- Your check-out date in YYYY-MM-DD format\n- The name of the cleaning company\n- The duration of the cleaning service in hours\n- Your cleaning schedule as a dictionary, where each key is a date in YYYY-MM-DD format and each value is a list of scheduled services."
            },
            {
                "role": "user",
                "text": "My check-out date is '2022-12-31', the cleaning company is 'CleanCo', the cleaning duration is 2 hours, and the cleaning schedule is {'2022-12-31': ['Service A', 'Service B'], '2023-01-01': ['Service C']}."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will now schedule the cleaning service for you."
            }
        ],
        "function_call": {
            "function_name": "schedule_cleaning_services",
            "parameters": {
                "check_out_date": "2022-12-31",
                "cleaning_company": "CleanCo",
                "cleaning_duration": 2,
                "cleaning_schedule": {
                    "2022-12-31": [
                        "Service A",
                        "Service B"
                    ],
                    "2023-01-01": [
                        "Service C"
                    ]
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def schedule_cleaning_services(\\n    check_out_date: str,\\n    cleaning_company: str,\\n    cleaning_duration: int,\\n    cleaning_schedule: Dict[str, List[str]],\\n) -> None:\\n    \"\"\"\\n    Automatically schedules cleaning services after guest check-out.\\n\\n    Parameters:\\n        check_out_date (str): The date when the guest checks out in YYYY-MM-DD format.\\n        cleaning_company (str): The name of the cleaning company.\\n        cleaning_duration (int): The duration of the cleaning service in hours.\\n        cleaning_schedule (Dict[str, List[str]]): A dictionary containing the cleaning schedule.\\n                                              Each key is a date in YYYY-MM-DD format,\\n                                              and each value is a list of scheduled services.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n\\n', 'function_description': {'name': 'schedule_cleaning_services', 'description': 'Automatically schedules cleaning services after guest check-out.', 'parameters': {'type': 'object', 'properties': {'check_out_date': {'type': 'string', 'description': 'The date when the guest checks out in YYYY-MM-DD format.'}, 'cleaning_company': {'type': 'string', 'description': 'The name of the cleaning company.'}, 'cleaning_duration': {'type': 'integer', 'description': 'The duration of the cleaning service in hours.'}, 'cleaning_schedule': {'type': 'object', 'description': 'A dictionary containing the cleaning schedule. Each key is a date in YYYY-MM-DD format, and each value is a list of scheduled services.', 'properties': {'type': 'array', 'items': {'type': 'string'}}}}, 'required': ['check_out_date', 'cleaning_company', 'cleaning_duration', 'cleaning_schedule']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-13",
    "description": {
        "function_snippet": "def schedule_maintenance_tasks(\n    task_type: str,\n    frequency: str,\n    start_date: str,\n    end_date: str,\n    technician: str,\n) -> str:\n    \"\"\"\n    Automatically schedule maintenance tasks, like HVAC service or pest control.\n\n    Parameters:\n        task_type (str): The type of maintenance task to be scheduled.\n        frequency (str): The frequency at which the task should be performed.\n        start_date (str): The start date for scheduling the maintenance tasks.\n        end_date (str): The end date for scheduling the maintenance tasks.\n        technician (str): The name of the technician responsible for performing the tasks.\n\n    Returns:\n        str: A confirmation message indicating that the maintenance tasks have been scheduled.\n    \"\"\"\n",
        "function_description": {
            "name": "schedule_maintenance_tasks",
            "description": "Automatically schedule maintenance tasks, like HVAC service or pest control.",
            "parameters": {
                "type": "object",
                "properties": {
                    "task_type": {
                        "type": "string",
                        "description": "The type of maintenance task to be scheduled."
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency at which the task should be performed."
                    },
                    "start_date": {
                        "type": "string",
                        "description": "The start date for scheduling the maintenance tasks."
                    },
                    "end_date": {
                        "type": "string",
                        "description": "The end date for scheduling the maintenance tasks."
                    },
                    "technician": {
                        "type": "string",
                        "description": "The name of the technician responsible for performing the tasks."
                    }
                },
                "required": [
                    "task_type",
                    "frequency",
                    "start_date",
                    "end_date",
                    "technician"
                ]
            },
            "returns": {
                "type": "string",
                "description": "A confirmation message indicating that the maintenance tasks have been scheduled."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"schedule_maintenance_tasks\",\n        \"description\": \"Automatically schedule maintenance tasks, like HVAC service or pest control.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"task_type\": {\n                    \"type\": \"string\",\n                    \"description\": \"The type of maintenance task to be scheduled.\"\n                },\n                \"frequency\": {\n                    \"type\": \"string\",\n                    \"description\": \"The frequency at which the task should be performed.\"\n                },\n                \"start_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The start date for scheduling the maintenance tasks.\"\n                },\n                \"end_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The end date for scheduling the maintenance tasks.\"\n                },\n                \"technician\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the technician responsible for performing the tasks.\"\n                }\n            },\n            \"required\": [\"task_type\", \"frequency\", \"start_date\", \"end_date\", \"technician\"]\n        },\n        \"returns\": {\n            \"type\": \"string\",\n            \"description\": \"A confirmation message indicating that the maintenance tasks have been scheduled.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me schedule a maintenance task?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I can assist you with that. Please provide the following details:\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The type of maintenance task I need to schedule is HVAC service.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it. How often should the task be performed?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The task should be performed monthly.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"When would you like to start scheduling the maintenance tasks?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I would like to start scheduling from next month.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"And when should the scheduling end?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The scheduling should end after 6 months.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Lastly, please provide the name of the technician responsible for performing the tasks.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The technician's name is John Doe.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will schedule the maintenance tasks as per your requirements. Please wait a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"schedule_maintenance_tasks\",\n        \"parameters\": {\n            \"task_type\": \"HVAC service\",\n            \"frequency\": \"monthly\",\n            \"start_date\": \"next month\",\n            \"end_date\": \"after 6 months\",\n            \"technician\": \"John Doe\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "schedule_maintenance_tasks",
            "description": "Automatically schedule maintenance tasks, like HVAC service or pest control.",
            "parameters": {
                "type": "object",
                "properties": {
                    "task_type": {
                        "type": "string",
                        "description": "The type of maintenance task to be scheduled."
                    },
                    "frequency": {
                        "type": "string",
                        "description": "The frequency at which the task should be performed."
                    },
                    "start_date": {
                        "type": "string",
                        "description": "The start date for scheduling the maintenance tasks."
                    },
                    "end_date": {
                        "type": "string",
                        "description": "The end date for scheduling the maintenance tasks."
                    },
                    "technician": {
                        "type": "string",
                        "description": "The name of the technician responsible for performing the tasks."
                    }
                },
                "required": [
                    "task_type",
                    "frequency",
                    "start_date",
                    "end_date",
                    "technician"
                ]
            },
            "returns": {
                "type": "string",
                "description": "A confirmation message indicating that the maintenance tasks have been scheduled."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me schedule a maintenance task?"
            },
            {
                "role": "assistant",
                "text": "Of course! I can assist you with that. Please provide the following details:"
            },
            {
                "role": "user",
                "text": "The type of maintenance task I need to schedule is HVAC service."
            },
            {
                "role": "assistant",
                "text": "Got it. How often should the task be performed?"
            },
            {
                "role": "user",
                "text": "The task should be performed monthly."
            },
            {
                "role": "assistant",
                "text": "When would you like to start scheduling the maintenance tasks?"
            },
            {
                "role": "user",
                "text": "I would like to start scheduling from next month."
            },
            {
                "role": "assistant",
                "text": "And when should the scheduling end?"
            },
            {
                "role": "user",
                "text": "The scheduling should end after 6 months."
            },
            {
                "role": "assistant",
                "text": "Lastly, please provide the name of the technician responsible for performing the tasks."
            },
            {
                "role": "user",
                "text": "The technician's name is John Doe."
            },
            {
                "role": "assistant",
                "text": "Alright, I will schedule the maintenance tasks as per your requirements. Please wait a moment."
            }
        ],
        "function_call": {
            "function_name": "schedule_maintenance_tasks",
            "parameters": {
                "task_type": "HVAC service",
                "frequency": "monthly",
                "start_date": "next month",
                "end_date": "after 6 months",
                "technician": "John Doe"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def schedule_maintenance_tasks(\\n    task_type: str,\\n    frequency: str,\\n    start_date: str,\\n    end_date: str,\\n    technician: str,\\n) -> str:\\n    \"\"\"\\n    Automatically schedule maintenance tasks, like HVAC service or pest control.\\n\\n    Parameters:\\n        task_type (str): The type of maintenance task to be scheduled.\\n        frequency (str): The frequency at which the task should be performed.\\n        start_date (str): The start date for scheduling the maintenance tasks.\\n        end_date (str): The end date for scheduling the maintenance tasks.\\n        technician (str): The name of the technician responsible for performing the tasks.\\n\\n    Returns:\\n        str: A confirmation message indicating that the maintenance tasks have been scheduled.\\n    \"\"\"\\n', 'function_description': {'name': 'schedule_maintenance_tasks', 'description': 'Automatically schedule maintenance tasks, like HVAC service or pest control.', 'parameters': {'type': 'object', 'properties': {'task_type': {'type': 'string', 'description': 'The type of maintenance task to be scheduled.'}, 'frequency': {'type': 'string', 'description': 'The frequency at which the task should be performed.'}, 'start_date': {'type': 'string', 'description': 'The start date for scheduling the maintenance tasks.'}, 'end_date': {'type': 'string', 'description': 'The end date for scheduling the maintenance tasks.'}, 'technician': {'type': 'string', 'description': 'The name of the technician responsible for performing the tasks.'}}, 'required': ['task_type', 'frequency', 'start_date', 'end_date', 'technician']}, 'returns': {'type': 'string', 'description': 'A confirmation message indicating that the maintenance tasks have been scheduled.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-14",
    "description": {
        "function_snippet": "def track_and_reorder_supplies(\n    supplies: Dict[str, int],\n    reorder_threshold: int,\n) -> None:\n    \"\"\"\n    Tracks and reorders supplies when the quantity falls below the reorder threshold.\n\n    Parameters:\n        supplies (Dict[str, int]): A dictionary containing the current quantity of supplies.\n        reorder_threshold (int): The quantity at which supplies should be reordered.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "track_and_reorder_supplies",
            "description": "Tracks and reorders supplies when the quantity falls below the reorder threshold.",
            "parameters": {
                "type": "object",
                "properties": {
                    "supplies": {
                        "type": "object",
                        "description": "A dictionary containing the current quantity of supplies.",
                        "properties": {
                            "type": "integer"
                        }
                    },
                    "reorder_threshold": {
                        "type": "integer",
                        "description": "The quantity at which supplies should be reordered."
                    }
                },
                "required": [
                    "supplies",
                    "reorder_threshold"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "None": {
                        "type": "None",
                        "description": "This function does not return any value."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"track_and_reorder_supplies\",\n        \"description\": \"Tracks and reorders supplies when the quantity falls below the reorder threshold.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"supplies\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing the current quantity of supplies.\",\n                    \"properties\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"reorder_threshold\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The quantity at which supplies should be reordered.\"\n                }\n            },\n            \"required\": [\"supplies\", \"reorder_threshold\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"None\": {\n                    \"type\": \"None\",\n                    \"description\": \"This function does not return any value.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you track and reorder my supplies?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you please provide me with the current quantity of supplies and the reorder threshold?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, the current quantity of supplies is {'pens': 10, 'paper': 20} and the reorder threshold is 5.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will track and reorder your supplies now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"track_and_reorder_supplies\",\n        \"parameters\": {\n            \"supplies\": {\n                \"pens\": 10,\n                \"paper\": 20\n            },\n            \"reorder_threshold\": 5\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "track_and_reorder_supplies",
            "description": "Tracks and reorders supplies when the quantity falls below the reorder threshold.",
            "parameters": {
                "type": "object",
                "properties": {
                    "supplies": {
                        "type": "object",
                        "description": "A dictionary containing the current quantity of supplies.",
                        "properties": {
                            "type": "integer"
                        }
                    },
                    "reorder_threshold": {
                        "type": "integer",
                        "description": "The quantity at which supplies should be reordered."
                    }
                },
                "required": [
                    "supplies",
                    "reorder_threshold"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "None": {
                        "type": "None",
                        "description": "This function does not return any value."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you track and reorder my supplies?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you please provide me with the current quantity of supplies and the reorder threshold?"
            },
            {
                "role": "user",
                "text": "Yes, the current quantity of supplies is {'pens': 10, 'paper': 20} and the reorder threshold is 5."
            },
            {
                "role": "assistant",
                "text": "Great, I will track and reorder your supplies now."
            }
        ],
        "function_call": {
            "function_name": "track_and_reorder_supplies",
            "parameters": {
                "supplies": {
                    "pens": 10,
                    "paper": 20
                },
                "reorder_threshold": 5
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def track_and_reorder_supplies(\\n    supplies: Dict[str, int],\\n    reorder_threshold: int,\\n) -> None:\\n    \"\"\"\\n    Tracks and reorders supplies when the quantity falls below the reorder threshold.\\n\\n    Parameters:\\n        supplies (Dict[str, int]): A dictionary containing the current quantity of supplies.\\n        reorder_threshold (int): The quantity at which supplies should be reordered.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'track_and_reorder_supplies', 'description': 'Tracks and reorders supplies when the quantity falls below the reorder threshold.', 'parameters': {'type': 'object', 'properties': {'supplies': {'type': 'object', 'description': 'A dictionary containing the current quantity of supplies.', 'properties': {'type': 'integer'}}, 'reorder_threshold': {'type': 'integer', 'description': 'The quantity at which supplies should be reordered.'}}, 'required': ['supplies', 'reorder_threshold']}, 'returns': {'type': 'object', 'properties': {'None': {'type': 'None', 'description': 'This function does not return any value.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-15",
    "description": {
        "function_snippet": "def generate_and_send_invoices(\n    additional_services: List[str],\n    fees: List[float],\n    late_check_out: bool,\n) -> None:\n    \"\"\"\n    Generate and send invoices for additional services or fees, like late check-out.\n\n    Parameters:\n        additional_services (List[str]): A list of additional services requested.\n        fees (List[float]): A list of fees associated with each additional service.\n        late_check_out (bool): Indicates whether late check-out is requested.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "generate_and_send_invoices",
            "description": "Generate and send invoices for additional services or fees, like late check-out.",
            "parameters": {
                "type": "object",
                "properties": {
                    "additional_services": {
                        "type": "array",
                        "description": "A list of additional services requested.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "fees": {
                        "type": "array",
                        "description": "A list of fees associated with each additional service.",
                        "items": {
                            "type": "float"
                        }
                    },
                    "late_check_out": {
                        "type": "boolean",
                        "description": "Indicates whether late check-out is requested."
                    }
                },
                "required": [
                    "additional_services",
                    "fees",
                    "late_check_out"
                ]
            },
            "returns": {
                "type": "null"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"generate_and_send_invoices\",\n        \"description\": \"Generate and send invoices for additional services or fees, like late check-out.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"additional_services\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of additional services requested.\",\n                    \"items\": {\"type\": \"string\"}\n                },\n                \"fees\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of fees associated with each additional service.\",\n                    \"items\": {\"type\": \"float\"}\n                },\n                \"late_check_out\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Indicates whether late check-out is requested.\"\n                }\n            },\n            \"required\": [\"additional_services\", \"fees\", \"late_check_out\"]\n        },\n        \"returns\": {\"type\": \"null\"}\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you generate and send invoices for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Could you provide me with the additional services, fees, and whether late check-out is requested?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I need invoices for the following additional services: ['room service', 'laundry']. The fees associated with each service are [10.5, 7.8]. Also, late check-out is requested.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! Generating and sending invoices now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"generate_and_send_invoices\",\n        \"parameters\": {\n            \"additional_services\": [\"room service\", \"laundry\"],\n            \"fees\": [10.5, 7.8],\n            \"late_check_out\": true\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "generate_and_send_invoices",
            "description": "Generate and send invoices for additional services or fees, like late check-out.",
            "parameters": {
                "type": "object",
                "properties": {
                    "additional_services": {
                        "type": "array",
                        "description": "A list of additional services requested.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "fees": {
                        "type": "array",
                        "description": "A list of fees associated with each additional service.",
                        "items": {
                            "type": "float"
                        }
                    },
                    "late_check_out": {
                        "type": "boolean",
                        "description": "Indicates whether late check-out is requested."
                    }
                },
                "required": [
                    "additional_services",
                    "fees",
                    "late_check_out"
                ]
            },
            "returns": {
                "type": "null"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you generate and send invoices for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Could you provide me with the additional services, fees, and whether late check-out is requested?"
            },
            {
                "role": "user",
                "text": "I need invoices for the following additional services: ['room service', 'laundry']. The fees associated with each service are [10.5, 7.8]. Also, late check-out is requested."
            },
            {
                "role": "assistant",
                "text": "Great! Generating and sending invoices now."
            }
        ],
        "function_call": {
            "function_name": "generate_and_send_invoices",
            "parameters": {
                "additional_services": [
                    "room service",
                    "laundry"
                ],
                "fees": [
                    10.5,
                    7.8
                ],
                "late_check_out": true
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def generate_and_send_invoices(\\n    additional_services: List[str],\\n    fees: List[float],\\n    late_check_out: bool,\\n) -> None:\\n    \"\"\"\\n    Generate and send invoices for additional services or fees, like late check-out.\\n\\n    Parameters:\\n        additional_services (List[str]): A list of additional services requested.\\n        fees (List[float]): A list of fees associated with each additional service.\\n        late_check_out (bool): Indicates whether late check-out is requested.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'generate_and_send_invoices', 'description': 'Generate and send invoices for additional services or fees, like late check-out.', 'parameters': {'type': 'object', 'properties': {'additional_services': {'type': 'array', 'description': 'A list of additional services requested.', 'items': {'type': 'string'}}, 'fees': {'type': 'array', 'description': 'A list of fees associated with each additional service.', 'items': {'type': 'float'}}, 'late_check_out': {'type': 'boolean', 'description': 'Indicates whether late check-out is requested.'}}, 'required': ['additional_services', 'fees', 'late_check_out']}, 'returns': {'type': 'null'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-16",
    "description": {
        "function_snippet": "def send_alerts_for_immediate_action() -> None:\n    \"\"\"\n    Sends alerts for immediate action needed, like urgent maintenance issues or negative reviews.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "send_alerts_for_immediate_action",
            "description": "Sends alerts for immediate action needed, like urgent maintenance issues or negative reviews.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"send_alerts_for_immediate_action\",\n        \"description\": \"Sends alerts for immediate action needed, like urgent maintenance issues or negative reviews.\",\n        \"parameters\": {},\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you send me alerts for immediate action?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Do you have any specific issues in mind that you want to be alerted about?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, I want to be alerted about any urgent maintenance issues or negative reviews.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it. I will set up the alerts for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"send_alerts_for_immediate_action\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "send_alerts_for_immediate_action",
            "description": "Sends alerts for immediate action needed, like urgent maintenance issues or negative reviews.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you send me alerts for immediate action?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Do you have any specific issues in mind that you want to be alerted about?"
            },
            {
                "role": "user",
                "text": "Yes, I want to be alerted about any urgent maintenance issues or negative reviews."
            },
            {
                "role": "assistant",
                "text": "Got it. I will set up the alerts for you."
            }
        ],
        "function_call": {
            "function_name": "send_alerts_for_immediate_action",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def send_alerts_for_immediate_action() -> None:\\n    \"\"\"\\n    Sends alerts for immediate action needed, like urgent maintenance issues or negative reviews.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'send_alerts_for_immediate_action', 'description': 'Sends alerts for immediate action needed, like urgent maintenance issues or negative reviews.', 'parameters': {}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-17",
    "description": {
        "function_snippet": "def automate_check_in_and_check_out(\n    user_id: str,\n    check_in_date: str,\n    check_out_date: str,\n    smart_locks: List[str],\n    key_exchange_service: bool,\n) -> bool:\n    \"\"\"\n    Automates check-in and check-out processes using smart locks or key exchange services.\n\n    Parameters:\n        user_id (str): The user's identification.\n        check_in_date (str): The date of check-in in YYYY-MM-DD format.\n        check_out_date (str): The date of check-out in YYYY-MM-DD format.\n        smart_locks (List[str]): A list of smart locks available for check-in and check-out.\n        key_exchange_service (bool): Indicates if a key exchange service is available.\n\n    Returns:\n        bool: True if the check-in and check-out processes were successfully automated, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "automate_check_in_and_check_out",
            "description": "Automates check-in and check-out processes using smart locks or key exchange services.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's identification."
                    },
                    "check_in_date": {
                        "type": "string",
                        "description": "The date of check-in in YYYY-MM-DD format."
                    },
                    "check_out_date": {
                        "type": "string",
                        "description": "The date of check-out in YYYY-MM-DD format."
                    },
                    "smart_locks": {
                        "type": "array",
                        "description": "A list of smart locks available for check-in and check-out.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key_exchange_service": {
                        "type": "boolean",
                        "description": "Indicates if a key exchange service is available."
                    }
                },
                "required": [
                    "user_id",
                    "check_in_date",
                    "check_out_date",
                    "smart_locks",
                    "key_exchange_service"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the check-in and check-out processes were successfully automated, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"automate_check_in_and_check_out\",\n        \"description\": \"Automates check-in and check-out processes using smart locks or key exchange services.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The user's identification.\"\n                },\n                \"check_in_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The date of check-in in YYYY-MM-DD format.\"\n                },\n                \"check_out_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The date of check-out in YYYY-MM-DD format.\"\n                },\n                \"smart_locks\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of smart locks available for check-in and check-out.\",\n                    \"items\": {\"type\": \"string\"}\n                },\n                \"key_exchange_service\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Indicates if a key exchange service is available.\"\n                }\n            },\n            \"required\": [\"user_id\", \"check_in_date\", \"check_out_date\", \"smart_locks\", \"key_exchange_service\"]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the check-in and check-out processes were successfully automated, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you automate my check-in and check-out processes using smart locks?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with your user ID, check-in date, check-out date, list of smart locks available, and if a key exchange service is available.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My user ID is '12345', check-in date is '2022-01-01', check-out date is '2022-01-05', I have smart locks 'lock1' and 'lock2', and a key exchange service is available.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm automating your check-in and check-out processes now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"automate_check_in_and_check_out\",\n        \"parameters\": {\n            \"user_id\": \"12345\",\n            \"check_in_date\": \"2022-01-01\",\n            \"check_out_date\": \"2022-01-05\",\n            \"smart_locks\": [\"lock1\", \"lock2\"],\n            \"key_exchange_service\": true\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "automate_check_in_and_check_out",
            "description": "Automates check-in and check-out processes using smart locks or key exchange services.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's identification."
                    },
                    "check_in_date": {
                        "type": "string",
                        "description": "The date of check-in in YYYY-MM-DD format."
                    },
                    "check_out_date": {
                        "type": "string",
                        "description": "The date of check-out in YYYY-MM-DD format."
                    },
                    "smart_locks": {
                        "type": "array",
                        "description": "A list of smart locks available for check-in and check-out.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "key_exchange_service": {
                        "type": "boolean",
                        "description": "Indicates if a key exchange service is available."
                    }
                },
                "required": [
                    "user_id",
                    "check_in_date",
                    "check_out_date",
                    "smart_locks",
                    "key_exchange_service"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the check-in and check-out processes were successfully automated, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you automate my check-in and check-out processes using smart locks?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with your user ID, check-in date, check-out date, list of smart locks available, and if a key exchange service is available."
            },
            {
                "role": "user",
                "text": "My user ID is '12345', check-in date is '2022-01-01', check-out date is '2022-01-05', I have smart locks 'lock1' and 'lock2', and a key exchange service is available."
            },
            {
                "role": "assistant",
                "text": "Great, I'm automating your check-in and check-out processes now."
            }
        ],
        "function_call": {
            "function_name": "automate_check_in_and_check_out",
            "parameters": {
                "user_id": "12345",
                "check_in_date": "2022-01-01",
                "check_out_date": "2022-01-05",
                "smart_locks": [
                    "lock1",
                    "lock2"
                ],
                "key_exchange_service": true
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def automate_check_in_and_check_out(\\n    user_id: str,\\n    check_in_date: str,\\n    check_out_date: str,\\n    smart_locks: List[str],\\n    key_exchange_service: bool,\\n) -> bool:\\n    \"\"\"\\n    Automates check-in and check-out processes using smart locks or key exchange services.\\n\\n    Parameters:\\n        user_id (str): The user\\'s identification.\\n        check_in_date (str): The date of check-in in YYYY-MM-DD format.\\n        check_out_date (str): The date of check-out in YYYY-MM-DD format.\\n        smart_locks (List[str]): A list of smart locks available for check-in and check-out.\\n        key_exchange_service (bool): Indicates if a key exchange service is available.\\n\\n    Returns:\\n        bool: True if the check-in and check-out processes were successfully automated, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'automate_check_in_and_check_out', 'description': 'Automates check-in and check-out processes using smart locks or key exchange services.', 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': \"The user's identification.\"}, 'check_in_date': {'type': 'string', 'description': 'The date of check-in in YYYY-MM-DD format.'}, 'check_out_date': {'type': 'string', 'description': 'The date of check-out in YYYY-MM-DD format.'}, 'smart_locks': {'type': 'array', 'description': 'A list of smart locks available for check-in and check-out.', 'items': {'type': 'string'}}, 'key_exchange_service': {'type': 'boolean', 'description': 'Indicates if a key exchange service is available.'}}, 'required': ['user_id', 'check_in_date', 'check_out_date', 'smart_locks', 'key_exchange_service']}, 'returns': {'type': 'boolean', 'description': 'True if the check-in and check-out processes were successfully automated, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-18",
    "description": {
        "function_snippet": "def monitor_local_events() -> None:\n    \"\"\"\n    Monitor local events and adjust pricing or promotions accordingly.\n    \"\"\"\n    # Code implementation goes here",
        "function_description": {
            "name": "monitor_local_events",
            "description": "Monitor local events and adjust pricing or promotions accordingly.",
            "parameters": {},
            "returns": {}
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"monitor_local_events\",\n        \"description\": \"Monitor local events and adjust pricing or promotions accordingly.\",\n        \"parameters\": {},\n        \"returns\": {}\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you monitor local events for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Just give me a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"monitor_local_events\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "monitor_local_events",
            "description": "Monitor local events and adjust pricing or promotions accordingly.",
            "parameters": {},
            "returns": {}
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you monitor local events for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Just give me a moment."
            }
        ],
        "function_call": {
            "function_name": "monitor_local_events",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def monitor_local_events() -> None:\\n    \"\"\"\\n    Monitor local events and adjust pricing or promotions accordingly.\\n    \"\"\"\\n    # Code implementation goes here', 'function_description': {'name': 'monitor_local_events', 'description': 'Monitor local events and adjust pricing or promotions accordingly.', 'parameters': {}, 'returns': {}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-19",
    "description": {
        "function_snippet": "def automate_collection_and_payment(\n    property_id: int,\n    rental_duration: int,\n    rental_price: float,\n) -> Dict[str, float]:\n    \n    \"\"\"\n    Automates the collection and payment of local taxes related to short-term rentals.\n\n    Parameters:\n        property_id (int): The ID of the rental property.\n        rental_duration (int): The duration of the rental in days.\n        rental_price (float): The price of the rental.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'tax_amount' as a key and the tax amount as a value.\n    \"\"\"\n",
        "function_description": {
            "name": "automate_collection_and_payment",
            "description": "Automates the collection and payment of local taxes related to short-term rentals.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_id": {
                        "type": "integer",
                        "description": "The ID of the rental property."
                    },
                    "rental_duration": {
                        "type": "integer",
                        "description": "The duration of the rental in days."
                    },
                    "rental_price": {
                        "type": "float",
                        "description": "The price of the rental."
                    }
                },
                "required": [
                    "property_id",
                    "rental_duration",
                    "rental_price"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tax_amount": {
                        "type": "float",
                        "description": "The tax amount."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"automate_collection_and_payment\",\n        \"description\": \"Automates the collection and payment of local taxes related to short-term rentals.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"property_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the rental property.\"\n                },\n                \"rental_duration\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The duration of the rental in days.\"\n                },\n                \"rental_price\": {\n                    \"type\": \"float\",\n                    \"description\": \"The price of the rental.\"\n                }\n            },\n            \"required\": [\"property_id\", \"rental_duration\", \"rental_price\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tax_amount\": {\n                    \"type\": \"float\",\n                    \"description\": \"The tax amount.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you automate the collection and payment of local taxes for my short-term rental?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you provide me the ID of your rental property, the duration of the rental in days, and the price of the rental?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, the ID of my rental property is 12345, the duration of the rental is 7 days, and the price is $100 per day.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will automate the collection and payment of local taxes for your short-term rental.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"automate_collection_and_payment\",\n        \"parameters\": {\n            \"property_id\": 12345,\n            \"rental_duration\": 7,\n            \"rental_price\": 100.0\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "automate_collection_and_payment",
            "description": "Automates the collection and payment of local taxes related to short-term rentals.",
            "parameters": {
                "type": "object",
                "properties": {
                    "property_id": {
                        "type": "integer",
                        "description": "The ID of the rental property."
                    },
                    "rental_duration": {
                        "type": "integer",
                        "description": "The duration of the rental in days."
                    },
                    "rental_price": {
                        "type": "float",
                        "description": "The price of the rental."
                    }
                },
                "required": [
                    "property_id",
                    "rental_duration",
                    "rental_price"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tax_amount": {
                        "type": "float",
                        "description": "The tax amount."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you automate the collection and payment of local taxes for my short-term rental?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you provide me the ID of your rental property, the duration of the rental in days, and the price of the rental?"
            },
            {
                "role": "user",
                "text": "Yes, the ID of my rental property is 12345, the duration of the rental is 7 days, and the price is $100 per day."
            },
            {
                "role": "assistant",
                "text": "Great, I will automate the collection and payment of local taxes for your short-term rental."
            }
        ],
        "function_call": {
            "function_name": "automate_collection_and_payment",
            "parameters": {
                "property_id": 12345,
                "rental_duration": 7,
                "rental_price": 100.0
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def automate_collection_and_payment(\\n    property_id: int,\\n    rental_duration: int,\\n    rental_price: float,\\n) -> Dict[str, float]:\\n    \\n    \"\"\"\\n    Automates the collection and payment of local taxes related to short-term rentals.\\n\\n    Parameters:\\n        property_id (int): The ID of the rental property.\\n        rental_duration (int): The duration of the rental in days.\\n        rental_price (float): The price of the rental.\\n\\n    Returns:\\n        Dict[str, float]: A dictionary with \\'tax_amount\\' as a key and the tax amount as a value.\\n    \"\"\"\\n', 'function_description': {'name': 'automate_collection_and_payment', 'description': 'Automates the collection and payment of local taxes related to short-term rentals.', 'parameters': {'type': 'object', 'properties': {'property_id': {'type': 'integer', 'description': 'The ID of the rental property.'}, 'rental_duration': {'type': 'integer', 'description': 'The duration of the rental in days.'}, 'rental_price': {'type': 'float', 'description': 'The price of the rental.'}}, 'required': ['property_id', 'rental_duration', 'rental_price']}, 'returns': {'type': 'object', 'properties': {'tax_amount': {'type': 'float', 'description': 'The tax amount.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "airbnb-20",
    "description": {
        "function_snippet": "def monitor_guest_behavior(home_security_systems: List[str]) -> None:\n    \"\"\"\n    Monitor guest behavior through home security systems, respecting privacy laws and regulations.\n\n    Parameters:\n        home_security_systems (List[str]): A list of home security systems to monitor.\n\n    Returns:\n        None\n    \"\"\"",
        "function_description": {
            "name": "monitor_guest_behavior",
            "description": "Monitor guest behavior through home security systems, respecting privacy laws and regulations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "home_security_systems": {
                        "type": "array",
                        "description": "A list of home security systems to monitor.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "home_security_systems"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"monitor_guest_behavior\",\n        \"description\": \"Monitor guest behavior through home security systems, respecting privacy laws and regulations.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"home_security_systems\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of home security systems to monitor.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"home_security_systems\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you monitor the behavior of guests through my home security systems?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you provide me with a list of your home security systems?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, I have three home security systems: 'System A', 'System B', and 'System C'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will start monitoring the behavior of guests through your home security systems.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"monitor_guest_behavior\",\n        \"parameters\": {\n            \"home_security_systems\": [\"System A\", \"System B\", \"System C\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "monitor_guest_behavior",
            "description": "Monitor guest behavior through home security systems, respecting privacy laws and regulations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "home_security_systems": {
                        "type": "array",
                        "description": "A list of home security systems to monitor.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "home_security_systems"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you monitor the behavior of guests through my home security systems?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you provide me with a list of your home security systems?"
            },
            {
                "role": "user",
                "text": "Yes, I have three home security systems: 'System A', 'System B', and 'System C'."
            },
            {
                "role": "assistant",
                "text": "Great, I will start monitoring the behavior of guests through your home security systems."
            }
        ],
        "function_call": {
            "function_name": "monitor_guest_behavior",
            "parameters": {
                "home_security_systems": [
                    "System A",
                    "System B",
                    "System C"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def monitor_guest_behavior(home_security_systems: List[str]) -> None:\\n    \"\"\"\\n    Monitor guest behavior through home security systems, respecting privacy laws and regulations.\\n\\n    Parameters:\\n        home_security_systems (List[str]): A list of home security systems to monitor.\\n\\n    Returns:\\n        None\\n    \"\"\"', 'function_description': {'name': 'monitor_guest_behavior', 'description': 'Monitor guest behavior through home security systems, respecting privacy laws and regulations.', 'parameters': {'type': 'object', 'properties': {'home_security_systems': {'type': 'array', 'description': 'A list of home security systems to monitor.', 'items': {'type': 'string'}}}, 'required': ['home_security_systems']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}

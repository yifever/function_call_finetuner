{
    "function_id": "ai_research-1",
    "description": {
        "function_snippet": "def conduct_literature_search(query: str, databases: List[str]) -> List[str]:\n    \"\"\"\n    Conducts a literature search on AI papers from academic databases.\n\n    Parameters:\n        query (str): The search query.\n        databases (List[str]): A list of academic databases to search.\n\n    Returns:\n        List[str]: A list of paper titles that match the search query.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "conduct_literature_search",
            "description": "Conducts a literature search on AI papers from academic databases.",
            "parameters": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "The search query."
                    },
                    "databases": {
                        "type": "array",
                        "description": "A list of academic databases to search.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "query",
                    "databases"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of paper titles that match the search query."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"conduct_literature_search\",\n        \"description\": \"Conducts a literature search on AI papers from academic databases.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"query\": {\n                    \"type\": \"string\",\n                    \"description\": \"The search query.\"\n                },\n                \"databases\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of academic databases to search.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"query\", \"databases\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"description\": \"A list of paper titles that match the search query.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me conduct a literature search on AI papers?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. What is your search query?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I'm looking for papers on 'machine learning algorithms'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, please provide the names of the academic databases you want to search.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want to search in 'IEEE Xplore' and 'ACM Digital Library'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will conduct the literature search now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"conduct_literature_search\",\n        \"parameters\": {\n            \"query\": \"machine learning algorithms\",\n            \"databases\": [\"IEEE Xplore\", \"ACM Digital Library\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "conduct_literature_search",
            "description": "Conducts a literature search on AI papers from academic databases.",
            "parameters": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string",
                        "description": "The search query."
                    },
                    "databases": {
                        "type": "array",
                        "description": "A list of academic databases to search.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "query",
                    "databases"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of paper titles that match the search query."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me conduct a literature search on AI papers?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. What is your search query?"
            },
            {
                "role": "user",
                "text": "I'm looking for papers on 'machine learning algorithms'."
            },
            {
                "role": "assistant",
                "text": "Great, please provide the names of the academic databases you want to search."
            },
            {
                "role": "user",
                "text": "I want to search in 'IEEE Xplore' and 'ACM Digital Library'."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the information. I will conduct the literature search now."
            }
        ],
        "function_call": {
            "function_name": "conduct_literature_search",
            "parameters": {
                "query": "machine learning algorithms",
                "databases": [
                    "IEEE Xplore",
                    "ACM Digital Library"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def conduct_literature_search(query: str, databases: List[str]) -> List[str]:\\n    \"\"\"\\n    Conducts a literature search on AI papers from academic databases.\\n\\n    Parameters:\\n        query (str): The search query.\\n        databases (List[str]): A list of academic databases to search.\\n\\n    Returns:\\n        List[str]: A list of paper titles that match the search query.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'conduct_literature_search', 'description': 'Conducts a literature search on AI papers from academic databases.', 'parameters': {'type': 'object', 'properties': {'query': {'type': 'string', 'description': 'The search query.'}, 'databases': {'type': 'array', 'description': 'A list of academic databases to search.', 'items': {'type': 'string'}}}, 'required': ['query', 'databases']}, 'returns': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of paper titles that match the search query.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-2",
    "description": {
        "function_snippet": "def retrieve_text_from_papers(paper_list: List[str]) -> List[str]:\n    \"\"\"\n    Retrieves text from specified academic papers for analysis.\n\n    Parameters:\n        paper_list (List[str]): A list of paper names or IDs.\n\n    Returns:\n        List[str]: A list of text contents retrieved from the specified academic papers.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "retrieve_text_from_papers",
            "description": "Retrieves text from specified academic papers for analysis.",
            "parameters": {
                "type": "object",
                "properties": {
                    "paper_list": {
                        "type": "array",
                        "description": "A list of paper names or IDs.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "paper_list"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of text contents retrieved from the specified academic papers."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_text_from_papers\",\n        \"description\": \"Retrieves text from specified academic papers for analysis.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"paper_list\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of paper names or IDs.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"paper_list\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"description\": \"A list of text contents retrieved from the specified academic papers.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, I need to retrieve text from some academic papers for analysis.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Please provide me with a list of paper names or IDs.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here are the paper names: ['paper1', 'paper2', 'paper3'].\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! I will retrieve the text from the specified academic papers.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_text_from_papers\",\n        \"parameters\": {\n            \"paper_list\": [\"paper1\", \"paper2\", \"paper3\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_text_from_papers",
            "description": "Retrieves text from specified academic papers for analysis.",
            "parameters": {
                "type": "object",
                "properties": {
                    "paper_list": {
                        "type": "array",
                        "description": "A list of paper names or IDs.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "paper_list"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of text contents retrieved from the specified academic papers."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, I need to retrieve text from some academic papers for analysis."
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Please provide me with a list of paper names or IDs."
            },
            {
                "role": "user",
                "text": "Here are the paper names: ['paper1', 'paper2', 'paper3']."
            },
            {
                "role": "assistant",
                "text": "Great! I will retrieve the text from the specified academic papers."
            }
        ],
        "function_call": {
            "function_name": "retrieve_text_from_papers",
            "parameters": {
                "paper_list": [
                    "paper1",
                    "paper2",
                    "paper3"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_text_from_papers(paper_list: List[str]) -> List[str]:\\n    \"\"\"\\n    Retrieves text from specified academic papers for analysis.\\n\\n    Parameters:\\n        paper_list (List[str]): A list of paper names or IDs.\\n\\n    Returns:\\n        List[str]: A list of text contents retrieved from the specified academic papers.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'retrieve_text_from_papers', 'description': 'Retrieves text from specified academic papers for analysis.', 'parameters': {'type': 'object', 'properties': {'paper_list': {'type': 'array', 'description': 'A list of paper names or IDs.', 'items': {'type': 'string'}}}, 'required': ['paper_list']}, 'returns': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of text contents retrieved from the specified academic papers.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-3",
    "description": {
        "function_snippet": "def submit_research_papers(\n    papers: List[str],\n    server: str,\n    journals: List[str],\n) -> bool:\n    \"\"\"\n    Submits research papers or articles to preprint servers or journals.\n\n    Parameters:\n        papers (List[str]): A list of strings representing the research papers or articles.\n        server (str): The preprint server to submit the papers to.\n        journals (List[str]): A list of strings representing the journals to submit the papers to.\n\n    Returns:\n        bool: True if the papers were successfully submitted, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "submit_research_papers",
            "description": "Submits research papers or articles to preprint servers or journals.",
            "parameters": {
                "type": "object",
                "properties": {
                    "papers": {
                        "type": "array",
                        "description": "A list of strings representing the research papers or articles.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "server": {
                        "type": "string",
                        "description": "The preprint server to submit the papers to."
                    },
                    "journals": {
                        "type": "array",
                        "description": "A list of strings representing the journals to submit the papers to.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "papers",
                    "server",
                    "journals"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the papers were successfully submitted, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"submit_research_papers\",\n        \"description\": \"Submits research papers or articles to preprint servers or journals.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"papers\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of strings representing the research papers or articles.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"server\": {\n                    \"type\": \"string\",\n                    \"description\": \"The preprint server to submit the papers to.\"\n                },\n                \"journals\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of strings representing the journals to submit the papers to.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\n                \"papers\",\n                \"server\",\n                \"journals\"\n            ]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the papers were successfully submitted, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me submit my research papers?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I can assist you with that. Can you please provide me with the details?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure. I have a list of research papers, a preprint server, and a list of journals.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Please provide me with the research papers, the preprint server, and the journals.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here are the research papers: ['paper1', 'paper2', 'paper3']. The preprint server is 'server1' and the journals are ['journal1', 'journal2'].\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will now submit your research papers to the preprint server and the journals.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"submit_research_papers\",\n        \"parameters\": {\n            \"papers\": [\"paper1\", \"paper2\", \"paper3\"],\n            \"server\": \"server1\",\n            \"journals\": [\"journal1\", \"journal2\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "submit_research_papers",
            "description": "Submits research papers or articles to preprint servers or journals.",
            "parameters": {
                "type": "object",
                "properties": {
                    "papers": {
                        "type": "array",
                        "description": "A list of strings representing the research papers or articles.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "server": {
                        "type": "string",
                        "description": "The preprint server to submit the papers to."
                    },
                    "journals": {
                        "type": "array",
                        "description": "A list of strings representing the journals to submit the papers to.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "papers",
                    "server",
                    "journals"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the papers were successfully submitted, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me submit my research papers?"
            },
            {
                "role": "assistant",
                "text": "Of course! I can assist you with that. Can you please provide me with the details?"
            },
            {
                "role": "user",
                "text": "Sure. I have a list of research papers, a preprint server, and a list of journals."
            },
            {
                "role": "assistant",
                "text": "Please provide me with the research papers, the preprint server, and the journals."
            },
            {
                "role": "user",
                "text": "Here are the research papers: ['paper1', 'paper2', 'paper3']. The preprint server is 'server1' and the journals are ['journal1', 'journal2']."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will now submit your research papers to the preprint server and the journals."
            }
        ],
        "function_call": {
            "function_name": "submit_research_papers",
            "parameters": {
                "papers": [
                    "paper1",
                    "paper2",
                    "paper3"
                ],
                "server": "server1",
                "journals": [
                    "journal1",
                    "journal2"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def submit_research_papers(\\n    papers: List[str],\\n    server: str,\\n    journals: List[str],\\n) -> bool:\\n    \"\"\"\\n    Submits research papers or articles to preprint servers or journals.\\n\\n    Parameters:\\n        papers (List[str]): A list of strings representing the research papers or articles.\\n        server (str): The preprint server to submit the papers to.\\n        journals (List[str]): A list of strings representing the journals to submit the papers to.\\n\\n    Returns:\\n        bool: True if the papers were successfully submitted, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'submit_research_papers', 'description': 'Submits research papers or articles to preprint servers or journals.', 'parameters': {'type': 'object', 'properties': {'papers': {'type': 'array', 'description': 'A list of strings representing the research papers or articles.', 'items': {'type': 'string'}}, 'server': {'type': 'string', 'description': 'The preprint server to submit the papers to.'}, 'journals': {'type': 'array', 'description': 'A list of strings representing the journals to submit the papers to.', 'items': {'type': 'string'}}}, 'required': ['papers', 'server', 'journals']}, 'returns': {'type': 'boolean', 'description': 'True if the papers were successfully submitted, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-4",
    "description": {
        "function_snippet": "def run_experiments_on_cloud() -> None:\n    \"\"\"\n    Runs code for machine learning experiments on cloud-based compute resources.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "run_experiments_on_cloud",
            "description": "Runs code for machine learning experiments on cloud-based compute resources.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"run_experiments_on_cloud\",\n        \"description\": \"Runs code for machine learning experiments on cloud-based compute resources.\",\n        \"parameters\": {},\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you run some machine learning experiments on the cloud for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Is there any specific task or dataset you have in mind?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, I have a dataset that I would like to train a model on. It's about predicting customer churn in a telecom company.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"That sounds interesting. Please provide me with the necessary details and I will run the experiments on the cloud for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"run_experiments_on_cloud\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "run_experiments_on_cloud",
            "description": "Runs code for machine learning experiments on cloud-based compute resources.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you run some machine learning experiments on the cloud for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Is there any specific task or dataset you have in mind?"
            },
            {
                "role": "user",
                "text": "Yes, I have a dataset that I would like to train a model on. It's about predicting customer churn in a telecom company."
            },
            {
                "role": "assistant",
                "text": "That sounds interesting. Please provide me with the necessary details and I will run the experiments on the cloud for you."
            }
        ],
        "function_call": {
            "function_name": "run_experiments_on_cloud",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def run_experiments_on_cloud() -> None:\\n    \"\"\"\\n    Runs code for machine learning experiments on cloud-based compute resources.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'run_experiments_on_cloud', 'description': 'Runs code for machine learning experiments on cloud-based compute resources.', 'parameters': {}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-5",
    "description": {
        "function_snippet": "def fetch_and_preprocess_datasets(\n    repository_url: str,\n    access_token: str,\n    dataset_names: List[str]\n) -> List[pd.DataFrame]:\n    \"\"\"\n    Fetches and preprocesses datasets from public or private repositories.\n\n    Parameters:\n        repository_url (str): The URL of the repository.\n        access_token (str): The access token for accessing private repositories.\n        dataset_names (List[str]): A list of names of datasets to fetch and preprocess.\n\n    Returns:\n        List[pd.DataFrame]: A list of pandas DataFrames containing the fetched and preprocessed datasets.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "fetch_and_preprocess_datasets",
            "description": "Fetches and preprocesses datasets from public or private repositories.",
            "parameters": {
                "type": "object",
                "properties": {
                    "repository_url": {
                        "type": "string",
                        "description": "The URL of the repository."
                    },
                    "access_token": {
                        "type": "string",
                        "description": "The access token for accessing private repositories."
                    },
                    "dataset_names": {
                        "type": "array",
                        "description": "A list of names of datasets to fetch and preprocess.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "repository_url",
                    "access_token",
                    "dataset_names"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "object",
                    "description": "A pandas DataFrame containing the fetched and preprocessed dataset."
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"fetch_and_preprocess_datasets\",\n        \"description\": \"Fetches and preprocesses datasets from public or private repositories.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"repository_url\": {\n                    \"type\": \"string\",\n                    \"description\": \"The URL of the repository.\"\n                },\n                \"access_token\": {\n                    \"type\": \"string\",\n                    \"description\": \"The access token for accessing private repositories.\"\n                },\n                \"dataset_names\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of names of datasets to fetch and preprocess.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"repository_url\", \"access_token\", \"dataset_names\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"description\": \"A pandas DataFrame containing the fetched and preprocessed dataset.\"\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you fetch and preprocess datasets for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the repository URL, access token, and a list of dataset names.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The repository URL is 'https://github.com/datasets', the access token is 'abc123', and the dataset names are ['data1', 'data2', 'data3'].\" \n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will fetch and preprocess the datasets for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"fetch_and_preprocess_datasets\",\n        \"parameters\": {\n            \"repository_url\": \"https://github.com/datasets\",\n            \"access_token\": \"abc123\",\n            \"dataset_names\": [\"data1\", \"data2\", \"data3\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "fetch_and_preprocess_datasets",
            "description": "Fetches and preprocesses datasets from public or private repositories.",
            "parameters": {
                "type": "object",
                "properties": {
                    "repository_url": {
                        "type": "string",
                        "description": "The URL of the repository."
                    },
                    "access_token": {
                        "type": "string",
                        "description": "The access token for accessing private repositories."
                    },
                    "dataset_names": {
                        "type": "array",
                        "description": "A list of names of datasets to fetch and preprocess.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "repository_url",
                    "access_token",
                    "dataset_names"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "object",
                    "description": "A pandas DataFrame containing the fetched and preprocessed dataset."
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you fetch and preprocess datasets for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the repository URL, access token, and a list of dataset names."
            },
            {
                "role": "user",
                "text": "The repository URL is 'https://github.com/datasets', the access token is 'abc123', and the dataset names are ['data1', 'data2', 'data3']."
            },
            {
                "role": "assistant",
                "text": "Great, I will fetch and preprocess the datasets for you."
            }
        ],
        "function_call": {
            "function_name": "fetch_and_preprocess_datasets",
            "parameters": {
                "repository_url": "https://github.com/datasets",
                "access_token": "abc123",
                "dataset_names": [
                    "data1",
                    "data2",
                    "data3"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def fetch_and_preprocess_datasets(\\n    repository_url: str,\\n    access_token: str,\\n    dataset_names: List[str]\\n) -> List[pd.DataFrame]:\\n    \"\"\"\\n    Fetches and preprocesses datasets from public or private repositories.\\n\\n    Parameters:\\n        repository_url (str): The URL of the repository.\\n        access_token (str): The access token for accessing private repositories.\\n        dataset_names (List[str]): A list of names of datasets to fetch and preprocess.\\n\\n    Returns:\\n        List[pd.DataFrame]: A list of pandas DataFrames containing the fetched and preprocessed datasets.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'fetch_and_preprocess_datasets', 'description': 'Fetches and preprocesses datasets from public or private repositories.', 'parameters': {'type': 'object', 'properties': {'repository_url': {'type': 'string', 'description': 'The URL of the repository.'}, 'access_token': {'type': 'string', 'description': 'The access token for accessing private repositories.'}, 'dataset_names': {'type': 'array', 'description': 'A list of names of datasets to fetch and preprocess.', 'items': {'type': 'string'}}}, 'required': ['repository_url', 'access_token', 'dataset_names']}, 'returns': {'type': 'array', 'items': {'type': 'object', 'description': 'A pandas DataFrame containing the fetched and preprocessed dataset.'}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-6",
    "description": {
        "function_snippet": "def hyperparameter_tuning(\n    model: Any,\n    X: Any,\n    y: Any,\n    params: Dict[str, Any],\n    scoring: str,\n    cv: int,\n) -> Dict[str, Any]:\n    \"\"\"\n    Performs hyperparameter tuning for machine learning models.\n\n    Parameters:\n        model (Any): The machine learning model to tune.\n        X (Any): The input features.\n        y (Any): The target variable.\n        params (Dict[str, Any]): A dictionary of hyperparameters to tune.\n        scoring (str): The scoring metric to use for evaluation.\n        cv (int): The number of cross-validation folds.\n\n    Returns:\n        Dict[str, Any]: A dictionary with 'best_params' as a key and the best hyperparameters as a value.\n    \"\"\"\n\n    ",
        "function_description": {
            "name": "hyperparameter_tuning",
            "description": "Performs hyperparameter tuning for machine learning models.",
            "parameters": {
                "type": "object",
                "properties": {
                    "model": {
                        "type": "any",
                        "description": "The machine learning model to tune."
                    },
                    "X": {
                        "type": "any",
                        "description": "The input features."
                    },
                    "y": {
                        "type": "any",
                        "description": "The target variable."
                    },
                    "params": {
                        "type": "object",
                        "description": "A dictionary of hyperparameters to tune.",
                        "properties": {
                            "type": "any"
                        }
                    },
                    "scoring": {
                        "type": "string",
                        "description": "The scoring metric to use for evaluation."
                    },
                    "cv": {
                        "type": "integer",
                        "description": "The number of cross-validation folds."
                    }
                },
                "required": [
                    "model",
                    "X",
                    "y",
                    "params",
                    "scoring",
                    "cv"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "best_params": {
                        "type": "any",
                        "description": "The best hyperparameters."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"hyperparameter_tuning\",\n        \"description\": \"Performs hyperparameter tuning for machine learning models.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"model\": {\n                    \"type\": \"any\",\n                    \"description\": \"The machine learning model to tune.\"\n                },\n                \"X\": {\n                    \"type\": \"any\",\n                    \"description\": \"The input features.\"\n                },\n                \"y\": {\n                    \"type\": \"any\",\n                    \"description\": \"The target variable.\"\n                },\n                \"params\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary of hyperparameters to tune.\",\n                    \"properties\": {\n                        \"type\": \"any\"\n                    }\n                },\n                \"scoring\": {\n                    \"type\": \"string\",\n                    \"description\": \"The scoring metric to use for evaluation.\"\n                },\n                \"cv\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of cross-validation folds.\"\n                }\n            },\n            \"required\": [\"model\", \"X\", \"y\", \"params\", \"scoring\", \"cv\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"best_params\": {\n                    \"type\": \"any\",\n                    \"description\": \"The best hyperparameters.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me with hyperparameter tuning for my machine learning model?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I'd be happy to help. Could you please provide the following information?\\n1. The machine learning model you want to tune.\\n2. The input features.\\n3. The target variable.\\n4. A dictionary of hyperparameters to tune.\\n5. The scoring metric to use for evaluation.\\n6. The number of cross-validation folds.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have a Random Forest Classifier that I want to tune. My input features are X and the target variable is y. Here is the dictionary of hyperparameters: {'n_estimators': [100, 200, 300], 'max_depth': [None, 5, 10], 'min_samples_split': [2, 5, 10]}. I want to use 'accuracy' as the scoring metric and perform 5-fold cross-validation.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will now perform hyperparameter tuning for your Random Forest Classifier using the given hyperparameters, scoring metric, and cross-validation folds.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"hyperparameter_tuning\",\n        \"parameters\": {\n            \"model\": \"Random Forest Classifier\",\n            \"X\": \"X\",\n            \"y\": \"y\",\n            \"params\": {\n                \"n_estimators\": [100, 200, 300],\n                \"max_depth\": [None, 5, 10],\n                \"min_samples_split\": [2, 5, 10]\n            },\n            \"scoring\": \"accuracy\",\n            \"cv\": 5\n        }\n    }\n}",
    "data": "{\n    \"function_description\": {\n        \"name\": \"hyperparameter_tuning\",\n        \"description\": \"Performs hyperparameter tuning for machine learning models.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"model\": {\n                    \"type\": \"any\",\n                    \"description\": \"The machine learning model to tune.\"\n                },\n                \"X\": {\n                    \"type\": \"any\",\n                    \"description\": \"The input features.\"\n                },\n                \"y\": {\n                    \"type\": \"any\",\n                    \"description\": \"The target variable.\"\n                },\n                \"params\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary of hyperparameters to tune.\",\n                    \"properties\": {\n                        \"type\": \"any\"\n                    }\n                },\n                \"scoring\": {\n                    \"type\": \"string\",\n                    \"description\": \"The scoring metric to use for evaluation.\"\n                },\n                \"cv\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of cross-validation folds.\"\n                }\n            },\n            \"required\": [\"model\", \"X\", \"y\", \"params\", \"scoring\", \"cv\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"best_params\": {\n                    \"type\": \"any\",\n                    \"description\": \"The best hyperparameters.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me with hyperparameter tuning for my machine learning model?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I'd be happy to help. Could you please provide the following information?\\n1. The machine learning model you want to tune.\\n2. The input features.\\n3. The target variable.\\n4. A dictionary of hyperparameters to tune.\\n5. The scoring metric to use for evaluation.\\n6. The number of cross-validation folds.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have a Random Forest Classifier that I want to tune. My input features are X and the target variable is y. Here is the dictionary of hyperparameters: {'n_estimators': [100, 200, 300], 'max_depth': [None, 5, 10], 'min_samples_split': [2, 5, 10]}. I want to use 'accuracy' as the scoring metric and perform 5-fold cross-validation.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will now perform hyperparameter tuning for your Random Forest Classifier using the given hyperparameters, scoring metric, and cross-validation folds.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"hyperparameter_tuning\",\n        \"parameters\": {\n            \"model\": \"Random Forest Classifier\",\n            \"X\": \"X\",\n            \"y\": \"y\",\n            \"params\": {\n                \"n_estimators\": [100, 200, 300],\n                \"max_depth\": [None, 5, 10],\n                \"min_samples_split\": [2, 5, 10]\n            },\n            \"scoring\": \"accuracy\",\n            \"cv\": 5\n        }\n    }\n}",
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def hyperparameter_tuning(\\n    model: Any,\\n    X: Any,\\n    y: Any,\\n    params: Dict[str, Any],\\n    scoring: str,\\n    cv: int,\\n) -> Dict[str, Any]:\\n    \"\"\"\\n    Performs hyperparameter tuning for machine learning models.\\n\\n    Parameters:\\n        model (Any): The machine learning model to tune.\\n        X (Any): The input features.\\n        y (Any): The target variable.\\n        params (Dict[str, Any]): A dictionary of hyperparameters to tune.\\n        scoring (str): The scoring metric to use for evaluation.\\n        cv (int): The number of cross-validation folds.\\n\\n    Returns:\\n        Dict[str, Any]: A dictionary with \\'best_params\\' as a key and the best hyperparameters as a value.\\n    \"\"\"\\n\\n    ', 'function_description': {'name': 'hyperparameter_tuning', 'description': 'Performs hyperparameter tuning for machine learning models.', 'parameters': {'type': 'object', 'properties': {'model': {'type': 'any', 'description': 'The machine learning model to tune.'}, 'X': {'type': 'any', 'description': 'The input features.'}, 'y': {'type': 'any', 'description': 'The target variable.'}, 'params': {'type': 'object', 'description': 'A dictionary of hyperparameters to tune.', 'properties': {'type': 'any'}}, 'scoring': {'type': 'string', 'description': 'The scoring metric to use for evaluation.'}, 'cv': {'type': 'integer', 'description': 'The number of cross-validation folds.'}}, 'required': ['model', 'X', 'y', 'params', 'scoring', 'cv']}, 'returns': {'type': 'object', 'properties': {'best_params': {'type': 'any', 'description': 'The best hyperparameters.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-7",
    "description": {
        "function_snippet": "    def visualize_model_performance(\n    metrics: List[str],\n    results: Dict[str, float],\n) -> None:\n    \n    \"\"\"\n    Visualizes the model performance metrics and experimental results.\n\n    Parameters:\n        metrics (List[str]): A list of performance metrics.\n        results (Dict[str, float]): A dictionary containing experimental results.\n                                    Each key is a metric and the value is the corresponding result.\n\n    Returns:\n        None\n    \"\"\"\n    ",
        "function_description": {
            "name": "visualize_model_performance",
            "description": "Visualizes the model performance metrics and experimental results.",
            "parameters": {
                "type": "object",
                "properties": {
                    "metrics": {
                        "type": "array",
                        "description": "A list of performance metrics.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "results": {
                        "type": "object",
                        "description": "A dictionary containing experimental results. Each key is a metric and the value is the corresponding result.",
                        "properties": {
                            "metric": {
                                "type": "float"
                            }
                        }
                    }
                },
                "required": [
                    "metrics",
                    "results"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"visualize_model_performance\",\n        \"description\": \"Visualizes the model performance metrics and experimental results.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"metrics\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of performance metrics.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"results\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing experimental results. Each key is a metric and the value is the corresponding result.\",\n                    \"properties\": {\n                        \"metric\": {\n                            \"type\": \"float\"\n                        }\n                    }\n                }\n            },\n            \"required\": [\"metrics\", \"results\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you visualize the model performance metrics and experimental results for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the performance metrics and experimental results.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The performance metrics I'm interested in are accuracy, precision, and recall. And the experimental results are: accuracy - 0.85, precision - 0.9, recall - 0.82.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! I will visualize the model performance metrics and experimental results for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"visualize_model_performance\",\n        \"parameters\": {\n            \"metrics\": [\"accuracy\", \"precision\", \"recall\"],\n            \"results\": {\"accuracy\": 0.85, \"precision\": 0.9, \"recall\": 0.82}\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "visualize_model_performance",
            "description": "Visualizes the model performance metrics and experimental results.",
            "parameters": {
                "type": "object",
                "properties": {
                    "metrics": {
                        "type": "array",
                        "description": "A list of performance metrics.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "results": {
                        "type": "object",
                        "description": "A dictionary containing experimental results. Each key is a metric and the value is the corresponding result.",
                        "properties": {
                            "metric": {
                                "type": "float"
                            }
                        }
                    }
                },
                "required": [
                    "metrics",
                    "results"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you visualize the model performance metrics and experimental results for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the performance metrics and experimental results."
            },
            {
                "role": "user",
                "text": "The performance metrics I'm interested in are accuracy, precision, and recall. And the experimental results are: accuracy - 0.85, precision - 0.9, recall - 0.82."
            },
            {
                "role": "assistant",
                "text": "Great! I will visualize the model performance metrics and experimental results for you."
            }
        ],
        "function_call": {
            "function_name": "visualize_model_performance",
            "parameters": {
                "metrics": [
                    "accuracy",
                    "precision",
                    "recall"
                ],
                "results": {
                    "accuracy": 0.85,
                    "precision": 0.9,
                    "recall": 0.82
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': '    def visualize_model_performance(\\n    metrics: List[str],\\n    results: Dict[str, float],\\n) -> None:\\n    \\n    \"\"\"\\n    Visualizes the model performance metrics and experimental results.\\n\\n    Parameters:\\n        metrics (List[str]): A list of performance metrics.\\n        results (Dict[str, float]): A dictionary containing experimental results.\\n                                    Each key is a metric and the value is the corresponding result.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n    ', 'function_description': {'name': 'visualize_model_performance', 'description': 'Visualizes the model performance metrics and experimental results.', 'parameters': {'type': 'object', 'properties': {'metrics': {'type': 'array', 'description': 'A list of performance metrics.', 'items': {'type': 'string'}}, 'results': {'type': 'object', 'description': 'A dictionary containing experimental results. Each key is a metric and the value is the corresponding result.', 'properties': {'metric': {'type': 'float'}}}}, 'required': ['metrics', 'results']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-8",
    "description": {
        "function_snippet": "def sentiment_analysis_ai_technologies() -> None:\n    \"\"\"\n    Run sentiment analysis on social media posts related to AI technologies.\n\n    Returns:\n        None\n    \"\"\"",
        "function_description": {
            "name": "sentiment_analysis_ai_technologies",
            "description": "Run sentiment analysis on social media posts related to AI technologies.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"sentiment_analysis_ai_technologies\",\n        \"description\": \"Run sentiment analysis on social media posts related to AI technologies.\",\n        \"parameters\": {},\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you perform sentiment analysis on social media posts about AI technologies?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please wait a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"sentiment_analysis_ai_technologies\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "sentiment_analysis_ai_technologies",
            "description": "Run sentiment analysis on social media posts related to AI technologies.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you perform sentiment analysis on social media posts about AI technologies?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please wait a moment."
            }
        ],
        "function_call": {
            "function_name": "sentiment_analysis_ai_technologies",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def sentiment_analysis_ai_technologies() -> None:\\n    \"\"\"\\n    Run sentiment analysis on social media posts related to AI technologies.\\n\\n    Returns:\\n        None\\n    \"\"\"', 'function_description': {'name': 'sentiment_analysis_ai_technologies', 'description': 'Run sentiment analysis on social media posts related to AI technologies.', 'parameters': {}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-9",
    "description": {
        "function_snippet": "def update_website_with_publications():\n    \"\"\"\n    Automatically updates a personal website or blog with new publications.\n    \"\"\"",
        "function_description": {
            "name": "update_website_with_publications",
            "description": "Automatically updates a personal website or blog with new publications.",
            "parameters": {},
            "returns": {}
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"update_website_with_publications\",\n        \"description\": \"Automatically updates a personal website or blog with new publications.\",\n        \"parameters\": {},\n        \"returns\": {}\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you update my website with new publications?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Just give me a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"update_website_with_publications\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "update_website_with_publications",
            "description": "Automatically updates a personal website or blog with new publications.",
            "parameters": {},
            "returns": {}
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you update my website with new publications?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Just give me a moment."
            }
        ],
        "function_call": {
            "function_name": "update_website_with_publications",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def update_website_with_publications():\\n    \"\"\"\\n    Automatically updates a personal website or blog with new publications.\\n    \"\"\"', 'function_description': {'name': 'update_website_with_publications', 'description': 'Automatically updates a personal website or blog with new publications.', 'parameters': {}, 'returns': {}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-10",
    "description": {
        "function_snippet": "def schedule_virtual_meetings(\nresearch_collaborators: List[str],\nmeeting_dates: List[str],\nmeeting_times: List[str],\nmeeting_length: int,\n) -> List[str]:\n    \"\"\"\n    Schedule and conduct virtual meetings for research collaborations.\n\n    Parameters:\n        research_collaborators (List[str]): A list of names of research collaborators.\n        meeting_dates (List[str]): A list of meeting dates in YYYY-MM-DD format.\n        meeting_times (List[str]): A list of meeting times in HH:MM format.\n        meeting_length (int): The duration of each meeting in minutes.\n\n    Returns:\n        List[str]: A list of strings describing the scheduled virtual meetings.\n    \"\"\"",
        "function_description": {
            "name": "schedule_virtual_meetings",
            "description": "Schedule and conduct virtual meetings for research collaborations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "research_collaborators": {
                        "type": "array",
                        "description": "A list of names of research collaborators.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meeting_dates": {
                        "type": "array",
                        "description": "A list of meeting dates in YYYY-MM-DD format.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meeting_times": {
                        "type": "array",
                        "description": "A list of meeting times in HH:MM format.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meeting_length": {
                        "type": "integer",
                        "description": "The duration of each meeting in minutes."
                    }
                },
                "required": [
                    "research_collaborators",
                    "meeting_dates",
                    "meeting_times",
                    "meeting_length"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of strings describing the scheduled virtual meetings."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"schedule_virtual_meetings\",\n        \"description\": \"Schedule and conduct virtual meetings for research collaborations.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"research_collaborators\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of names of research collaborators.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"meeting_dates\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of meeting dates in YYYY-MM-DD format.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"meeting_times\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of meeting times in HH:MM format.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"meeting_length\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The duration of each meeting in minutes.\"\n                }\n            },\n            \"required\": [\n                \"research_collaborators\",\n                \"meeting_dates\",\n                \"meeting_times\",\n                \"meeting_length\"\n            ]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"description\": \"A list of strings describing the scheduled virtual meetings.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me schedule virtual meetings for my research collaborations?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Could you please provide me the names of your research collaborators?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here are the names of my research collaborators: Alice, Bob, and Carol.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the names. Now, can you please provide me the meeting dates in YYYY-MM-DD format?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure, here are the meeting dates: 2022-01-10, 2022-01-15, and 2022-01-20.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! Now, I need the meeting times in HH:MM format.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here are the meeting times: 09:00, 14:30, and 16:45.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Lastly, please provide me the duration of each meeting in minutes.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The duration of each meeting is 60 minutes.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will schedule the virtual meetings for your research collaborations.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"schedule_virtual_meetings\",\n        \"parameters\": {\n            \"research_collaborators\": [\"Alice\", \"Bob\", \"Carol\"],\n            \"meeting_dates\": [\"2022-01-10\", \"2022-01-15\", \"2022-01-20\"],\n            \"meeting_times\": [\"09:00\", \"14:30\", \"16:45\"],\n            \"meeting_length\": 60\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "schedule_virtual_meetings",
            "description": "Schedule and conduct virtual meetings for research collaborations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "research_collaborators": {
                        "type": "array",
                        "description": "A list of names of research collaborators.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meeting_dates": {
                        "type": "array",
                        "description": "A list of meeting dates in YYYY-MM-DD format.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meeting_times": {
                        "type": "array",
                        "description": "A list of meeting times in HH:MM format.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "meeting_length": {
                        "type": "integer",
                        "description": "The duration of each meeting in minutes."
                    }
                },
                "required": [
                    "research_collaborators",
                    "meeting_dates",
                    "meeting_times",
                    "meeting_length"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of strings describing the scheduled virtual meetings."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me schedule virtual meetings for my research collaborations?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Could you please provide me the names of your research collaborators?"
            },
            {
                "role": "user",
                "text": "Here are the names of my research collaborators: Alice, Bob, and Carol."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the names. Now, can you please provide me the meeting dates in YYYY-MM-DD format?"
            },
            {
                "role": "user",
                "text": "Sure, here are the meeting dates: 2022-01-10, 2022-01-15, and 2022-01-20."
            },
            {
                "role": "assistant",
                "text": "Great! Now, I need the meeting times in HH:MM format."
            },
            {
                "role": "user",
                "text": "Here are the meeting times: 09:00, 14:30, and 16:45."
            },
            {
                "role": "assistant",
                "text": "Lastly, please provide me the duration of each meeting in minutes."
            },
            {
                "role": "user",
                "text": "The duration of each meeting is 60 minutes."
            },
            {
                "role": "assistant",
                "text": "Alright, I will schedule the virtual meetings for your research collaborations."
            }
        ],
        "function_call": {
            "function_name": "schedule_virtual_meetings",
            "parameters": {
                "research_collaborators": [
                    "Alice",
                    "Bob",
                    "Carol"
                ],
                "meeting_dates": [
                    "2022-01-10",
                    "2022-01-15",
                    "2022-01-20"
                ],
                "meeting_times": [
                    "09:00",
                    "14:30",
                    "16:45"
                ],
                "meeting_length": 60
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def schedule_virtual_meetings(\\nresearch_collaborators: List[str],\\nmeeting_dates: List[str],\\nmeeting_times: List[str],\\nmeeting_length: int,\\n) -> List[str]:\\n    \"\"\"\\n    Schedule and conduct virtual meetings for research collaborations.\\n\\n    Parameters:\\n        research_collaborators (List[str]): A list of names of research collaborators.\\n        meeting_dates (List[str]): A list of meeting dates in YYYY-MM-DD format.\\n        meeting_times (List[str]): A list of meeting times in HH:MM format.\\n        meeting_length (int): The duration of each meeting in minutes.\\n\\n    Returns:\\n        List[str]: A list of strings describing the scheduled virtual meetings.\\n    \"\"\"', 'function_description': {'name': 'schedule_virtual_meetings', 'description': 'Schedule and conduct virtual meetings for research collaborations.', 'parameters': {'type': 'object', 'properties': {'research_collaborators': {'type': 'array', 'description': 'A list of names of research collaborators.', 'items': {'type': 'string'}}, 'meeting_dates': {'type': 'array', 'description': 'A list of meeting dates in YYYY-MM-DD format.', 'items': {'type': 'string'}}, 'meeting_times': {'type': 'array', 'description': 'A list of meeting times in HH:MM format.', 'items': {'type': 'string'}}, 'meeting_length': {'type': 'integer', 'description': 'The duration of each meeting in minutes.'}}, 'required': ['research_collaborators', 'meeting_dates', 'meeting_times', 'meeting_length']}, 'returns': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of strings describing the scheduled virtual meetings.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-11",
    "description": {
        "function_snippet": "def retrieve_real_time_analytics_or_citations(\n    work_id: str,\n    analytics_type: str\n) -> List[Dict[str, Union[str, int]]]:\n    \"\"\"\n    Retrieves real-time analytics or citations for published works.\n\n    Parameters:\n        work_id (str): The unique identifier of the published work.\n        analytics_type (str): The type of analytics or citations to retrieve.\n\n    Returns:\n        List[Dict[str, Union[str, int]]]: A list of dictionaries containing the requested analytics or citations.\n        Each dictionary should have specific keys depending on the analytics_type.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_real_time_analytics_or_citations",
            "description": "Retrieves real-time analytics or citations for published works.",
            "parameters": {
                "type": "object",
                "properties": {
                    "work_id": {
                        "type": "string",
                        "description": "The unique identifier of the published work."
                    },
                    "analytics_type": {
                        "type": "string",
                        "description": "The type of analytics or citations to retrieve."
                    }
                },
                "required": [
                    "work_id",
                    "analytics_type"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": {
                        "type": [
                            "string",
                            "integer"
                        ]
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_real_time_analytics_or_citations\",\n        \"description\": \"Retrieves real-time analytics or citations for published works.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"work_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The unique identifier of the published work.\"\n                },\n                \"analytics_type\": {\n                    \"type\": \"string\",\n                    \"description\": \"The type of analytics or citations to retrieve.\"\n                }\n            },\n            \"required\": [\"work_id\", \"analytics_type\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": {\n                    \"type\": [\"string\", \"integer\"]\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you retrieve real-time analytics for my published work?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the unique identifier of your published work.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The unique identifier of my published work is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, now please specify the type of analytics or citations you want to retrieve.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want to retrieve analytics.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will now retrieve the real-time analytics for your published work.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_real_time_analytics_or_citations\",\n        \"parameters\": {\n            \"work_id\": \"12345\",\n            \"analytics_type\": \"analytics\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_real_time_analytics_or_citations",
            "description": "Retrieves real-time analytics or citations for published works.",
            "parameters": {
                "type": "object",
                "properties": {
                    "work_id": {
                        "type": "string",
                        "description": "The unique identifier of the published work."
                    },
                    "analytics_type": {
                        "type": "string",
                        "description": "The type of analytics or citations to retrieve."
                    }
                },
                "required": [
                    "work_id",
                    "analytics_type"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": {
                        "type": [
                            "string",
                            "integer"
                        ]
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you retrieve real-time analytics for my published work?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the unique identifier of your published work."
            },
            {
                "role": "user",
                "text": "The unique identifier of my published work is '12345'."
            },
            {
                "role": "assistant",
                "text": "Great, now please specify the type of analytics or citations you want to retrieve."
            },
            {
                "role": "user",
                "text": "I want to retrieve analytics."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the information. I will now retrieve the real-time analytics for your published work."
            }
        ],
        "function_call": {
            "function_name": "retrieve_real_time_analytics_or_citations",
            "parameters": {
                "work_id": "12345",
                "analytics_type": "analytics"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_real_time_analytics_or_citations(\\n    work_id: str,\\n    analytics_type: str\\n) -> List[Dict[str, Union[str, int]]]:\\n    \"\"\"\\n    Retrieves real-time analytics or citations for published works.\\n\\n    Parameters:\\n        work_id (str): The unique identifier of the published work.\\n        analytics_type (str): The type of analytics or citations to retrieve.\\n\\n    Returns:\\n        List[Dict[str, Union[str, int]]]: A list of dictionaries containing the requested analytics or citations.\\n        Each dictionary should have specific keys depending on the analytics_type.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_real_time_analytics_or_citations', 'description': 'Retrieves real-time analytics or citations for published works.', 'parameters': {'type': 'object', 'properties': {'work_id': {'type': 'string', 'description': 'The unique identifier of the published work.'}, 'analytics_type': {'type': 'string', 'description': 'The type of analytics or citations to retrieve.'}}, 'required': ['work_id', 'analytics_type']}, 'returns': {'type': 'array', 'items': {'type': 'object', 'properties': {}, 'additionalProperties': {'type': ['string', 'integer']}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-12",
    "description": {
        "function_snippet": "def run_tests_and_validations() -> None:\n    \"\"\"\n    Run automated code tests and validations for published algorithms.\n\n    Returns:\n        None\n    \"\"\"\n    pass",
        "function_description": {
            "name": "run_tests_and_validations",
            "description": "Run automated code tests and validations for published algorithms.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"run_tests_and_validations\",\n        \"description\": \"Run automated code tests and validations for published algorithms.\",\n        \"parameters\": {},\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you run the tests and validations for the published algorithms?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Just give me a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"run_tests_and_validations\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "run_tests_and_validations",
            "description": "Run automated code tests and validations for published algorithms.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you run the tests and validations for the published algorithms?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Just give me a moment."
            }
        ],
        "function_call": {
            "function_name": "run_tests_and_validations",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def run_tests_and_validations() -> None:\\n    \"\"\"\\n    Run automated code tests and validations for published algorithms.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n    pass', 'function_description': {'name': 'run_tests_and_validations', 'description': 'Run automated code tests and validations for published algorithms.', 'parameters': {}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-13",
    "description": {
        "function_snippet": "def analyze_web_traffic() -> None:\n    \"\"\"\n    Analyzes web traffic and interaction on research portfolio website.\n    \"\"\"\n",
        "function_description": {
            "name": "analyze_web_traffic",
            "description": "Analyzes web traffic and interaction on research portfolio website.",
            "parameters": {},
            "returns": {}
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"analyze_web_traffic\",\n        \"description\": \"Analyzes web traffic and interaction on research portfolio website.\",\n        \"parameters\": {},\n        \"returns\": {}\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you analyze the web traffic and interaction on my research portfolio website?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Could you provide me with the necessary access?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, I'll grant you access to the website.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for granting me access. I will now proceed to analyze the web traffic and interaction on your research portfolio website.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"analyze_web_traffic\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "analyze_web_traffic",
            "description": "Analyzes web traffic and interaction on research portfolio website.",
            "parameters": {},
            "returns": {}
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you analyze the web traffic and interaction on my research portfolio website?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Could you provide me with the necessary access?"
            },
            {
                "role": "user",
                "text": "Yes, I'll grant you access to the website."
            },
            {
                "role": "assistant",
                "text": "Thank you for granting me access. I will now proceed to analyze the web traffic and interaction on your research portfolio website."
            }
        ],
        "function_call": {
            "function_name": "analyze_web_traffic",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def analyze_web_traffic() -> None:\\n    \"\"\"\\n    Analyzes web traffic and interaction on research portfolio website.\\n    \"\"\"\\n', 'function_description': {'name': 'analyze_web_traffic', 'description': 'Analyzes web traffic and interaction on research portfolio website.', 'parameters': {}, 'returns': {}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-14",
    "description": {
        "function_snippet": "def convert_results(results: pd.DataFrame, output_format: str) -> str:",
        "function_description": {
            "name": "convert_results",
            "description": "Convert experimental results into formats suitable for academic publishing.",
            "parameters": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "object",
                        "description": "A pandas DataFrame containing the experimental results."
                    },
                    "output_format": {
                        "type": "string",
                        "description": "The desired output format for the converted results."
                    }
                },
                "required": [
                    "results",
                    "output_format"
                ]
            },
            "returns": {
                "type": "string",
                "description": "The converted results in the specified output format."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"convert_results\",\n        \"description\": \"Convert experimental results into formats suitable for academic publishing.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"results\": {\n                    \"type\": \"object\",\n                    \"description\": \"A pandas DataFrame containing the experimental results.\"\n                },\n                \"output_format\": {\n                    \"type\": \"string\",\n                    \"description\": \"The desired output format for the converted results.\"\n                }\n            },\n            \"required\": [\"results\", \"output_format\"]\n        },\n        \"returns\": {\n            \"type\": \"string\",\n            \"description\": \"The converted results in the specified output format.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you convert my experimental results into a suitable format for academic publishing?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Can you provide me with the experimental results as a pandas DataFrame?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, I have the experimental results stored in a pandas DataFrame.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! Please also let me know the desired output format for the converted results.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want the converted results in a PDF format.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright. I will convert your experimental results into the PDF format suitable for academic publishing.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"convert_results\",\n        \"parameters\": {\n            \"results\": \"pandas DataFrame\",\n            \"output_format\": \"PDF\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "convert_results",
            "description": "Convert experimental results into formats suitable for academic publishing.",
            "parameters": {
                "type": "object",
                "properties": {
                    "results": {
                        "type": "object",
                        "description": "A pandas DataFrame containing the experimental results."
                    },
                    "output_format": {
                        "type": "string",
                        "description": "The desired output format for the converted results."
                    }
                },
                "required": [
                    "results",
                    "output_format"
                ]
            },
            "returns": {
                "type": "string",
                "description": "The converted results in the specified output format."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you convert my experimental results into a suitable format for academic publishing?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Can you provide me with the experimental results as a pandas DataFrame?"
            },
            {
                "role": "user",
                "text": "Yes, I have the experimental results stored in a pandas DataFrame."
            },
            {
                "role": "assistant",
                "text": "Great! Please also let me know the desired output format for the converted results."
            },
            {
                "role": "user",
                "text": "I want the converted results in a PDF format."
            },
            {
                "role": "assistant",
                "text": "Alright. I will convert your experimental results into the PDF format suitable for academic publishing."
            }
        ],
        "function_call": {
            "function_name": "convert_results",
            "parameters": {
                "results": "pandas DataFrame",
                "output_format": "PDF"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def convert_results(results: pd.DataFrame, output_format: str) -> str:', 'function_description': {'name': 'convert_results', 'description': 'Convert experimental results into formats suitable for academic publishing.', 'parameters': {'type': 'object', 'properties': {'results': {'type': 'object', 'description': 'A pandas DataFrame containing the experimental results.'}, 'output_format': {'type': 'string', 'description': 'The desired output format for the converted results.'}}, 'required': ['results', 'output_format']}, 'returns': {'type': 'string', 'description': 'The converted results in the specified output format.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-15",
    "description": {
        "function_snippet": "def scrape_job_boards() -> List[Dict[str, str]]:\n    \"\"\"\n    Scrapes online job boards for research positions or grants in the field of AI.\n\n    Returns:\n        List[Dict[str, str]]: A list of dictionaries containing job details.\n                              Each dictionary should have 'title', 'company', and 'location' keys.\n    \"\"\"\n",
        "function_description": {
            "name": "scrape_job_boards",
            "description": "Scrapes online job boards for research positions or grants in the field of AI.",
            "parameters": {
                "type": "object",
                "properties": {}
            },
            "returns": {
                "type": "object",
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "title",
                            "company",
                            "location"
                        ]
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"scrape_job_boards\",\n        \"description\": \"Scrapes online job boards for research positions or grants in the field of AI.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {}\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"title\": {\n                            \"type\": \"string\"\n                        },\n                        \"company\": {\n                            \"type\": \"string\"\n                        },\n                        \"location\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    \"required\": [\n                        \"title\",\n                        \"company\",\n                        \"location\"\n                    ]\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you scrape job boards for research positions in AI?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please wait while I scrape the job boards.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"scrape_job_boards\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "scrape_job_boards",
            "description": "Scrapes online job boards for research positions or grants in the field of AI.",
            "parameters": {
                "type": "object",
                "properties": {}
            },
            "returns": {
                "type": "object",
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "title",
                            "company",
                            "location"
                        ]
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you scrape job boards for research positions in AI?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please wait while I scrape the job boards."
            }
        ],
        "function_call": {
            "function_name": "scrape_job_boards",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def scrape_job_boards() -> List[Dict[str, str]]:\\n    \"\"\"\\n    Scrapes online job boards for research positions or grants in the field of AI.\\n\\n    Returns:\\n        List[Dict[str, str]]: A list of dictionaries containing job details.\\n                              Each dictionary should have \\'title\\', \\'company\\', and \\'location\\' keys.\\n    \"\"\"\\n', 'function_description': {'name': 'scrape_job_boards', 'description': 'Scrapes online job boards for research positions or grants in the field of AI.', 'parameters': {'type': 'object', 'properties': {}}, 'returns': {'type': 'object', 'properties': {'type': 'array', 'items': {'type': 'object', 'properties': {'title': {'type': 'string'}, 'company': {'type': 'string'}, 'location': {'type': 'string'}}, 'required': ['title', 'company', 'location']}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-16",
    "description": {
        "function_snippet": "def follow_ai_influencers() -> List[str]:\n    \"\"\"\n    Automatically follows and collects posts from AI influencers or research leaders on social media platforms.\n\n    Returns:\n        List[str]: A list of usernames or handles of the AI influencers or research leaders.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "follow_ai_influencers",
            "description": "Automatically follows and collects posts from AI influencers or research leaders on social media platforms.",
            "parameters": {
                "type": "None"
            },
            "returns": {
                "type": "List[str]",
                "description": "A list of usernames or handles of the AI influencers or research leaders."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"follow_ai_influencers\",\n        \"description\": \"Automatically follows and collects posts from AI influencers or research leaders on social media platforms.\",\n        \"parameters\": {\n            \"type\": \"None\"\n        },\n        \"returns\": {\n            \"type\": \"List[str]\",\n            \"description\": \"A list of usernames or handles of the AI influencers or research leaders.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me follow AI influencers on social media?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Just give me a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"follow_ai_influencers\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "follow_ai_influencers",
            "description": "Automatically follows and collects posts from AI influencers or research leaders on social media platforms.",
            "parameters": {
                "type": "None"
            },
            "returns": {
                "type": "List[str]",
                "description": "A list of usernames or handles of the AI influencers or research leaders."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me follow AI influencers on social media?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Just give me a moment."
            }
        ],
        "function_call": {
            "function_name": "follow_ai_influencers",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def follow_ai_influencers() -> List[str]:\\n    \"\"\"\\n    Automatically follows and collects posts from AI influencers or research leaders on social media platforms.\\n\\n    Returns:\\n        List[str]: A list of usernames or handles of the AI influencers or research leaders.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'follow_ai_influencers', 'description': 'Automatically follows and collects posts from AI influencers or research leaders on social media platforms.', 'parameters': {'type': 'None'}, 'returns': {'type': 'List[str]', 'description': 'A list of usernames or handles of the AI influencers or research leaders.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-17",
    "description": {
        "function_snippet": "def generate_summary(\n    research_papers: List[str],\n    num_topics: int,\n) -> List[str]:\n    \"\"\"\n    Generates automated summaries of trending AI research topics.\n\n    Parameters:\n        research_papers (List[str]): A list of research papers.\n        num_topics (int): The number of topics to generate summaries for.\n\n    Returns:\n        List[str]: A list of automated summaries of trending AI research topics.\n    \"\"\"\n",
        "function_description": {
            "name": "generate_summary",
            "description": "Generates automated summaries of trending AI research topics.",
            "parameters": {
                "type": "object",
                "properties": {
                    "research_papers": {
                        "type": "array",
                        "description": "A list of research papers.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "num_topics": {
                        "type": "integer",
                        "description": "The number of topics to generate summaries for."
                    }
                },
                "required": [
                    "research_papers",
                    "num_topics"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of automated summaries of trending AI research topics."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"generate_summary\",\n        \"description\": \"Generates automated summaries of trending AI research topics.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"research_papers\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of research papers.\",\n                    \"items\": {\"type\": \"string\"}\n                },\n                \"num_topics\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of topics to generate summaries for.\"\n                }\n            },\n            \"required\": [\"research_papers\", \"num_topics\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\"type\": \"string\"},\n            \"description\": \"A list of automated summaries of trending AI research topics.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you generate automated summaries of trending AI research topics for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with a list of research papers and the number of topics you want summaries for.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have a list of research papers and I want summaries for 5 topics.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm generating the automated summaries now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"generate_summary\",\n        \"parameters\": {\n            \"research_papers\": [\"paper1\", \"paper2\", \"paper3\"],\n            \"num_topics\": 5\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "generate_summary",
            "description": "Generates automated summaries of trending AI research topics.",
            "parameters": {
                "type": "object",
                "properties": {
                    "research_papers": {
                        "type": "array",
                        "description": "A list of research papers.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "num_topics": {
                        "type": "integer",
                        "description": "The number of topics to generate summaries for."
                    }
                },
                "required": [
                    "research_papers",
                    "num_topics"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of automated summaries of trending AI research topics."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you generate automated summaries of trending AI research topics for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with a list of research papers and the number of topics you want summaries for."
            },
            {
                "role": "user",
                "text": "I have a list of research papers and I want summaries for 5 topics."
            },
            {
                "role": "assistant",
                "text": "Great, I'm generating the automated summaries now."
            }
        ],
        "function_call": {
            "function_name": "generate_summary",
            "parameters": {
                "research_papers": [
                    "paper1",
                    "paper2",
                    "paper3"
                ],
                "num_topics": 5
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def generate_summary(\\n    research_papers: List[str],\\n    num_topics: int,\\n) -> List[str]:\\n    \"\"\"\\n    Generates automated summaries of trending AI research topics.\\n\\n    Parameters:\\n        research_papers (List[str]): A list of research papers.\\n        num_topics (int): The number of topics to generate summaries for.\\n\\n    Returns:\\n        List[str]: A list of automated summaries of trending AI research topics.\\n    \"\"\"\\n', 'function_description': {'name': 'generate_summary', 'description': 'Generates automated summaries of trending AI research topics.', 'parameters': {'type': 'object', 'properties': {'research_papers': {'type': 'array', 'description': 'A list of research papers.', 'items': {'type': 'string'}}, 'num_topics': {'type': 'integer', 'description': 'The number of topics to generate summaries for.'}}, 'required': ['research_papers', 'num_topics']}, 'returns': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of automated summaries of trending AI research topics.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-18",
    "description": {
        "function_snippet": "def translate_research_papers(\n    papers: List[str],\n    languages: List[str]\n) -> Dict[str, List[str]]:\n    \"\"\"\n    Translates research papers into multiple languages.\n\n    Parameters:\n        papers (List[str]): A list of research papers or articles to be translated.\n        languages (List[str]): A list of target languages to translate the papers into.\n\n    Returns:\n        Dict[str, List[str]]: A dictionary with languages as keys and translated papers as values.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "translate_research_papers",
            "description": "Translates research papers into multiple languages.",
            "parameters": {
                "type": "object",
                "properties": {
                    "papers": {
                        "type": "array",
                        "description": "A list of research papers or articles to be translated.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "languages": {
                        "type": "array",
                        "description": "A list of target languages to translate the papers into.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "papers",
                    "languages"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "language": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"translate_research_papers\",\n        \"description\": \"Translates research papers into multiple languages.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"papers\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of research papers or articles to be translated.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"languages\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of target languages to translate the papers into.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"papers\", \"languages\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you translate my research papers into different languages?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Please provide me with the list of research papers and the target languages you want them to be translated into.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have three research papers and I want them to be translated into Spanish, French, and German.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! I will translate your research papers into the requested languages.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"translate_research_papers\",\n        \"parameters\": {\n            \"papers\": [\"paper1\", \"paper2\", \"paper3\"],\n            \"languages\": [\"Spanish\", \"French\", \"German\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "translate_research_papers",
            "description": "Translates research papers into multiple languages.",
            "parameters": {
                "type": "object",
                "properties": {
                    "papers": {
                        "type": "array",
                        "description": "A list of research papers or articles to be translated.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "languages": {
                        "type": "array",
                        "description": "A list of target languages to translate the papers into.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "papers",
                    "languages"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "language": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you translate my research papers into different languages?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Please provide me with the list of research papers and the target languages you want them to be translated into."
            },
            {
                "role": "user",
                "text": "I have three research papers and I want them to be translated into Spanish, French, and German."
            },
            {
                "role": "assistant",
                "text": "Great! I will translate your research papers into the requested languages."
            }
        ],
        "function_call": {
            "function_name": "translate_research_papers",
            "parameters": {
                "papers": [
                    "paper1",
                    "paper2",
                    "paper3"
                ],
                "languages": [
                    "Spanish",
                    "French",
                    "German"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def translate_research_papers(\\n    papers: List[str],\\n    languages: List[str]\\n) -> Dict[str, List[str]]:\\n    \"\"\"\\n    Translates research papers into multiple languages.\\n\\n    Parameters:\\n        papers (List[str]): A list of research papers or articles to be translated.\\n        languages (List[str]): A list of target languages to translate the papers into.\\n\\n    Returns:\\n        Dict[str, List[str]]: A dictionary with languages as keys and translated papers as values.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'translate_research_papers', 'description': 'Translates research papers into multiple languages.', 'parameters': {'type': 'object', 'properties': {'papers': {'type': 'array', 'description': 'A list of research papers or articles to be translated.', 'items': {'type': 'string'}}, 'languages': {'type': 'array', 'description': 'A list of target languages to translate the papers into.', 'items': {'type': 'string'}}}, 'required': ['papers', 'languages']}, 'returns': {'type': 'object', 'properties': {'language': {'type': 'array', 'items': {'type': 'string'}}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-19",
    "description": {
        "function_snippet": "def automate_backup(\n    data_folder: str,\n    code_folder: str,\n    backup_folder: str,\n) -> None:\n    \"\"\"\n    Automates the backup of research data and code.\n\n    Parameters:\n        data_folder (str): The path to the folder containing research data.\n        code_folder (str): The path to the folder containing code.\n        backup_folder (str): The path to the folder where the backup will be stored.\n\n    Returns:\n        None\n    \"\"\"\n\n",
        "function_description": {
            "name": "automate_backup",
            "description": "Automates the backup of research data and code.",
            "parameters": {
                "type": "object",
                "properties": {
                    "data_folder": {
                        "type": "string",
                        "description": "The path to the folder containing research data."
                    },
                    "code_folder": {
                        "type": "string",
                        "description": "The path to the folder containing code."
                    },
                    "backup_folder": {
                        "type": "string",
                        "description": "The path to the folder where the backup will be stored."
                    }
                },
                "required": [
                    "data_folder",
                    "code_folder",
                    "backup_folder"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"automate_backup\",\n        \"description\": \"Automates the backup of research data and code.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"data_folder\": {\n                    \"type\": \"string\",\n                    \"description\": \"The path to the folder containing research data.\"\n                },\n                \"code_folder\": {\n                    \"type\": \"string\",\n                    \"description\": \"The path to the folder containing code.\"\n                },\n                \"backup_folder\": {\n                    \"type\": \"string\",\n                    \"description\": \"The path to the folder where the backup will be stored.\"\n                }\n            },\n            \"required\": [\"data_folder\", \"code_folder\", \"backup_folder\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me automate the backup of my research data and code?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help with that. Please provide the paths to your data folder, code folder, and backup folder.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My data folder is 'C:/research/data', my code folder is 'C:/research/code', and my backup folder is 'C:/research/backup'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will automate the backup process for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"automate_backup\",\n        \"parameters\": {\n            \"data_folder\": \"C:/research/data\",\n            \"code_folder\": \"C:/research/code\",\n            \"backup_folder\": \"C:/research/backup\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "automate_backup",
            "description": "Automates the backup of research data and code.",
            "parameters": {
                "type": "object",
                "properties": {
                    "data_folder": {
                        "type": "string",
                        "description": "The path to the folder containing research data."
                    },
                    "code_folder": {
                        "type": "string",
                        "description": "The path to the folder containing code."
                    },
                    "backup_folder": {
                        "type": "string",
                        "description": "The path to the folder where the backup will be stored."
                    }
                },
                "required": [
                    "data_folder",
                    "code_folder",
                    "backup_folder"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me automate the backup of my research data and code?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help with that. Please provide the paths to your data folder, code folder, and backup folder."
            },
            {
                "role": "user",
                "text": "My data folder is 'C:/research/data', my code folder is 'C:/research/code', and my backup folder is 'C:/research/backup'."
            },
            {
                "role": "assistant",
                "text": "Great, I will automate the backup process for you."
            }
        ],
        "function_call": {
            "function_name": "automate_backup",
            "parameters": {
                "data_folder": "C:/research/data",
                "code_folder": "C:/research/code",
                "backup_folder": "C:/research/backup"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def automate_backup(\\n    data_folder: str,\\n    code_folder: str,\\n    backup_folder: str,\\n) -> None:\\n    \"\"\"\\n    Automates the backup of research data and code.\\n\\n    Parameters:\\n        data_folder (str): The path to the folder containing research data.\\n        code_folder (str): The path to the folder containing code.\\n        backup_folder (str): The path to the folder where the backup will be stored.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n\\n', 'function_description': {'name': 'automate_backup', 'description': 'Automates the backup of research data and code.', 'parameters': {'type': 'object', 'properties': {'data_folder': {'type': 'string', 'description': 'The path to the folder containing research data.'}, 'code_folder': {'type': 'string', 'description': 'The path to the folder containing code.'}, 'backup_folder': {'type': 'string', 'description': 'The path to the folder where the backup will be stored.'}}, 'required': ['data_folder', 'code_folder', 'backup_folder']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-20",
    "description": {
        "function_snippet": "def create_visuals(\n    data: Any,\n    algorithm: str,\n    presentation_type: str,\n    slide_count: int,\n) -> None:\n    \"\"\"\n    Create visual representations of data sets or algorithms for presentations.\n\n    Parameters:\n        data (Any): The data set or algorithm to be visualized.\n        algorithm (str): The name of the algorithm (if applicable).\n        presentation_type (str): The type of presentation (e.g., bar chart, line graph).\n        slide_count (int): The number of slides to be created.\n\n    Returns:\n        None\n    \"\"\"\n\n",
        "function_description": {
            "name": "create_visuals",
            "description": "Create visual representations of data sets or algorithms for presentations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "any",
                        "description": "The data set or algorithm to be visualized."
                    },
                    "algorithm": {
                        "type": "string",
                        "description": "The name of the algorithm (if applicable)."
                    },
                    "presentation_type": {
                        "type": "string",
                        "description": "The type of presentation (e.g., bar chart, line graph)."
                    },
                    "slide_count": {
                        "type": "integer",
                        "description": "The number of slides to be created."
                    }
                },
                "required": [
                    "data",
                    "algorithm",
                    "presentation_type",
                    "slide_count"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"create_visuals\",\n        \"description\": \"Create visual representations of data sets or algorithms for presentations.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"data\": {\n                    \"type\": \"any\",\n                    \"description\": \"The data set or algorithm to be visualized.\"\n                },\n                \"algorithm\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the algorithm (if applicable).\"\n                },\n                \"presentation_type\": {\n                    \"type\": \"string\",\n                    \"description\": \"The type of presentation (e.g., bar chart, line graph).\"\n                },\n                \"slide_count\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of slides to be created.\"\n                }\n            },\n            \"required\": [\"data\", \"algorithm\", \"presentation_type\", \"slide_count\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you create visual representations of my data for a presentation?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Could you provide me with the data, algorithm name, presentation type, and the number of slides?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, I have a dataset that I want to visualize using the 'K-means' algorithm. I would like a bar chart presentation with 10 slides.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will create visual representations of your data using the 'K-means' algorithm, in the form of a bar chart with 10 slides.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"create_visuals\",\n        \"parameters\": {\n            \"data\": \"dataset\",\n            \"algorithm\": \"K-means\",\n            \"presentation_type\": \"bar chart\",\n            \"slide_count\": 10\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "create_visuals",
            "description": "Create visual representations of data sets or algorithms for presentations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "any",
                        "description": "The data set or algorithm to be visualized."
                    },
                    "algorithm": {
                        "type": "string",
                        "description": "The name of the algorithm (if applicable)."
                    },
                    "presentation_type": {
                        "type": "string",
                        "description": "The type of presentation (e.g., bar chart, line graph)."
                    },
                    "slide_count": {
                        "type": "integer",
                        "description": "The number of slides to be created."
                    }
                },
                "required": [
                    "data",
                    "algorithm",
                    "presentation_type",
                    "slide_count"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you create visual representations of my data for a presentation?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Could you provide me with the data, algorithm name, presentation type, and the number of slides?"
            },
            {
                "role": "user",
                "text": "Yes, I have a dataset that I want to visualize using the 'K-means' algorithm. I would like a bar chart presentation with 10 slides."
            },
            {
                "role": "assistant",
                "text": "Great, I will create visual representations of your data using the 'K-means' algorithm, in the form of a bar chart with 10 slides."
            }
        ],
        "function_call": {
            "function_name": "create_visuals",
            "parameters": {
                "data": "dataset",
                "algorithm": "K-means",
                "presentation_type": "bar chart",
                "slide_count": 10
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def create_visuals(\\n    data: Any,\\n    algorithm: str,\\n    presentation_type: str,\\n    slide_count: int,\\n) -> None:\\n    \"\"\"\\n    Create visual representations of data sets or algorithms for presentations.\\n\\n    Parameters:\\n        data (Any): The data set or algorithm to be visualized.\\n        algorithm (str): The name of the algorithm (if applicable).\\n        presentation_type (str): The type of presentation (e.g., bar chart, line graph).\\n        slide_count (int): The number of slides to be created.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n\\n', 'function_description': {'name': 'create_visuals', 'description': 'Create visual representations of data sets or algorithms for presentations.', 'parameters': {'type': 'object', 'properties': {'data': {'type': 'any', 'description': 'The data set or algorithm to be visualized.'}, 'algorithm': {'type': 'string', 'description': 'The name of the algorithm (if applicable).'}, 'presentation_type': {'type': 'string', 'description': 'The type of presentation (e.g., bar chart, line graph).'}, 'slide_count': {'type': 'integer', 'description': 'The number of slides to be created.'}}, 'required': ['data', 'algorithm', 'presentation_type', 'slide_count']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "ai_research-21",
    "description": {
        "function_snippet": "def generate_newsletter() -> str:\n    \"\"\"\n    Generates a monthly newsletter on AI research findings.\n\n    Returns:\n        str: The generated newsletter.\n    \"\"\"\n    # Code implementation to generate the newsletter goes here",
        "function_description": {
            "name": "generate_newsletter",
            "description": "Generates a monthly newsletter on AI research findings.",
            "parameters": null,
            "returns": {
                "type": "string",
                "description": "The generated newsletter."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"generate_newsletter\",\n        \"description\": \"Generates a monthly newsletter on AI research findings.\",\n        \"parameters\": null,\n        \"returns\": {\n            \"type\": \"string\",\n            \"description\": \"The generated newsletter.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you generate the monthly AI research newsletter for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Just give me a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"generate_newsletter\"\n    }\n}",
    "data": {
        "function_description": {
            "name": "generate_newsletter",
            "description": "Generates a monthly newsletter on AI research findings.",
            "parameters": null,
            "returns": {
                "type": "string",
                "description": "The generated newsletter."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you generate the monthly AI research newsletter for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Just give me a moment."
            }
        ],
        "function_call": {
            "function_name": "generate_newsletter"
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def generate_newsletter() -> str:\\n    \"\"\"\\n    Generates a monthly newsletter on AI research findings.\\n\\n    Returns:\\n        str: The generated newsletter.\\n    \"\"\"\\n    # Code implementation to generate the newsletter goes here', 'function_description': {'name': 'generate_newsletter', 'description': 'Generates a monthly newsletter on AI research findings.', 'parameters': None, 'returns': {'type': 'string', 'description': 'The generated newsletter.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}

{
    "function_id": null,
    "description": {
        "function_snippet": "def send_invoice(client_email: str, invoice_number: str, amount_due: float) -> None:\n    \"\"\"\n    Sends an invoice to a client.\n\n    Parameters:\n        client_email (str): The email address of the client.\n        invoice_number (str): The invoice number.\n        amount_due (float): The amount due on the invoice.\n\n    Returns:\n        None\n    \"\"\"\n    # Code to send the invoice to the client's email address\n    pass",
        "function_description": {
            "name": "send_invoice",
            "description": "Sends an invoice to a client.",
            "parameters": {
                "type": "object",
                "properties": {
                    "client_email": {
                        "type": "string",
                        "description": "The email address of the client."
                    },
                    "invoice_number": {
                        "type": "string",
                        "description": "The invoice number."
                    },
                    "amount_due": {
                        "type": "number",
                        "description": "The amount due on the invoice."
                    }
                },
                "required": [
                    "client_email",
                    "invoice_number",
                    "amount_due"
                ]
            },
            "returns": {
                "type": "null"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"send_invoice\",\n        \"description\": \"Sends an invoice to a client.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"client_email\": {\n                    \"type\": \"string\",\n                    \"description\": \"The email address of the client.\"\n                },\n                \"invoice_number\": {\n                    \"type\": \"string\",\n                    \"description\": \"The invoice number.\"\n                },\n                \"amount_due\": {\n                    \"type\": \"number\",\n                    \"description\": \"The amount due on the invoice.\"\n                }\n            },\n            \"required\": [\"client_email\", \"invoice_number\", \"amount_due\"]\n        },\n        \"returns\": {\n            \"type\": \"null\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me send an invoice to a client?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with the client's email address, invoice number, and the amount due.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The client's email address is 'example@example.com', the invoice number is 'INV-123', and the amount due is $1000.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will now send the invoice to the client's email address.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"send_invoice\",\n        \"parameters\": {\n            \"client_email\": \"example@example.com\",\n            \"invoice_number\": \"INV-123\",\n            \"amount_due\": 1000.0\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "send_invoice",
            "description": "Sends an invoice to a client.",
            "parameters": {
                "type": "object",
                "properties": {
                    "client_email": {
                        "type": "string",
                        "description": "The email address of the client."
                    },
                    "invoice_number": {
                        "type": "string",
                        "description": "The invoice number."
                    },
                    "amount_due": {
                        "type": "number",
                        "description": "The amount due on the invoice."
                    }
                },
                "required": [
                    "client_email",
                    "invoice_number",
                    "amount_due"
                ]
            },
            "returns": {
                "type": "null"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me send an invoice to a client?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with the client's email address, invoice number, and the amount due."
            },
            {
                "role": "user",
                "text": "The client's email address is 'example@example.com', the invoice number is 'INV-123', and the amount due is $1000."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will now send the invoice to the client's email address."
            }
        ],
        "function_call": {
            "function_name": "send_invoice",
            "parameters": {
                "client_email": "example@example.com",
                "invoice_number": "INV-123",
                "amount_due": 1000.0
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def send_invoice(client_email: str, invoice_number: str, amount_due: float) -> None:\\n    \"\"\"\\n    Sends an invoice to a client.\\n\\n    Parameters:\\n        client_email (str): The email address of the client.\\n        invoice_number (str): The invoice number.\\n        amount_due (float): The amount due on the invoice.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n    # Code to send the invoice to the client\\'s email address\\n    pass', 'function_description': {'name': 'send_invoice', 'description': 'Sends an invoice to a client.', 'parameters': {'type': 'object', 'properties': {'client_email': {'type': 'string', 'description': 'The email address of the client.'}, 'invoice_number': {'type': 'string', 'description': 'The invoice number.'}, 'amount_due': {'type': 'number', 'description': 'The amount due on the invoice.'}}, 'required': ['client_email', 'invoice_number', 'amount_due']}, 'returns': {'type': 'null'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def schedule_meeting(\nmeeting_time: str,\nmeeting_date: str,\nparticipants: List[str],\nlocation: str,\n) -> bool:\n\"\"\"\nSchedule a meeting at a specific time, date, and location with the given participants.\n\nParameters:\nmeeting_time (str): The time of the meeting.\nmeeting_date (str): The date of the meeting.\nparticipants (List[str]): A list of participants' names.\nlocation (str): The location of the meeting.\n\nReturns:\nbool: True if the meeting is successfully scheduled, False otherwise.\n\"\"\"\n\n",
        "function_description": {
            "name": "schedule_meeting",
            "description": "Schedule a meeting at a specific time, date, and location with the given participants.",
            "parameters": {
                "type": "object",
                "properties": {
                    "meeting_time": {
                        "type": "string",
                        "description": "The time of the meeting."
                    },
                    "meeting_date": {
                        "type": "string",
                        "description": "The date of the meeting."
                    },
                    "participants": {
                        "type": "array",
                        "description": "A list of participants' names.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the meeting."
                    }
                },
                "required": [
                    "meeting_time",
                    "meeting_date",
                    "participants",
                    "location"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the meeting is successfully scheduled, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"schedule_meeting\",\n        \"description\": \"Schedule a meeting at a specific time, date, and location with the given participants.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"meeting_time\": {\n                    \"type\": \"string\",\n                    \"description\": \"The time of the meeting.\"\n                },\n                \"meeting_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The date of the meeting.\"\n                },\n                \"participants\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of participants' names.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"The location of the meeting.\"\n                }\n            },\n            \"required\": [\"meeting_time\", \"meeting_date\", \"participants\", \"location\"]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the meeting is successfully scheduled, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me schedule a meeting?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I can assist you with that. Can you please provide me with the meeting time, date, participants, and location?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The meeting time is 2:00 PM, the meeting date is tomorrow, the participants are John and Jane, and the location is the conference room.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it! I will schedule the meeting for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"schedule_meeting\",\n        \"parameters\": {\n            \"meeting_time\": \"2:00 PM\",\n            \"meeting_date\": \"tomorrow\",\n            \"participants\": [\"John\", \"Jane\"],\n            \"location\": \"conference room\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "schedule_meeting",
            "description": "Schedule a meeting at a specific time, date, and location with the given participants.",
            "parameters": {
                "type": "object",
                "properties": {
                    "meeting_time": {
                        "type": "string",
                        "description": "The time of the meeting."
                    },
                    "meeting_date": {
                        "type": "string",
                        "description": "The date of the meeting."
                    },
                    "participants": {
                        "type": "array",
                        "description": "A list of participants' names.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the meeting."
                    }
                },
                "required": [
                    "meeting_time",
                    "meeting_date",
                    "participants",
                    "location"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the meeting is successfully scheduled, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me schedule a meeting?"
            },
            {
                "role": "assistant",
                "text": "Of course! I can assist you with that. Can you please provide me with the meeting time, date, participants, and location?"
            },
            {
                "role": "user",
                "text": "The meeting time is 2:00 PM, the meeting date is tomorrow, the participants are John and Jane, and the location is the conference room."
            },
            {
                "role": "assistant",
                "text": "Got it! I will schedule the meeting for you."
            }
        ],
        "function_call": {
            "function_name": "schedule_meeting",
            "parameters": {
                "meeting_time": "2:00 PM",
                "meeting_date": "tomorrow",
                "participants": [
                    "John",
                    "Jane"
                ],
                "location": "conference room"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def schedule_meeting(\\nmeeting_time: str,\\nmeeting_date: str,\\nparticipants: List[str],\\nlocation: str,\\n) -> bool:\\n\"\"\"\\nSchedule a meeting at a specific time, date, and location with the given participants.\\n\\nParameters:\\nmeeting_time (str): The time of the meeting.\\nmeeting_date (str): The date of the meeting.\\nparticipants (List[str]): A list of participants\\' names.\\nlocation (str): The location of the meeting.\\n\\nReturns:\\nbool: True if the meeting is successfully scheduled, False otherwise.\\n\"\"\"\\n\\n', 'function_description': {'name': 'schedule_meeting', 'description': 'Schedule a meeting at a specific time, date, and location with the given participants.', 'parameters': {'type': 'object', 'properties': {'meeting_time': {'type': 'string', 'description': 'The time of the meeting.'}, 'meeting_date': {'type': 'string', 'description': 'The date of the meeting.'}, 'participants': {'type': 'array', 'description': \"A list of participants' names.\", 'items': {'type': 'string'}}, 'location': {'type': 'string', 'description': 'The location of the meeting.'}}, 'required': ['meeting_time', 'meeting_date', 'participants', 'location']}, 'returns': {'type': 'boolean', 'description': 'True if the meeting is successfully scheduled, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def example_function(\n    num_tickets: int,\n    ticket_type: Dict[str, str],\n    event_details: str,\n    attendees: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders event tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        ticket_type (str): The type of ticket.\n        event_details (Dict[str, str]): Details about the event, should contain a date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing attendee details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"\n",
        "function_description": {
            "name": "example_function",
            "description": "Orders event tickets and returns the total price.",
            "parameters": {
                "type": "object",
                "properties": {
                    "num_tickets": {
                        "type": "integer",
                        "description": "The number of tickets to buy."
                    },
                    "ticket_type": {
                        "type": "object",
                        "description": "The type of ticket.",
                        "properties": {
                            "type": "string"
                        }
                    },
                    "event_details": {
                        "type": "object",
                        "description": "Details about the event, should contain a date in YYYY-MM-DD format.",
                        "properties": {
                            "date": {
                                "type": "string",
                                "description": "Event data in YYYY-MM-DD format."
                            }
                        },
                        "required": [
                            "date"
                        ]
                    },
                    "attendees": {
                        "type": "array",
                        "description": "A list of dictionaries containing attendee details. Each dictionary should have 'name' and 'age' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "age": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "age"
                            ]
                        }
                    }
                },
                "required": [
                    "num_tickets",
                    "ticket_type",
                    "event_details",
                    "attendees"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "total_price": {
                        "type": "float",
                        "description": "The total price for the tickets ordered."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"example_function\",\n        \"description\": \"Orders event tickets and returns the total price.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"num_tickets\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of tickets to buy.\"\n                },\n                \"ticket_type\": {\n                    \"type\": \"object\",\n                    \"description\": \"The type of ticket.\",\n                    \"properties\": {\n                        \"type\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                },\n                \"event_details\": {\n                    \"type\": \"object\",\n                    \"description\": \"Details about the event, should contain a date in YYYY-MM-DD format.\",\n                    \"properties\": {\n                        \"date\": {\n                            \"type\": \"string\",\n                            \"description\": \"Event data in YYYY-MM-DD format.\"\n                        }\n                    },\n                    \"required\": [\"date\"]\n                },\n                \"attendees\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing attendee details. Each dictionary should have 'name' and 'age' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\"\n                            },\n                            \"age\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\"name\", \"age\"]\n                    }\n                }\n            },\n            \"required\": [\"num_tickets\", \"ticket_type\", \"event_details\", \"attendees\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"total_price\": {\n                    \"type\": \"float\",\n                    \"description\": \"The total price for the tickets ordered.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me order event tickets?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you provide me with the number of tickets you want to buy, the type of ticket, event details, and attendee details?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want to buy 2 tickets of type 'VIP', the event is on '2022-05-20', and I will be attending with 2 people named 'John' and 'Jane' with ages '30' and '28' respectively.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! I will now place the order for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"example_function\",\n        \"parameters\": {\n            \"num_tickets\": 2,\n            \"ticket_type\": {\n                \"type\": \"VIP\"\n            },\n            \"event_details\": {\n                \"date\": \"2022-05-20\"\n            },\n            \"attendees\": [\n                {\n                    \"name\": \"John\",\n                    \"age\": \"30\"\n                },\n                {\n                    \"name\": \"Jane\",\n                    \"age\": \"28\"\n                }\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "example_function",
            "description": "Orders event tickets and returns the total price.",
            "parameters": {
                "type": "object",
                "properties": {
                    "num_tickets": {
                        "type": "integer",
                        "description": "The number of tickets to buy."
                    },
                    "ticket_type": {
                        "type": "object",
                        "description": "The type of ticket.",
                        "properties": {
                            "type": {
                                "type": "string"
                            }
                        }
                    },
                    "event_details": {
                        "type": "object",
                        "description": "Details about the event, should contain a date in YYYY-MM-DD format.",
                        "properties": {
                            "date": {
                                "type": "string",
                                "description": "Event data in YYYY-MM-DD format."
                            }
                        },
                        "required": [
                            "date"
                        ]
                    },
                    "attendees": {
                        "type": "array",
                        "description": "A list of dictionaries containing attendee details. Each dictionary should have 'name' and 'age' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "age": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "age"
                            ]
                        }
                    }
                },
                "required": [
                    "num_tickets",
                    "ticket_type",
                    "event_details",
                    "attendees"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "total_price": {
                        "type": "float",
                        "description": "The total price for the tickets ordered."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me order event tickets?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you provide me with the number of tickets you want to buy, the type of ticket, event details, and attendee details?"
            },
            {
                "role": "user",
                "text": "I want to buy 2 tickets of type 'VIP', the event is on '2022-05-20', and I will be attending with 2 people named 'John' and 'Jane' with ages '30' and '28' respectively."
            },
            {
                "role": "assistant",
                "text": "Great! I will now place the order for you."
            }
        ],
        "function_call": {
            "function_name": "example_function",
            "parameters": {
                "num_tickets": 2,
                "ticket_type": {
                    "type": "VIP"
                },
                "event_details": {
                    "date": "2022-05-20"
                },
                "attendees": [
                    {
                        "name": "John",
                        "age": "30"
                    },
                    {
                        "name": "Jane",
                        "age": "28"
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def example_function(\\n    num_tickets: int,\\n    ticket_type: Dict[str, str],\\n    event_details: str,\\n    attendees: List[Dict[str, str]],\\n) -> Dict[str, float]:\\n    \"\"\"\\n    Orders event tickets and returns the total price.\\n\\n    Parameters:\\n        num_tickets (int): The number of tickets to buy.\\n        ticket_type (str): The type of ticket.\\n        event_details (Dict[str, str]): Details about the event, should contain a date in YYYY-MM-DD format.\\n        passengers (List[Dict[str, str]]): A list of dictionaries containing attendee details.\\n                                          Each dictionary should have \\'name\\' and \\'age\\' keys.\\n\\n    Returns:\\n        Dict[str, float]: A dictionary with \\'total_price\\' as a key and the total price as a value.\\n    \"\"\"\\n', 'function_description': {'name': 'example_function', 'description': 'Orders event tickets and returns the total price.', 'parameters': {'type': 'object', 'properties': {'num_tickets': {'type': 'integer', 'description': 'The number of tickets to buy.'}, 'ticket_type': {'type': 'object', 'description': 'The type of ticket.', 'properties': {'type': 'string'}}, 'event_details': {'type': 'object', 'description': 'Details about the event, should contain a date in YYYY-MM-DD format.', 'properties': {'date': {'type': 'string', 'description': 'Event data in YYYY-MM-DD format.'}}, 'required': ['date']}, 'attendees': {'type': 'array', 'description': \"A list of dictionaries containing attendee details. Each dictionary should have 'name' and 'age' keys.\", 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'age': {'type': 'string'}}, 'required': ['name', 'age']}}}, 'required': ['num_tickets', 'ticket_type', 'event_details', 'attendees']}, 'returns': {'type': 'object', 'properties': {'total_price': {'type': 'float', 'description': 'The total price for the tickets ordered.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def perform_employee_evaluation(\nemployee_id: int,\nevaluation_date: str,\nevaluation_results: Dict[str, float]\n) -> Dict[str, Any]:\n    \"\"\"\n    Performs an employee evaluation and returns the evaluation results.\n\n    Parameters:\n        employee_id (int): The ID of the employee being evaluated.\n        evaluation_date (str): The date of the evaluation in YYYY-MM-DD format.\n        evaluation_results (Dict[str, float]): A dictionary containing evaluation results.\n                                               Each key represents a different aspect of the evaluation,\n                                               and the corresponding value is the score for that aspect.\n\n    Returns:\n        Dict[str, Any]: A dictionary with 'employee_id', 'evaluation_date',\n                        and 'evaluation_results' as keys and their respective values.\n    \"\"\"\n",
        "function_description": {
            "name": "perform_employee_evaluation",
            "description": "Performs an employee evaluation and returns the evaluation results.",
            "parameters": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "description": "The ID of the employee being evaluated."
                    },
                    "evaluation_date": {
                        "type": "string",
                        "description": "The date of the evaluation in YYYY-MM-DD format."
                    },
                    "evaluation_results": {
                        "type": "object",
                        "description": "A dictionary containing evaluation results. Each key represents a different aspect of the evaluation, and the corresponding value is the score for that aspect.",
                        "properties": {
                            "type": "float"
                        }
                    }
                },
                "required": [
                    "employee_id",
                    "evaluation_date",
                    "evaluation_results"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "description": "The ID of the employee being evaluated."
                    },
                    "evaluation_date": {
                        "type": "string",
                        "description": "The date of the evaluation in YYYY-MM-DD format."
                    },
                    "evaluation_results": {
                        "type": "object",
                        "description": "A dictionary containing evaluation results. Each key represents a different aspect of the evaluation, and the corresponding value is the score for that aspect.",
                        "properties": {
                            "type": "float"
                        }
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"perform_employee_evaluation\",\n        \"description\": \"Performs an employee evaluation and returns the evaluation results.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"employee_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the employee being evaluated.\"\n                },\n                \"evaluation_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The date of the evaluation in YYYY-MM-DD format.\"\n                },\n                \"evaluation_results\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing evaluation results. Each key represents a different aspect of the evaluation, and the corresponding value is the score for that aspect.\",\n                    \"properties\": {\n                        \"type\": \"float\"\n                    }\n                }\n            },\n            \"required\": [\"employee_id\", \"evaluation_date\", \"evaluation_results\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"employee_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the employee being evaluated.\"\n                },\n                \"evaluation_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The date of the evaluation in YYYY-MM-DD format.\"\n                },\n                \"evaluation_results\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing evaluation results. Each key represents a different aspect of the evaluation, and the corresponding value is the score for that aspect.\",\n                    \"properties\": {\n                        \"type\": \"float\"\n                    }\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you perform an employee evaluation for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the employee ID, evaluation date, and evaluation results.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The employee ID is 12345, the evaluation date is 2022-01-01, and the evaluation results are {'communication': 4.5, 'teamwork': 4.0, 'problem-solving': 3.8}.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm performing the employee evaluation now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"perform_employee_evaluation\",\n        \"parameters\": {\n            \"employee_id\": 12345,\n            \"evaluation_date\": \"2022-01-01\",\n            \"evaluation_results\": {\n                \"communication\": 4.5,\n                \"teamwork\": 4.0,\n                \"problem-solving\": 3.8\n            }\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "perform_employee_evaluation",
            "description": "Performs an employee evaluation and returns the evaluation results.",
            "parameters": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "description": "The ID of the employee being evaluated."
                    },
                    "evaluation_date": {
                        "type": "string",
                        "description": "The date of the evaluation in YYYY-MM-DD format."
                    },
                    "evaluation_results": {
                        "type": "object",
                        "description": "A dictionary containing evaluation results. Each key represents a different aspect of the evaluation, and the corresponding value is the score for that aspect.",
                        "properties": {
                            "type": "float"
                        }
                    }
                },
                "required": [
                    "employee_id",
                    "evaluation_date",
                    "evaluation_results"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "description": "The ID of the employee being evaluated."
                    },
                    "evaluation_date": {
                        "type": "string",
                        "description": "The date of the evaluation in YYYY-MM-DD format."
                    },
                    "evaluation_results": {
                        "type": "object",
                        "description": "A dictionary containing evaluation results. Each key represents a different aspect of the evaluation, and the corresponding value is the score for that aspect.",
                        "properties": {
                            "type": "float"
                        }
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you perform an employee evaluation for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the employee ID, evaluation date, and evaluation results."
            },
            {
                "role": "user",
                "text": "The employee ID is 12345, the evaluation date is 2022-01-01, and the evaluation results are {'communication': 4.5, 'teamwork': 4.0, 'problem-solving': 3.8}."
            },
            {
                "role": "assistant",
                "text": "Great, I'm performing the employee evaluation now."
            }
        ],
        "function_call": {
            "function_name": "perform_employee_evaluation",
            "parameters": {
                "employee_id": 12345,
                "evaluation_date": "2022-01-01",
                "evaluation_results": {
                    "communication": 4.5,
                    "teamwork": 4.0,
                    "problem-solving": 3.8
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def perform_employee_evaluation(\\nemployee_id: int,\\nevaluation_date: str,\\nevaluation_results: Dict[str, float]\\n) -> Dict[str, Any]:\\n    \"\"\"\\n    Performs an employee evaluation and returns the evaluation results.\\n\\n    Parameters:\\n        employee_id (int): The ID of the employee being evaluated.\\n        evaluation_date (str): The date of the evaluation in YYYY-MM-DD format.\\n        evaluation_results (Dict[str, float]): A dictionary containing evaluation results.\\n                                               Each key represents a different aspect of the evaluation,\\n                                               and the corresponding value is the score for that aspect.\\n\\n    Returns:\\n        Dict[str, Any]: A dictionary with \\'employee_id\\', \\'evaluation_date\\',\\n                        and \\'evaluation_results\\' as keys and their respective values.\\n    \"\"\"\\n', 'function_description': {'name': 'perform_employee_evaluation', 'description': 'Performs an employee evaluation and returns the evaluation results.', 'parameters': {'type': 'object', 'properties': {'employee_id': {'type': 'integer', 'description': 'The ID of the employee being evaluated.'}, 'evaluation_date': {'type': 'string', 'description': 'The date of the evaluation in YYYY-MM-DD format.'}, 'evaluation_results': {'type': 'object', 'description': 'A dictionary containing evaluation results. Each key represents a different aspect of the evaluation, and the corresponding value is the score for that aspect.', 'properties': {'type': 'float'}}}, 'required': ['employee_id', 'evaluation_date', 'evaluation_results']}, 'returns': {'type': 'object', 'properties': {'employee_id': {'type': 'integer', 'description': 'The ID of the employee being evaluated.'}, 'evaluation_date': {'type': 'string', 'description': 'The date of the evaluation in YYYY-MM-DD format.'}, 'evaluation_results': {'type': 'object', 'description': 'A dictionary containing evaluation results. Each key represents a different aspect of the evaluation, and the corresponding value is the score for that aspect.', 'properties': {'type': 'float'}}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def create_account(\n    name: str,\n    email: str,\n    password: str,\n    address: str,\n    phone: str,\n) -> str:\n    \"\"\"\n    Create an account for a new customer.\n\n    Parameters:\n        name (str): The customer's name.\n        email (str): The customer's email address.\n        password (str): The customer's password.\n        address (str): The customer's address.\n        phone (str): The customer's phone number.\n\n    Returns:\n        str: A message indicating that the account has been created.\n    \"\"\"\n",
        "function_description": {
            "name": "create_account",
            "description": "Create an account for a new customer.",
            "parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The customer's name."
                    },
                    "email": {
                        "type": "string",
                        "description": "The customer's email address."
                    },
                    "password": {
                        "type": "string",
                        "description": "The customer's password."
                    },
                    "address": {
                        "type": "string",
                        "description": "The customer's address."
                    },
                    "phone": {
                        "type": "string",
                        "description": "The customer's phone number."
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password",
                    "address",
                    "phone"
                ]
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"create_account\",\n        \"description\": \"Create an account for a new customer.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The customer's name.\"\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"description\": \"The customer's email address.\"\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"description\": \"The customer's password.\"\n                },\n                \"address\": {\n                    \"type\": \"string\",\n                    \"description\": \"The customer's address.\"\n                },\n                \"phone\": {\n                    \"type\": \"string\",\n                    \"description\": \"The customer's phone number.\"\n                }\n            },\n            \"required\": [\n                \"name\",\n                \"email\",\n                \"password\",\n                \"address\",\n                \"phone\"\n            ]\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me create a new account?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can assist you with that. Can you please provide me with your name, email, password, address, and phone number?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My name is John Doe, my email is johndoe@example.com, my password is password123, my address is 123 Main St, and my phone number is 123-456-7890.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the required information. I will now create your account.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"create_account\",\n        \"parameters\": {\n            \"name\": \"John Doe\",\n            \"email\": \"johndoe@example.com\",\n            \"password\": \"password123\",\n            \"address\": \"123 Main St\",\n            \"phone\": \"123-456-7890\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "create_account",
            "description": "Create an account for a new customer.",
            "parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The customer's name."
                    },
                    "email": {
                        "type": "string",
                        "description": "The customer's email address."
                    },
                    "password": {
                        "type": "string",
                        "description": "The customer's password."
                    },
                    "address": {
                        "type": "string",
                        "description": "The customer's address."
                    },
                    "phone": {
                        "type": "string",
                        "description": "The customer's phone number."
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password",
                    "address",
                    "phone"
                ]
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me create a new account?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can assist you with that. Can you please provide me with your name, email, password, address, and phone number?"
            },
            {
                "role": "user",
                "text": "My name is John Doe, my email is johndoe@example.com, my password is password123, my address is 123 Main St, and my phone number is 123-456-7890."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the required information. I will now create your account."
            }
        ],
        "function_call": {
            "function_name": "create_account",
            "parameters": {
                "name": "John Doe",
                "email": "johndoe@example.com",
                "password": "password123",
                "address": "123 Main St",
                "phone": "123-456-7890"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def create_account(\\n    name: str,\\n    email: str,\\n    password: str,\\n    address: str,\\n    phone: str,\\n) -> str:\\n    \"\"\"\\n    Create an account for a new customer.\\n\\n    Parameters:\\n        name (str): The customer\\'s name.\\n        email (str): The customer\\'s email address.\\n        password (str): The customer\\'s password.\\n        address (str): The customer\\'s address.\\n        phone (str): The customer\\'s phone number.\\n\\n    Returns:\\n        str: A message indicating that the account has been created.\\n    \"\"\"\\n', 'function_description': {'name': 'create_account', 'description': 'Create an account for a new customer.', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': \"The customer's name.\"}, 'email': {'type': 'string', 'description': \"The customer's email address.\"}, 'password': {'type': 'string', 'description': \"The customer's password.\"}, 'address': {'type': 'string', 'description': \"The customer's address.\"}, 'phone': {'type': 'string', 'description': \"The customer's phone number.\"}}, 'required': ['name', 'email', 'password', 'address', 'phone']}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def calculate_payroll(employee_id: int, hours_worked: float, hourly_rate: float) -> float:\n    \"\"\"\n    Calculates the payroll for an employee based on their hours worked and hourly rate.\n\n    Parameters:\n        employee_id (int): The unique identifier for the employee.\n        hours_worked (float): The number of hours the employee worked.\n        hourly_rate (float): The hourly rate for the employee.\n\n    Returns:\n        float: The total payroll for the employee.\n    \"\"\"\n    \n    # Function implementation goes here",
        "function_description": {
            "name": "calculate_payroll",
            "description": "Calculates the payroll for an employee based on their hours worked and hourly rate.",
            "parameters": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "description": "The unique identifier for the employee."
                    },
                    "hours_worked": {
                        "type": "float",
                        "description": "The number of hours the employee worked."
                    },
                    "hourly_rate": {
                        "type": "float",
                        "description": "The hourly rate for the employee."
                    }
                },
                "required": [
                    "employee_id",
                    "hours_worked",
                    "hourly_rate"
                ]
            },
            "returns": {
                "type": "float",
                "description": "The total payroll for the employee."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"calculate_payroll\",\n        \"description\": \"Calculates the payroll for an employee based on their hours worked and hourly rate.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"employee_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The unique identifier for the employee.\"\n                },\n                \"hours_worked\": {\n                    \"type\": \"float\",\n                    \"description\": \"The number of hours the employee worked.\"\n                },\n                \"hourly_rate\": {\n                    \"type\": \"float\",\n                    \"description\": \"The hourly rate for the employee.\"\n                }\n            },\n            \"required\": [\"employee_id\", \"hours_worked\", \"hourly_rate\"]\n        },\n        \"returns\": {\n            \"type\": \"float\",\n            \"description\": \"The total payroll for the employee.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me calculate my payroll?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with your employee ID, hours worked, and hourly rate.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My employee ID is 12345, I worked 40 hours, and my hourly rate is $15.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will calculate your payroll now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"calculate_payroll\",\n        \"parameters\": {\n            \"employee_id\": 12345,\n            \"hours_worked\": 40,\n            \"hourly_rate\": 15\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "calculate_payroll",
            "description": "Calculates the payroll for an employee based on their hours worked and hourly rate.",
            "parameters": {
                "type": "object",
                "properties": {
                    "employee_id": {
                        "type": "integer",
                        "description": "The unique identifier for the employee."
                    },
                    "hours_worked": {
                        "type": "float",
                        "description": "The number of hours the employee worked."
                    },
                    "hourly_rate": {
                        "type": "float",
                        "description": "The hourly rate for the employee."
                    }
                },
                "required": [
                    "employee_id",
                    "hours_worked",
                    "hourly_rate"
                ]
            },
            "returns": {
                "type": "float",
                "description": "The total payroll for the employee."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me calculate my payroll?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with your employee ID, hours worked, and hourly rate."
            },
            {
                "role": "user",
                "text": "My employee ID is 12345, I worked 40 hours, and my hourly rate is $15."
            },
            {
                "role": "assistant",
                "text": "Great, I will calculate your payroll now."
            }
        ],
        "function_call": {
            "function_name": "calculate_payroll",
            "parameters": {
                "employee_id": 12345,
                "hours_worked": 40,
                "hourly_rate": 15
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def calculate_payroll(employee_id: int, hours_worked: float, hourly_rate: float) -> float:\\n    \"\"\"\\n    Calculates the payroll for an employee based on their hours worked and hourly rate.\\n\\n    Parameters:\\n        employee_id (int): The unique identifier for the employee.\\n        hours_worked (float): The number of hours the employee worked.\\n        hourly_rate (float): The hourly rate for the employee.\\n\\n    Returns:\\n        float: The total payroll for the employee.\\n    \"\"\"\\n    \\n    # Function implementation goes here', 'function_description': {'name': 'calculate_payroll', 'description': 'Calculates the payroll for an employee based on their hours worked and hourly rate.', 'parameters': {'type': 'object', 'properties': {'employee_id': {'type': 'integer', 'description': 'The unique identifier for the employee.'}, 'hours_worked': {'type': 'float', 'description': 'The number of hours the employee worked.'}, 'hourly_rate': {'type': 'float', 'description': 'The hourly rate for the employee.'}}, 'required': ['employee_id', 'hours_worked', 'hourly_rate']}, 'returns': {'type': 'float', 'description': 'The total payroll for the employee.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def calculate_payroll(team: List[Dict[str, Union[str, float]]]) -> Dict[str, float]:\n    \"\"\"\n    Calculates the payroll for a team.\n\n    Parameters:\n        team (List[Dict[str, Union[str, float]]]): A list of dictionaries representing team members.\n                                                  Each dictionary should have 'name', 'position', and 'salary' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_payroll' as a key and the total payroll as a value.\n    \"\"\"\n\n",
        "function_description": {
            "name": "calculate_payroll",
            "description": "Calculates the payroll for a team.",
            "parameters": {
                "type": "object",
                "properties": {
                    "team": {
                        "type": "array",
                        "description": "A list of dictionaries representing team members. Each dictionary should have 'name', 'position', and 'salary' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "position": {
                                    "type": "string"
                                },
                                "salary": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "name",
                                "position",
                                "salary"
                            ]
                        }
                    }
                },
                "required": [
                    "team"
                ]
            }
        },
        "returns": {
            "type": "object",
            "properties": {
                "total_payroll": {
                    "type": "number",
                    "description": "The total payroll for the team."
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"calculate_payroll\",\n        \"description\": \"Calculates the payroll for a team.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"team\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries representing team members. Each dictionary should have 'name', 'position', and 'salary' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\"type\": \"string\"},\n                            \"position\": {\"type\": \"string\"},\n                            \"salary\": {\"type\": \"number\"}\n                        },\n                        \"required\": [\"name\", \"position\", \"salary\"]\n                    }\n                }\n            },\n            \"required\": [\"team\"]\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you calculate the payroll for my team?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the details of your team members.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have a team consisting of three members. Each member has a name, position, and salary. Here are the details:\\n\\n1. Name: John Doe, Position: Manager, Salary: $5000\\n2. Name: Jane Smith, Position: Developer, Salary: $4000\\n3. Name: Mike Johnson, Position: Designer, Salary: $3000\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it. I will calculate the payroll for your team now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"calculate_payroll\",\n        \"parameters\": {\n            \"team\": [\n                {\n                    \"name\": \"John Doe\",\n                    \"position\": \"Manager\",\n                    \"salary\": 5000.0\n                },\n                {\n                    \"name\": \"Jane Smith\",\n                    \"position\": \"Developer\",\n                    \"salary\": 4000.0\n                },\n                {\n                    \"name\": \"Mike Johnson\",\n                    \"position\": \"Designer\",\n                    \"salary\": 3000.0\n                }\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "calculate_payroll",
            "description": "Calculates the payroll for a team.",
            "parameters": {
                "type": "object",
                "properties": {
                    "team": {
                        "type": "array",
                        "description": "A list of dictionaries representing team members. Each dictionary should have 'name', 'position', and 'salary' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "position": {
                                    "type": "string"
                                },
                                "salary": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "name",
                                "position",
                                "salary"
                            ]
                        }
                    }
                },
                "required": [
                    "team"
                ]
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you calculate the payroll for my team?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the details of your team members."
            },
            {
                "role": "user",
                "text": "I have a team consisting of three members. Each member has a name, position, and salary. Here are the details:\n\n1. Name: John Doe, Position: Manager, Salary: $5000\n2. Name: Jane Smith, Position: Developer, Salary: $4000\n3. Name: Mike Johnson, Position: Designer, Salary: $3000"
            },
            {
                "role": "assistant",
                "text": "Got it. I will calculate the payroll for your team now."
            }
        ],
        "function_call": {
            "function_name": "calculate_payroll",
            "parameters": {
                "team": [
                    {
                        "name": "John Doe",
                        "position": "Manager",
                        "salary": 5000.0
                    },
                    {
                        "name": "Jane Smith",
                        "position": "Developer",
                        "salary": 4000.0
                    },
                    {
                        "name": "Mike Johnson",
                        "position": "Designer",
                        "salary": 3000.0
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def calculate_payroll(team: List[Dict[str, Union[str, float]]]) -> Dict[str, float]:\\n    \"\"\"\\n    Calculates the payroll for a team.\\n\\n    Parameters:\\n        team (List[Dict[str, Union[str, float]]]): A list of dictionaries representing team members.\\n                                                  Each dictionary should have \\'name\\', \\'position\\', and \\'salary\\' keys.\\n\\n    Returns:\\n        Dict[str, float]: A dictionary with \\'total_payroll\\' as a key and the total payroll as a value.\\n    \"\"\"\\n\\n', 'function_description': {'name': 'calculate_payroll', 'description': 'Calculates the payroll for a team.', 'parameters': {'type': 'object', 'properties': {'team': {'type': 'array', 'description': \"A list of dictionaries representing team members. Each dictionary should have 'name', 'position', and 'salary' keys.\", 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'position': {'type': 'string'}, 'salary': {'type': 'number'}}, 'required': ['name', 'position', 'salary']}}}, 'required': ['team']}}, 'returns': {'type': 'object', 'properties': {'total_payroll': {'type': 'number', 'description': 'The total payroll for the team.'}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def update_inventory_stock_data(\n    product_id: str,\n    quantity: int,\n) -> None:\n    \"\"\"\n    Updates the stock data for a specific product.\n\n    Parameters:\n        product_id (str): The ID of the product to update.\n        quantity (int): The new quantity of the product in stock.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "update_inventory_stock_data",
            "description": "Updates the stock data for a specific product.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "description": "The ID of the product to update."
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "The new quantity of the product in stock."
                    }
                },
                "required": [
                    "product_id",
                    "quantity"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"update_inventory_stock_data\",\n        \"description\": \"Updates the stock data for a specific product.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the product to update.\"\n                },\n                \"quantity\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The new quantity of the product in stock.\"\n                }\n            },\n            \"required\": [\"product_id\", \"quantity\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you update the stock data for a specific product?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the product ID and the new quantity of the product in stock.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The product ID is '12345' and the new quantity is 50.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm updating the stock data for the product with ID '12345' to a new quantity of 50.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"update_inventory_stock_data\",\n        \"parameters\": {\n            \"product_id\": \"12345\",\n            \"quantity\": 50\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "update_inventory_stock_data",
            "description": "Updates the stock data for a specific product.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "description": "The ID of the product to update."
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "The new quantity of the product in stock."
                    }
                },
                "required": [
                    "product_id",
                    "quantity"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you update the stock data for a specific product?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the product ID and the new quantity of the product in stock."
            },
            {
                "role": "user",
                "text": "The product ID is '12345' and the new quantity is 50."
            },
            {
                "role": "assistant",
                "text": "Great, I'm updating the stock data for the product with ID '12345' to a new quantity of 50."
            }
        ],
        "function_call": {
            "function_name": "update_inventory_stock_data",
            "parameters": {
                "product_id": "12345",
                "quantity": 50
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def update_inventory_stock_data(\\n    product_id: str,\\n    quantity: int,\\n) -> None:\\n    \"\"\"\\n    Updates the stock data for a specific product.\\n\\n    Parameters:\\n        product_id (str): The ID of the product to update.\\n        quantity (int): The new quantity of the product in stock.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'update_inventory_stock_data', 'description': 'Updates the stock data for a specific product.', 'parameters': {'type': 'object', 'properties': {'product_id': {'type': 'string', 'description': 'The ID of the product to update.'}, 'quantity': {'type': 'integer', 'description': 'The new quantity of the product in stock.'}}, 'required': ['product_id', 'quantity']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def track_shipment(\n    shipment_id: str,\n    carrier: str,\n    tracking_number: str,\n) -> Dict[str, str]:\n    \"\"\"\n    Tracks the status of a shipment.\n\n    Parameters:\n        shipment_id (str): The unique identifier for the shipment.\n        carrier (str): The name of the carrier company.\n        tracking_number (str): The tracking number for the shipment.\n\n    Returns:\n        Dict[str, str]: A dictionary with 'status' as a key and the current status of the shipment as a value.\n    \"\"\"\n",
        "function_description": {
            "name": "track_shipment",
            "description": "Tracks the status of a shipment.",
            "parameters": {
                "type": "object",
                "properties": {
                    "shipment_id": {
                        "type": "string",
                        "description": "The unique identifier for the shipment."
                    },
                    "carrier": {
                        "type": "string",
                        "description": "The name of the carrier company."
                    },
                    "tracking_number": {
                        "type": "string",
                        "description": "The tracking number for the shipment."
                    }
                },
                "required": [
                    "shipment_id",
                    "carrier",
                    "tracking_number"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The current status of the shipment."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"track_shipment\",\n        \"description\": \"Tracks the status of a shipment.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"shipment_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The unique identifier for the shipment.\"\n                },\n                \"carrier\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the carrier company.\"\n                },\n                \"tracking_number\": {\n                    \"type\": \"string\",\n                    \"description\": \"The tracking number for the shipment.\"\n                }\n            },\n            \"required\": [\"shipment_id\", \"carrier\", \"tracking_number\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"status\": {\n                    \"type\": \"string\",\n                    \"description\": \"The current status of the shipment.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you track my shipment?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you please provide me with the shipment ID, carrier name, and tracking number?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, the shipment ID is '12345', the carrier is 'ABC Shipping', and the tracking number is '67890'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm tracking your shipment now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"track_shipment\",\n        \"parameters\": {\n            \"shipment_id\": \"12345\",\n            \"carrier\": \"ABC Shipping\",\n            \"tracking_number\": \"67890\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "track_shipment",
            "description": "Tracks the status of a shipment.",
            "parameters": {
                "type": "object",
                "properties": {
                    "shipment_id": {
                        "type": "string",
                        "description": "The unique identifier for the shipment."
                    },
                    "carrier": {
                        "type": "string",
                        "description": "The name of the carrier company."
                    },
                    "tracking_number": {
                        "type": "string",
                        "description": "The tracking number for the shipment."
                    }
                },
                "required": [
                    "shipment_id",
                    "carrier",
                    "tracking_number"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The current status of the shipment."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you track my shipment?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you please provide me with the shipment ID, carrier name, and tracking number?"
            },
            {
                "role": "user",
                "text": "Yes, the shipment ID is '12345', the carrier is 'ABC Shipping', and the tracking number is '67890'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm tracking your shipment now."
            }
        ],
        "function_call": {
            "function_name": "track_shipment",
            "parameters": {
                "shipment_id": "12345",
                "carrier": "ABC Shipping",
                "tracking_number": "67890"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def track_shipment(\\n    shipment_id: str,\\n    carrier: str,\\n    tracking_number: str,\\n) -> Dict[str, str]:\\n    \"\"\"\\n    Tracks the status of a shipment.\\n\\n    Parameters:\\n        shipment_id (str): The unique identifier for the shipment.\\n        carrier (str): The name of the carrier company.\\n        tracking_number (str): The tracking number for the shipment.\\n\\n    Returns:\\n        Dict[str, str]: A dictionary with \\'status\\' as a key and the current status of the shipment as a value.\\n    \"\"\"\\n', 'function_description': {'name': 'track_shipment', 'description': 'Tracks the status of a shipment.', 'parameters': {'type': 'object', 'properties': {'shipment_id': {'type': 'string', 'description': 'The unique identifier for the shipment.'}, 'carrier': {'type': 'string', 'description': 'The name of the carrier company.'}, 'tracking_number': {'type': 'string', 'description': 'The tracking number for the shipment.'}}, 'required': ['shipment_id', 'carrier', 'tracking_number']}, 'returns': {'type': 'object', 'properties': {'status': {'type': 'string', 'description': 'The current status of the shipment.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def assign_ticket_to_agent(\n    ticket_id: int,\n    agent_id: int,\n    assigned_tickets: Dict[int, int],\n) -> None:\n    \"\"\"\n    Assigns a customer support ticket to an agent.\n\n    Parameters:\n        ticket_id (int): The ID of the ticket to assign.\n        agent_id (int): The ID of the agent to assign the ticket to.\n        assigned_tickets (Dict[int, int]): A dictionary mapping ticket IDs to agent IDs.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "assign_ticket_to_agent",
            "description": "Assigns a customer support ticket to an agent.",
            "parameters": {
                "type": "object",
                "properties": {
                    "ticket_id": {
                        "type": "integer",
                        "description": "The ID of the ticket to assign."
                    },
                    "agent_id": {
                        "type": "integer",
                        "description": "The ID of the agent to assign the ticket to."
                    },
                    "assigned_tickets": {
                        "type": "object",
                        "description": "A dictionary mapping ticket IDs to agent IDs.",
                        "properties": {
                            "ticket_id": {
                                "type": "integer"
                            },
                            "agent_id": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "required": [
                    "ticket_id",
                    "agent_id",
                    "assigned_tickets"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "None": {
                        "type": "null"
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"assign_ticket_to_agent\",\n        \"description\": \"Assigns a customer support ticket to an agent.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"ticket_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the ticket to assign.\"\n                },\n                \"agent_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the agent to assign the ticket to.\"\n                },\n                \"assigned_tickets\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary mapping ticket IDs to agent IDs.\",\n                    \"properties\": {\n                        \"ticket_id\": {\"type\": \"integer\"},\n                        \"agent_id\": {\"type\": \"integer\"}\n                    }\n                }\n            },\n            \"required\": [\"ticket_id\", \"agent_id\", \"assigned_tickets\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"None\": {\"type\": \"null\"}\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you assign a ticket to an agent?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the ticket ID and the agent ID.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The ticket ID is 12345 and the agent ID is 67890.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it. Assigning the ticket to the agent now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"assign_ticket_to_agent\",\n        \"parameters\": {\n            \"ticket_id\": 12345,\n            \"agent_id\": 67890,\n            \"assigned_tickets\": {\"ticket_id\": 12345, \"agent_id\": 67890}\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "assign_ticket_to_agent",
            "description": "Assigns a customer support ticket to an agent.",
            "parameters": {
                "type": "object",
                "properties": {
                    "ticket_id": {
                        "type": "integer",
                        "description": "The ID of the ticket to assign."
                    },
                    "agent_id": {
                        "type": "integer",
                        "description": "The ID of the agent to assign the ticket to."
                    },
                    "assigned_tickets": {
                        "type": "object",
                        "description": "A dictionary mapping ticket IDs to agent IDs.",
                        "properties": {
                            "ticket_id": {
                                "type": "integer"
                            },
                            "agent_id": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "required": [
                    "ticket_id",
                    "agent_id",
                    "assigned_tickets"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "None": {
                        "type": "null"
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you assign a ticket to an agent?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the ticket ID and the agent ID."
            },
            {
                "role": "user",
                "text": "The ticket ID is 12345 and the agent ID is 67890."
            },
            {
                "role": "assistant",
                "text": "Got it. Assigning the ticket to the agent now."
            }
        ],
        "function_call": {
            "function_name": "assign_ticket_to_agent",
            "parameters": {
                "ticket_id": 12345,
                "agent_id": 67890,
                "assigned_tickets": {
                    "ticket_id": 12345,
                    "agent_id": 67890
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def assign_ticket_to_agent(\\n    ticket_id: int,\\n    agent_id: int,\\n    assigned_tickets: Dict[int, int],\\n) -> None:\\n    \"\"\"\\n    Assigns a customer support ticket to an agent.\\n\\n    Parameters:\\n        ticket_id (int): The ID of the ticket to assign.\\n        agent_id (int): The ID of the agent to assign the ticket to.\\n        assigned_tickets (Dict[int, int]): A dictionary mapping ticket IDs to agent IDs.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'assign_ticket_to_agent', 'description': 'Assigns a customer support ticket to an agent.', 'parameters': {'type': 'object', 'properties': {'ticket_id': {'type': 'integer', 'description': 'The ID of the ticket to assign.'}, 'agent_id': {'type': 'integer', 'description': 'The ID of the agent to assign the ticket to.'}, 'assigned_tickets': {'type': 'object', 'description': 'A dictionary mapping ticket IDs to agent IDs.', 'properties': {'ticket_id': {'type': 'integer'}, 'agent_id': {'type': 'integer'}}}}, 'required': ['ticket_id', 'agent_id', 'assigned_tickets']}, 'returns': {'type': 'object', 'properties': {'None': {'type': 'null'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def generate_discount_code(customer_id: int) -> str:\n    \"\"\"\n    Generates a unique discount code for a customer for marketing promotions.\n\n    Parameters:\n        customer_id (int): The ID of the customer.\n\n    Returns:\n        str: A unique discount code for the customer.\n    \"\"\"\n    discount_code = f\"DISCOUNT{customer_id}\"\n    return discount_code",
        "function_description": {
            "name": "generate_discount_code",
            "description": "Generates a unique discount code for a customer for marketing promotions.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "description": "The ID of the customer."
                    }
                },
                "required": [
                    "customer_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "discount_code": {
                        "type": "string",
                        "description": "A unique discount code for the customer."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"generate_discount_code\",\n        \"description\": \"Generates a unique discount code for a customer for marketing promotions.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"customer_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the customer.\"\n                }\n            },\n            \"required\": [\"customer_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"discount_code\": {\n                    \"type\": \"string\",\n                    \"description\": \"A unique discount code for the customer.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you generate a discount code for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. May I know your customer ID?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, my customer ID is 12345.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm generating a discount code for you now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"generate_discount_code\",\n        \"parameters\": {\n            \"customer_id\": 12345\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "generate_discount_code",
            "description": "Generates a unique discount code for a customer for marketing promotions.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "description": "The ID of the customer."
                    }
                },
                "required": [
                    "customer_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "discount_code": {
                        "type": "string",
                        "description": "A unique discount code for the customer."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you generate a discount code for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. May I know your customer ID?"
            },
            {
                "role": "user",
                "text": "Yes, my customer ID is 12345."
            },
            {
                "role": "assistant",
                "text": "Great, I'm generating a discount code for you now."
            }
        ],
        "function_call": {
            "function_name": "generate_discount_code",
            "parameters": {
                "customer_id": 12345
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def generate_discount_code(customer_id: int) -> str:\\n    \"\"\"\\n    Generates a unique discount code for a customer for marketing promotions.\\n\\n    Parameters:\\n        customer_id (int): The ID of the customer.\\n\\n    Returns:\\n        str: A unique discount code for the customer.\\n    \"\"\"\\n    discount_code = f\"DISCOUNT{customer_id}\"\\n    return discount_code', 'function_description': {'name': 'generate_discount_code', 'description': 'Generates a unique discount code for a customer for marketing promotions.', 'parameters': {'type': 'object', 'properties': {'customer_id': {'type': 'integer', 'description': 'The ID of the customer.'}}, 'required': ['customer_id']}, 'returns': {'type': 'object', 'properties': {'discount_code': {'type': 'string', 'description': 'A unique discount code for the customer.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def enable_subscription(\n    customer_id: int,\n    services: List[str]\n) -> bool:\n    \"\"\"\n    Enables a customer's subscription to various services.\n\n    Parameters:\n        customer_id (int): The ID of the customer.\n        services (List[str]): A list of services to enable for the customer.\n\n    Returns:\n        bool: True if the subscription is enabled successfully, False otherwise.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "enable_subscription",
            "description": "Enables a customer's subscription to various services.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "description": "The ID of the customer."
                    },
                    "services": {
                        "type": "array",
                        "description": "A list of services to enable for the customer.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "customer_id",
                    "services"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the subscription is enabled successfully, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"enable_subscription\",\n        \"description\": \"Enables a customer's subscription to various services.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"customer_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the customer.\"\n                },\n                \"services\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of services to enable for the customer.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"customer_id\", \"services\"]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the subscription is enabled successfully, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you enable my subscription to some services?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you provide me your customer ID and the services you want to enable?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My customer ID is 12345 and I want to enable services A, B, and C.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm enabling your subscription to services A, B, and C now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"enable_subscription\",\n        \"parameters\": {\n            \"customer_id\": 12345,\n            \"services\": [\"A\", \"B\", \"C\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "enable_subscription",
            "description": "Enables a customer's subscription to various services.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "description": "The ID of the customer."
                    },
                    "services": {
                        "type": "array",
                        "description": "A list of services to enable for the customer.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "customer_id",
                    "services"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the subscription is enabled successfully, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you enable my subscription to some services?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you provide me your customer ID and the services you want to enable?"
            },
            {
                "role": "user",
                "text": "My customer ID is 12345 and I want to enable services A, B, and C."
            },
            {
                "role": "assistant",
                "text": "Great, I'm enabling your subscription to services A, B, and C now."
            }
        ],
        "function_call": {
            "function_name": "enable_subscription",
            "parameters": {
                "customer_id": 12345,
                "services": [
                    "A",
                    "B",
                    "C"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def enable_subscription(\\n    customer_id: int,\\n    services: List[str]\\n) -> bool:\\n    \"\"\"\\n    Enables a customer\\'s subscription to various services.\\n\\n    Parameters:\\n        customer_id (int): The ID of the customer.\\n        services (List[str]): A list of services to enable for the customer.\\n\\n    Returns:\\n        bool: True if the subscription is enabled successfully, False otherwise.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'enable_subscription', 'description': \"Enables a customer's subscription to various services.\", 'parameters': {'type': 'object', 'properties': {'customer_id': {'type': 'integer', 'description': 'The ID of the customer.'}, 'services': {'type': 'array', 'description': 'A list of services to enable for the customer.', 'items': {'type': 'string'}}}, 'required': ['customer_id', 'services']}, 'returns': {'type': 'boolean', 'description': 'True if the subscription is enabled successfully, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def disable_subscription(customer_id: str, services: List[str]) -> None:\n    \"\"\"\n    Disables a customer's subscription to various services.\n\n    Parameters:\n        customer_id (str): The ID of the customer.\n        services (List[str]): A list of services to disable.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "disable_subscription",
            "description": "Disables a customer's subscription to various services.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "string",
                        "description": "The ID of the customer."
                    },
                    "services": {
                        "type": "array",
                        "description": "A list of services to disable.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "customer_id",
                    "services"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"disable_subscription\",\n        \"description\": \"Disables a customer's subscription to various services.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"customer_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the customer.\"\n                },\n                \"services\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of services to disable.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"customer_id\", \"services\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you disable my subscription to certain services?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Please provide me your customer ID and the list of services you want to disable.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My customer ID is 'ABC123' and I want to disable services A, B, and C.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will proceed to disable your subscription to services A, B, and C.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"disable_subscription\",\n        \"parameters\": {\n            \"customer_id\": \"ABC123\",\n            \"services\": [\"A\", \"B\", \"C\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "disable_subscription",
            "description": "Disables a customer's subscription to various services.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "string",
                        "description": "The ID of the customer."
                    },
                    "services": {
                        "type": "array",
                        "description": "A list of services to disable.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "customer_id",
                    "services"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you disable my subscription to certain services?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Please provide me your customer ID and the list of services you want to disable."
            },
            {
                "role": "user",
                "text": "My customer ID is 'ABC123' and I want to disable services A, B, and C."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the information. I will proceed to disable your subscription to services A, B, and C."
            }
        ],
        "function_call": {
            "function_name": "disable_subscription",
            "parameters": {
                "customer_id": "ABC123",
                "services": [
                    "A",
                    "B",
                    "C"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def disable_subscription(customer_id: str, services: List[str]) -> None:\\n    \"\"\"\\n    Disables a customer\\'s subscription to various services.\\n\\n    Parameters:\\n        customer_id (str): The ID of the customer.\\n        services (List[str]): A list of services to disable.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'disable_subscription', 'description': \"Disables a customer's subscription to various services.\", 'parameters': {'type': 'object', 'properties': {'customer_id': {'type': 'string', 'description': 'The ID of the customer.'}, 'services': {'type': 'array', 'description': 'A list of services to disable.', 'items': {'type': 'string'}}}, 'required': ['customer_id', 'services']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def modify_customer_subscription(\n    customer_id: int,\n    subscription_id: int,\n    new_services: List[str],\n) -> bool:\n    \"\"\"\n    Modifies a customer's subscription to various services.\n\n    Parameters:\n        customer_id (int): The ID of the customer.\n        subscription_id (int): The ID of the subscription to modify.\n        new_services (List[str]): A list of new services to add to the subscription.\n\n    Returns:\n        bool: True if the modification was successful, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "modify_customer_subscription",
            "description": "Modifies a customer's subscription to various services.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "description": "The ID of the customer."
                    },
                    "subscription_id": {
                        "type": "integer",
                        "description": "The ID of the subscription to modify."
                    },
                    "new_services": {
                        "type": "array",
                        "description": "A list of new services to add to the subscription.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "customer_id",
                    "subscription_id",
                    "new_services"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the modification was successful, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"modify_customer_subscription\",\n        \"description\": \"Modifies a customer's subscription to various services.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"customer_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the customer.\"\n                },\n                \"subscription_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the subscription to modify.\"\n                },\n                \"new_services\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of new services to add to the subscription.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"customer_id\", \"subscription_id\", \"new_services\"]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the modification was successful, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you modify my subscription?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with your customer ID, subscription ID, and the list of new services you want to add.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My customer ID is 12345, subscription ID is 67890, and I want to add 'service1' and 'service2' to my subscription.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for the information. I will modify your subscription now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"modify_customer_subscription\",\n        \"parameters\": {\n            \"customer_id\": 12345,\n            \"subscription_id\": 67890,\n            \"new_services\": [\"service1\", \"service2\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "modify_customer_subscription",
            "description": "Modifies a customer's subscription to various services.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "description": "The ID of the customer."
                    },
                    "subscription_id": {
                        "type": "integer",
                        "description": "The ID of the subscription to modify."
                    },
                    "new_services": {
                        "type": "array",
                        "description": "A list of new services to add to the subscription.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "customer_id",
                    "subscription_id",
                    "new_services"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the modification was successful, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you modify my subscription?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with your customer ID, subscription ID, and the list of new services you want to add."
            },
            {
                "role": "user",
                "text": "My customer ID is 12345, subscription ID is 67890, and I want to add 'service1' and 'service2' to my subscription."
            },
            {
                "role": "assistant",
                "text": "Thank you for the information. I will modify your subscription now."
            }
        ],
        "function_call": {
            "function_name": "modify_customer_subscription",
            "parameters": {
                "customer_id": 12345,
                "subscription_id": 67890,
                "new_services": [
                    "service1",
                    "service2"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def modify_customer_subscription(\\n    customer_id: int,\\n    subscription_id: int,\\n    new_services: List[str],\\n) -> bool:\\n    \"\"\"\\n    Modifies a customer\\'s subscription to various services.\\n\\n    Parameters:\\n        customer_id (int): The ID of the customer.\\n        subscription_id (int): The ID of the subscription to modify.\\n        new_services (List[str]): A list of new services to add to the subscription.\\n\\n    Returns:\\n        bool: True if the modification was successful, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'modify_customer_subscription', 'description': \"Modifies a customer's subscription to various services.\", 'parameters': {'type': 'object', 'properties': {'customer_id': {'type': 'integer', 'description': 'The ID of the customer.'}, 'subscription_id': {'type': 'integer', 'description': 'The ID of the subscription to modify.'}, 'new_services': {'type': 'array', 'description': 'A list of new services to add to the subscription.', 'items': {'type': 'string'}}}, 'required': ['customer_id', 'subscription_id', 'new_services']}, 'returns': {'type': 'boolean', 'description': 'True if the modification was successful, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def renew_contracts() -> None:\n    \"\"\"\n    Renew contracts for services and subscriptions that are expiring.\n    \"\"\"\n    # implementation here",
        "function_description": {
            "name": "renew_contracts",
            "description": "Renew contracts for services and subscriptions that are expiring.",
            "parameters": {
                "type": "object",
                "properties": {}
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"renew_contracts\",\n        \"description\": \"Renew contracts for services and subscriptions that are expiring.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {}\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me renew my contracts?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I can assist you with that. Please provide me with the necessary details.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"renew_contracts\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "renew_contracts",
            "description": "Renew contracts for services and subscriptions that are expiring.",
            "parameters": {
                "type": "object",
                "properties": {}
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me renew my contracts?"
            },
            {
                "role": "assistant",
                "text": "Of course! I can assist you with that. Please provide me with the necessary details."
            }
        ],
        "function_call": {
            "function_name": "renew_contracts",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def renew_contracts() -> None:\\n    \"\"\"\\n    Renew contracts for services and subscriptions that are expiring.\\n    \"\"\"\\n    # implementation here', 'function_description': {'name': 'renew_contracts', 'description': 'Renew contracts for services and subscriptions that are expiring.', 'parameters': {'type': 'object', 'properties': {}}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def backup_business_data() -> None:\n    \"\"\"\n    Performs a backup process of important business data.\n\n    Returns:\n        None\n    \"\"\"\n    # Code implementation for backup process goes here",
        "function_description": {
            "name": "backup_business_data",
            "description": "Performs a backup process of important business data.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"backup_business_data\",\n        \"description\": \"Performs a backup process of important business data.\",\n        \"parameters\": {},\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you perform a backup of my business data?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Just give me a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"backup_business_data\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "backup_business_data",
            "description": "Performs a backup process of important business data.",
            "parameters": {},
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you perform a backup of my business data?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Just give me a moment."
            }
        ],
        "function_call": {
            "function_name": "backup_business_data",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def backup_business_data() -> None:\\n    \"\"\"\\n    Performs a backup process of important business data.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n    # Code implementation for backup process goes here', 'function_description': {'name': 'backup_business_data', 'description': 'Performs a backup process of important business data.', 'parameters': {}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def check_license(product_key: str) -> bool:\n    \"\"\"\n    Checks the validity of a software license for a given product.\n\n    Parameters:\n        product_key (str): The product key to check.\n\n    Returns:\n        bool: True if the license is valid, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "check_license",
            "description": "Checks the validity of a software license for a given product.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_key": {
                        "type": "string",
                        "description": "The product key to check."
                    }
                },
                "required": [
                    "product_key"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the license is valid, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"check_license\",\n        \"description\": \"Checks the validity of a software license for a given product.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product_key\": {\n                    \"type\": \"string\",\n                    \"description\": \"The product key to check.\"\n                }\n            },\n            \"required\": [\"product_key\"]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the license is valid, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you check if my software license is valid?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with your product key.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here is my product key: 'ABC123'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm checking the validity of your software license.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"check_license\",\n        \"parameters\": {\n            \"product_key\": \"ABC123\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "check_license",
            "description": "Checks the validity of a software license for a given product.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_key": {
                        "type": "string",
                        "description": "The product key to check."
                    }
                },
                "required": [
                    "product_key"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the license is valid, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you check if my software license is valid?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with your product key."
            },
            {
                "role": "user",
                "text": "Here is my product key: 'ABC123'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm checking the validity of your software license."
            }
        ],
        "function_call": {
            "function_name": "check_license",
            "parameters": {
                "product_key": "ABC123"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def check_license(product_key: str) -> bool:\\n    \"\"\"\\n    Checks the validity of a software license for a given product.\\n\\n    Parameters:\\n        product_key (str): The product key to check.\\n\\n    Returns:\\n        bool: True if the license is valid, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'check_license', 'description': 'Checks the validity of a software license for a given product.', 'parameters': {'type': 'object', 'properties': {'product_key': {'type': 'string', 'description': 'The product key to check.'}}, 'required': ['product_key']}, 'returns': {'type': 'boolean', 'description': 'True if the license is valid, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def onboard_new_employee(\n    name: str,\n    position: str,\n    department: str,\n    start_date: str,\n) -> Dict[str, str]:\n    \n    \"\"\"\n    Onboards a new employee and generates a new id, new email account, etc.\n\n    Parameters:\n        name (str): The name of the new employee.\n        position (str): The position of the new employee.\n        department (str): The department of the new employee.\n        start_date (str): The start date of the new employee in YYYY-MM-DD format.\n\n    Returns:\n        Dict[str, str]: A dictionary with 'id', 'email', and other details as keys and their corresponding values.\n    \"\"\"\n",
        "function_description": {
            "name": "onboard_new_employee",
            "description": "Onboards a new employee and generates a new id, new email account, etc.",
            "parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new employee."
                    },
                    "position": {
                        "type": "string",
                        "description": "The position of the new employee."
                    },
                    "department": {
                        "type": "string",
                        "description": "The department of the new employee."
                    },
                    "start_date": {
                        "type": "string",
                        "description": "The start date of the new employee in YYYY-MM-DD format."
                    }
                },
                "required": [
                    "name",
                    "position",
                    "department",
                    "start_date"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The generated id for the new employee."
                    },
                    "email": {
                        "type": "string",
                        "description": "The generated email account for the new employee."
                    },
                    "other details": {
                        "type": "string",
                        "description": "Other details about the new employee."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"onboard_new_employee\",\n        \"description\": \"Onboards a new employee and generates a new id, new email account, etc.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the new employee.\"\n                },\n                \"position\": {\n                    \"type\": \"string\",\n                    \"description\": \"The position of the new employee.\"\n                },\n                \"department\": {\n                    \"type\": \"string\",\n                    \"description\": \"The department of the new employee.\"\n                },\n                \"start_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The start date of the new employee in YYYY-MM-DD format.\"\n                }\n            },\n            \"required\": [\"name\", \"position\", \"department\", \"start_date\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The generated id for the new employee.\"\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"description\": \"The generated email account for the new employee.\"\n                },\n                \"other details\": {\n                    \"type\": \"string\",\n                    \"description\": \"Other details about the new employee.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, I need to onboard a new employee.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Can you please provide me the new employee's name, position, department, and start date?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The new employee's name is John Doe, position is Software Engineer, department is Engineering, and the start date is 2022-01-01.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will now onboard the new employee and generate the required information.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"onboard_new_employee\",\n        \"parameters\": {\n            \"name\": \"John Doe\",\n            \"position\": \"Software Engineer\",\n            \"department\": \"Engineering\",\n            \"start_date\": \"2022-01-01\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "onboard_new_employee",
            "description": "Onboards a new employee and generates a new id, new email account, etc.",
            "parameters": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the new employee."
                    },
                    "position": {
                        "type": "string",
                        "description": "The position of the new employee."
                    },
                    "department": {
                        "type": "string",
                        "description": "The department of the new employee."
                    },
                    "start_date": {
                        "type": "string",
                        "description": "The start date of the new employee in YYYY-MM-DD format."
                    }
                },
                "required": [
                    "name",
                    "position",
                    "department",
                    "start_date"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The generated id for the new employee."
                    },
                    "email": {
                        "type": "string",
                        "description": "The generated email account for the new employee."
                    },
                    "other details": {
                        "type": "string",
                        "description": "Other details about the new employee."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, I need to onboard a new employee."
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Can you please provide me the new employee's name, position, department, and start date?"
            },
            {
                "role": "user",
                "text": "The new employee's name is John Doe, position is Software Engineer, department is Engineering, and the start date is 2022-01-01."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will now onboard the new employee and generate the required information."
            }
        ],
        "function_call": {
            "function_name": "onboard_new_employee",
            "parameters": {
                "name": "John Doe",
                "position": "Software Engineer",
                "department": "Engineering",
                "start_date": "2022-01-01"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def onboard_new_employee(\\n    name: str,\\n    position: str,\\n    department: str,\\n    start_date: str,\\n) -> Dict[str, str]:\\n    \\n    \"\"\"\\n    Onboards a new employee and generates a new id, new email account, etc.\\n\\n    Parameters:\\n        name (str): The name of the new employee.\\n        position (str): The position of the new employee.\\n        department (str): The department of the new employee.\\n        start_date (str): The start date of the new employee in YYYY-MM-DD format.\\n\\n    Returns:\\n        Dict[str, str]: A dictionary with \\'id\\', \\'email\\', and other details as keys and their corresponding values.\\n    \"\"\"\\n', 'function_description': {'name': 'onboard_new_employee', 'description': 'Onboards a new employee and generates a new id, new email account, etc.', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the new employee.'}, 'position': {'type': 'string', 'description': 'The position of the new employee.'}, 'department': {'type': 'string', 'description': 'The department of the new employee.'}, 'start_date': {'type': 'string', 'description': 'The start date of the new employee in YYYY-MM-DD format.'}}, 'required': ['name', 'position', 'department', 'start_date']}, 'returns': {'type': 'object', 'properties': {'id': {'type': 'string', 'description': 'The generated id for the new employee.'}, 'email': {'type': 'string', 'description': 'The generated email account for the new employee.'}, 'other details': {'type': 'string', 'description': 'Other details about the new employee.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def allocate_resources(\nproject_name: str,\nmeeting_rooms: List[str],\nequipment: List[str],\npersonnel: List[str]\n) -> Dict[str, List[str]]:\n    \n    \"\"\"\n    Allocates resources like meeting rooms, equipment, and personnel for a project or task force.\n\n    Parameters:\n        project_name (str): The name of the project or task force.\n        meeting_rooms (List[str]): A list of available meeting rooms.\n        equipment (List[str]): A list of available equipment.\n        personnel (List[str]): A list of available personnel.\n\n    Returns:\n        Dict[str, List[str]]: A dictionary with 'meeting_rooms', 'equipment', and 'personnel' as keys\n                              and the allocated resources as values.\n    \"\"\"\n",
        "function_description": {
            "name": "allocate_resources",
            "description": "Allocates resources like meeting rooms, equipment, and personnel for a project or task force.",
            "parameters": {
                "type": "object",
                "properties": {
                    "project_name": {
                        "type": "string",
                        "description": "The name of the project or task force."
                    },
                    "meeting_rooms": {
                        "type": "array",
                        "description": "A list of available meeting rooms.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "equipment": {
                        "type": "array",
                        "description": "A list of available equipment.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "personnel": {
                        "type": "array",
                        "description": "A list of available personnel.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "project_name",
                    "meeting_rooms",
                    "equipment",
                    "personnel"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "meeting_rooms": {
                        "type": "array",
                        "description": "The allocated meeting rooms.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "equipment": {
                        "type": "array",
                        "description": "The allocated equipment.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "personnel": {
                        "type": "array",
                        "description": "The allocated personnel.",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"allocate_resources\",\n        \"description\": \"Allocates resources like meeting rooms, equipment, and personnel for a project or task force.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"project_name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the project or task force.\"\n                },\n                \"meeting_rooms\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of available meeting rooms.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"equipment\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of available equipment.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"personnel\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of available personnel.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"project_name\", \"meeting_rooms\", \"equipment\", \"personnel\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"meeting_rooms\": {\n                    \"type\": \"array\",\n                    \"description\": \"The allocated meeting rooms.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"equipment\": {\n                    \"type\": \"array\",\n                    \"description\": \"The allocated equipment.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"personnel\": {\n                    \"type\": \"array\",\n                    \"description\": \"The allocated personnel.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you allocate resources for my project?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the name of your project.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The name of my project is 'Project X'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! Now, please provide me with the available meeting rooms, equipment, and personnel.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have 3 meeting rooms: Room A, Room B, and Room C. I have 10 laptops and 5 projectors as equipment. I also have 15 team members as personnel.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I'm allocating the resources for your project now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"allocate_resources\",\n        \"parameters\": {\n            \"project_name\": \"Project X\",\n            \"meeting_rooms\": [\"Room A\", \"Room B\", \"Room C\"],\n            \"equipment\": [\"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"laptop\", \"projector\", \"projector\", \"projector\", \"projector\", \"projector\"],\n            \"personnel\": [\"team member 1\", \"team member 2\", \"team member 3\", \"team member 4\", \"team member 5\", \"team member 6\", \"team member 7\", \"team member 8\", \"team member 9\", \"team member 10\", \"team member 11\", \"team member 12\", \"team member 13\", \"team member 14\", \"team member 15\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "allocate_resources",
            "description": "Allocates resources like meeting rooms, equipment, and personnel for a project or task force.",
            "parameters": {
                "type": "object",
                "properties": {
                    "project_name": {
                        "type": "string",
                        "description": "The name of the project or task force."
                    },
                    "meeting_rooms": {
                        "type": "array",
                        "description": "A list of available meeting rooms.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "equipment": {
                        "type": "array",
                        "description": "A list of available equipment.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "personnel": {
                        "type": "array",
                        "description": "A list of available personnel.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "project_name",
                    "meeting_rooms",
                    "equipment",
                    "personnel"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "meeting_rooms": {
                        "type": "array",
                        "description": "The allocated meeting rooms.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "equipment": {
                        "type": "array",
                        "description": "The allocated equipment.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "personnel": {
                        "type": "array",
                        "description": "The allocated personnel.",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you allocate resources for my project?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the name of your project."
            },
            {
                "role": "user",
                "text": "The name of my project is 'Project X'."
            },
            {
                "role": "assistant",
                "text": "Great! Now, please provide me with the available meeting rooms, equipment, and personnel."
            },
            {
                "role": "user",
                "text": "I have 3 meeting rooms: Room A, Room B, and Room C. I have 10 laptops and 5 projectors as equipment. I also have 15 team members as personnel."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I'm allocating the resources for your project now."
            }
        ],
        "function_call": {
            "function_name": "allocate_resources",
            "parameters": {
                "project_name": "Project X",
                "meeting_rooms": [
                    "Room A",
                    "Room B",
                    "Room C"
                ],
                "equipment": [
                    "laptop",
                    "laptop",
                    "laptop",
                    "laptop",
                    "laptop",
                    "laptop",
                    "laptop",
                    "laptop",
                    "laptop",
                    "projector",
                    "projector",
                    "projector",
                    "projector",
                    "projector"
                ],
                "personnel": [
                    "team member 1",
                    "team member 2",
                    "team member 3",
                    "team member 4",
                    "team member 5",
                    "team member 6",
                    "team member 7",
                    "team member 8",
                    "team member 9",
                    "team member 10",
                    "team member 11",
                    "team member 12",
                    "team member 13",
                    "team member 14",
                    "team member 15"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def allocate_resources(\\nproject_name: str,\\nmeeting_rooms: List[str],\\nequipment: List[str],\\npersonnel: List[str]\\n) -> Dict[str, List[str]]:\\n    \\n    \"\"\"\\n    Allocates resources like meeting rooms, equipment, and personnel for a project or task force.\\n\\n    Parameters:\\n        project_name (str): The name of the project or task force.\\n        meeting_rooms (List[str]): A list of available meeting rooms.\\n        equipment (List[str]): A list of available equipment.\\n        personnel (List[str]): A list of available personnel.\\n\\n    Returns:\\n        Dict[str, List[str]]: A dictionary with \\'meeting_rooms\\', \\'equipment\\', and \\'personnel\\' as keys\\n                              and the allocated resources as values.\\n    \"\"\"\\n', 'function_description': {'name': 'allocate_resources', 'description': 'Allocates resources like meeting rooms, equipment, and personnel for a project or task force.', 'parameters': {'type': 'object', 'properties': {'project_name': {'type': 'string', 'description': 'The name of the project or task force.'}, 'meeting_rooms': {'type': 'array', 'description': 'A list of available meeting rooms.', 'items': {'type': 'string'}}, 'equipment': {'type': 'array', 'description': 'A list of available equipment.', 'items': {'type': 'string'}}, 'personnel': {'type': 'array', 'description': 'A list of available personnel.', 'items': {'type': 'string'}}}, 'required': ['project_name', 'meeting_rooms', 'equipment', 'personnel']}, 'returns': {'type': 'object', 'properties': {'meeting_rooms': {'type': 'array', 'description': 'The allocated meeting rooms.', 'items': {'type': 'string'}}, 'equipment': {'type': 'array', 'description': 'The allocated equipment.', 'items': {'type': 'string'}}, 'personnel': {'type': 'array', 'description': 'The allocated personnel.', 'items': {'type': 'string'}}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def submit_timesheets(\n    employee_ids: List[int],\n    action: str,\n    date: str,\n) -> None:\n    \"\"\"\n    Submits timesheets for employees.\n\n    Parameters:\n        employee_ids (List[int]): A list of employee IDs.\n        action (str): The action to perform on the timesheets (approval or archival).\n        date (str): The date when the timesheets are submitted.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "submit_timesheets",
            "description": "Submits timesheets for employees.",
            "parameters": {
                "type": "object",
                "properties": {
                    "employee_ids": {
                        "type": "array",
                        "description": "A list of employee IDs.",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the timesheets (approval or archival)."
                    },
                    "date": {
                        "type": "string",
                        "description": "The date when the timesheets are submitted."
                    }
                },
                "required": [
                    "employee_ids",
                    "action",
                    "date"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"submit_timesheets\",\n        \"description\": \"Submits timesheets for employees.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"employee_ids\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of employee IDs.\",\n                    \"items\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"action\": {\n                    \"type\": \"string\",\n                    \"description\": \"The action to perform on the timesheets (approval or archival).\"\n                },\n                \"date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The date when the timesheets are submitted.\"\n                }\n            },\n            \"required\": [\"employee_ids\", \"action\", \"date\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you submit my timesheets for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the following details: employee IDs, action (approval or archival), and the submission date.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My employee IDs are [123, 456], the action is approval, and the submission date is '2022-01-31'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm submitting your timesheets now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"submit_timesheets\",\n        \"parameters\": {\n            \"employee_ids\": [123, 456],\n            \"action\": \"approval\",\n            \"date\": \"2022-01-31\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "submit_timesheets",
            "description": "Submits timesheets for employees.",
            "parameters": {
                "type": "object",
                "properties": {
                    "employee_ids": {
                        "type": "array",
                        "description": "A list of employee IDs.",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the timesheets (approval or archival)."
                    },
                    "date": {
                        "type": "string",
                        "description": "The date when the timesheets are submitted."
                    }
                },
                "required": [
                    "employee_ids",
                    "action",
                    "date"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you submit my timesheets for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the following details: employee IDs, action (approval or archival), and the submission date."
            },
            {
                "role": "user",
                "text": "My employee IDs are [123, 456], the action is approval, and the submission date is '2022-01-31'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm submitting your timesheets now."
            }
        ],
        "function_call": {
            "function_name": "submit_timesheets",
            "parameters": {
                "employee_ids": [
                    123,
                    456
                ],
                "action": "approval",
                "date": "2022-01-31"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def submit_timesheets(\\n    employee_ids: List[int],\\n    action: str,\\n    date: str,\\n) -> None:\\n    \"\"\"\\n    Submits timesheets for employees.\\n\\n    Parameters:\\n        employee_ids (List[int]): A list of employee IDs.\\n        action (str): The action to perform on the timesheets (approval or archival).\\n        date (str): The date when the timesheets are submitted.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'submit_timesheets', 'description': 'Submits timesheets for employees.', 'parameters': {'type': 'object', 'properties': {'employee_ids': {'type': 'array', 'description': 'A list of employee IDs.', 'items': {'type': 'integer'}}, 'action': {'type': 'string', 'description': 'The action to perform on the timesheets (approval or archival).'}, 'date': {'type': 'string', 'description': 'The date when the timesheets are submitted.'}}, 'required': ['employee_ids', 'action', 'date']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def calculate_performance_incentives(\nemployee_sales: Dict[str, float],\ntarget_sales: Dict[str, float],\nincentive_rate: float,\n) -> Dict[str, float]:\n    \"\"\"\n    Calculates and distributes performance-based incentives or bonuses to employees.\n\n    Parameters:\n        employee_sales (Dict[str, float]): A dictionary with employee names as keys and their sales as values.\n        target_sales (Dict[str, float]): A dictionary with employee names as keys and their target sales as values.\n        incentive_rate (float): The rate at which the incentive is calculated.\n\n    Returns:\n        Dict[str, float]: A dictionary with employee names as keys and their corresponding incentives as values.\n    \"\"\"\n\n",
        "function_description": {
            "name": "calculate_performance_incentives",
            "description": "Calculates and distributes performance-based incentives or bonuses to employees.",
            "parameters": {
                "type": "object",
                "properties": {
                    "employee_sales": {
                        "type": "object",
                        "description": "A dictionary with employee names as keys and their sales as values."
                    },
                    "target_sales": {
                        "type": "object",
                        "description": "A dictionary with employee names as keys and their target sales as values."
                    },
                    "incentive_rate": {
                        "type": "float",
                        "description": "The rate at which the incentive is calculated."
                    }
                },
                "required": [
                    "employee_sales",
                    "target_sales",
                    "incentive_rate"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "employee_names": {
                        "type": "float",
                        "description": "A dictionary with employee names as keys and their corresponding incentives as values."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"calculate_performance_incentives\",\n        \"description\": \"Calculates and distributes performance-based incentives or bonuses to employees.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"employee_sales\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary with employee names as keys and their sales as values.\"\n                },\n                \"target_sales\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary with employee names as keys and their target sales as values.\"\n                },\n                \"incentive_rate\": {\n                    \"type\": \"float\",\n                    \"description\": \"The rate at which the incentive is calculated.\"\n                }\n            },\n            \"required\": [\"employee_sales\", \"target_sales\", \"incentive_rate\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"employee_names\": {\n                    \"type\": \"float\",\n                    \"description\": \"A dictionary with employee names as keys and their corresponding incentives as values.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you calculate the performance incentives for our employees?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you provide me with the employee sales, target sales, and the incentive rate?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, here are the details: employee_sales = {'John': 5000, 'Emily': 6000}, target_sales = {'John': 4000, 'Emily': 5000}, incentive_rate = 0.05.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will calculate and distribute the performance-based incentives to the employees.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"calculate_performance_incentives\",\n        \"parameters\": {\n            \"employee_sales\": {\"John\": 5000, \"Emily\": 6000},\n            \"target_sales\": {\"John\": 4000, \"Emily\": 5000},\n            \"incentive_rate\": 0.05\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "calculate_performance_incentives",
            "description": "Calculates and distributes performance-based incentives or bonuses to employees.",
            "parameters": {
                "type": "object",
                "properties": {
                    "employee_sales": {
                        "type": "object",
                        "description": "A dictionary with employee names as keys and their sales as values."
                    },
                    "target_sales": {
                        "type": "object",
                        "description": "A dictionary with employee names as keys and their target sales as values."
                    },
                    "incentive_rate": {
                        "type": "float",
                        "description": "The rate at which the incentive is calculated."
                    }
                },
                "required": [
                    "employee_sales",
                    "target_sales",
                    "incentive_rate"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "employee_names": {
                        "type": "float",
                        "description": "A dictionary with employee names as keys and their corresponding incentives as values."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you calculate the performance incentives for our employees?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you provide me with the employee sales, target sales, and the incentive rate?"
            },
            {
                "role": "user",
                "text": "Yes, here are the details: employee_sales = {'John': 5000, 'Emily': 6000}, target_sales = {'John': 4000, 'Emily': 5000}, incentive_rate = 0.05."
            },
            {
                "role": "assistant",
                "text": "Great, I will calculate and distribute the performance-based incentives to the employees."
            }
        ],
        "function_call": {
            "function_name": "calculate_performance_incentives",
            "parameters": {
                "employee_sales": {
                    "John": 5000,
                    "Emily": 6000
                },
                "target_sales": {
                    "John": 4000,
                    "Emily": 5000
                },
                "incentive_rate": 0.05
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def calculate_performance_incentives(\\nemployee_sales: Dict[str, float],\\ntarget_sales: Dict[str, float],\\nincentive_rate: float,\\n) -> Dict[str, float]:\\n    \"\"\"\\n    Calculates and distributes performance-based incentives or bonuses to employees.\\n\\n    Parameters:\\n        employee_sales (Dict[str, float]): A dictionary with employee names as keys and their sales as values.\\n        target_sales (Dict[str, float]): A dictionary with employee names as keys and their target sales as values.\\n        incentive_rate (float): The rate at which the incentive is calculated.\\n\\n    Returns:\\n        Dict[str, float]: A dictionary with employee names as keys and their corresponding incentives as values.\\n    \"\"\"\\n\\n', 'function_description': {'name': 'calculate_performance_incentives', 'description': 'Calculates and distributes performance-based incentives or bonuses to employees.', 'parameters': {'type': 'object', 'properties': {'employee_sales': {'type': 'object', 'description': 'A dictionary with employee names as keys and their sales as values.'}, 'target_sales': {'type': 'object', 'description': 'A dictionary with employee names as keys and their target sales as values.'}, 'incentive_rate': {'type': 'float', 'description': 'The rate at which the incentive is calculated.'}}, 'required': ['employee_sales', 'target_sales', 'incentive_rate']}, 'returns': {'type': 'object', 'properties': {'employee_names': {'type': 'float', 'description': 'A dictionary with employee names as keys and their corresponding incentives as values.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def generate_employee_shift_schedules(\n    availability: Dict[str, List[str]],\n    workload: Dict[str, int],\n) -> Dict[str, List[str]]:\n    \"\"\"\n    Generates employee shift schedules based on availability and workload.\n\n    Parameters:\n        availability (Dict[str, List[str]]): A dictionary mapping employee names to lists of available days.\n        workload (Dict[str, int]): A dictionary mapping employee names to their workload.\n\n    Returns:\n        Dict[str, List[str]]: A dictionary mapping employee names to lists of assigned shift days.\n    \"\"\"\n",
        "function_description": {
            "name": "generate_employee_shift_schedules",
            "description": "Generates employee shift schedules based on availability and workload.",
            "parameters": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "object",
                        "description": "A dictionary mapping employee names to lists of available days.",
                        "properties": {
                            "name": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "workload": {
                        "type": "object",
                        "description": "A dictionary mapping employee names to their workload.",
                        "properties": {
                            "name": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "required": [
                    "availability",
                    "workload"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"generate_employee_shift_schedules\",\n        \"description\": \"Generates employee shift schedules based on availability and workload.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"availability\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary mapping employee names to lists of available days.\",\n                    \"properties\": {\n                        \"name\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    }\n                },\n                \"workload\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary mapping employee names to their workload.\",\n                    \"properties\": {\n                        \"name\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                }\n            },\n            \"required\": [\"availability\", \"workload\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"name\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you generate shift schedules for our employees?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I just need some information from you.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure, I can provide that. Let me gather the availability and workload data.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Take your time. Let me know when you're ready.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have collected the availability and workload data for our employees.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! Please provide me with the availability and workload dictionaries.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here are the dictionaries:\\n\\nAvailability: {'John': ['Monday', 'Tuesday'], 'Sarah': ['Tuesday', 'Wednesday'], 'Michael': ['Monday', 'Wednesday']}\\nWorkload: {'John': 8, 'Sarah': 6, 'Michael': 7}\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the data. I will now generate the shift schedules for the employees.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"generate_employee_shift_schedules\",\n        \"parameters\": {\n            \"availability\": {\n                \"John\": [\"Monday\", \"Tuesday\"],\n                \"Sarah\": [\"Tuesday\", \"Wednesday\"],\n                \"Michael\": [\"Monday\", \"Wednesday\"]\n            },\n            \"workload\": {\n                \"John\": 8,\n                \"Sarah\": 6,\n                \"Michael\": 7\n            }\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "generate_employee_shift_schedules",
            "description": "Generates employee shift schedules based on availability and workload.",
            "parameters": {
                "type": "object",
                "properties": {
                    "availability": {
                        "type": "object",
                        "description": "A dictionary mapping employee names to lists of available days.",
                        "properties": {
                            "name": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "workload": {
                        "type": "object",
                        "description": "A dictionary mapping employee names to their workload.",
                        "properties": {
                            "name": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "required": [
                    "availability",
                    "workload"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you generate shift schedules for our employees?"
            },
            {
                "role": "assistant",
                "text": "Of course! I just need some information from you."
            },
            {
                "role": "user",
                "text": "Sure, I can provide that. Let me gather the availability and workload data."
            },
            {
                "role": "assistant",
                "text": "Take your time. Let me know when you're ready."
            },
            {
                "role": "user",
                "text": "I have collected the availability and workload data for our employees."
            },
            {
                "role": "assistant",
                "text": "Great! Please provide me with the availability and workload dictionaries."
            },
            {
                "role": "user",
                "text": "Here are the dictionaries:\n\nAvailability: {'John': ['Monday', 'Tuesday'], 'Sarah': ['Tuesday', 'Wednesday'], 'Michael': ['Monday', 'Wednesday']}\nWorkload: {'John': 8, 'Sarah': 6, 'Michael': 7}"
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the data. I will now generate the shift schedules for the employees."
            }
        ],
        "function_call": {
            "function_name": "generate_employee_shift_schedules",
            "parameters": {
                "availability": {
                    "John": [
                        "Monday",
                        "Tuesday"
                    ],
                    "Sarah": [
                        "Tuesday",
                        "Wednesday"
                    ],
                    "Michael": [
                        "Monday",
                        "Wednesday"
                    ]
                },
                "workload": {
                    "John": 8,
                    "Sarah": 6,
                    "Michael": 7
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def generate_employee_shift_schedules(\\n    availability: Dict[str, List[str]],\\n    workload: Dict[str, int],\\n) -> Dict[str, List[str]]:\\n    \"\"\"\\n    Generates employee shift schedules based on availability and workload.\\n\\n    Parameters:\\n        availability (Dict[str, List[str]]): A dictionary mapping employee names to lists of available days.\\n        workload (Dict[str, int]): A dictionary mapping employee names to their workload.\\n\\n    Returns:\\n        Dict[str, List[str]]: A dictionary mapping employee names to lists of assigned shift days.\\n    \"\"\"\\n', 'function_description': {'name': 'generate_employee_shift_schedules', 'description': 'Generates employee shift schedules based on availability and workload.', 'parameters': {'type': 'object', 'properties': {'availability': {'type': 'object', 'description': 'A dictionary mapping employee names to lists of available days.', 'properties': {'name': {'type': 'array', 'items': {'type': 'string'}}}}, 'workload': {'type': 'object', 'description': 'A dictionary mapping employee names to their workload.', 'properties': {'name': {'type': 'integer'}}}}, 'required': ['availability', 'workload']}, 'returns': {'type': 'object', 'properties': {'name': {'type': 'array', 'items': {'type': 'string'}}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": null,
    "description": {
        "function_snippet": "def create_and_approve_budgets(\n    departments: List[str],\n    projects: List[str]\n) -> Dict[str, float]:\n    \"\"\"\n    Creates and approves budgets for different departments or projects.\n\n    Parameters:\n        departments (List[str]): A list of department names.\n        projects (List[str]): A list of project names.\n\n    Returns:\n        Dict[str, float]: A dictionary with department/project names as keys and the approved budget as values.\n    \"\"\"\n",
        "function_description": {
            "name": "create_and_approve_budgets",
            "description": "Creates and approves budgets for different departments or projects.",
            "parameters": {
                "type": "object",
                "properties": {
                    "departments": {
                        "type": "array",
                        "description": "A list of department names.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projects": {
                        "type": "array",
                        "description": "A list of project names.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "departments",
                    "projects"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "department/project name": {
                        "type": "float",
                        "description": "The approved budget for the department/project."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"create_and_approve_budgets\",\n        \"description\": \"Creates and approves budgets for different departments or projects.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"departments\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of department names.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"projects\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of project names.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"departments\", \"projects\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"department/project name\": {\n                    \"type\": \"float\",\n                    \"description\": \"The approved budget for the department/project.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you create and approve budgets for my department and projects?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the list of department names and project names.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure, the department names are ['Finance', 'Marketing'] and the project names are ['Project A', 'Project B'].\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will create and approve budgets for the departments ['Finance', 'Marketing'] and the projects ['Project A', 'Project B'].\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"create_and_approve_budgets\",\n        \"parameters\": {\n            \"departments\": [\"Finance\", \"Marketing\"],\n            \"projects\": [\"Project A\", \"Project B\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "create_and_approve_budgets",
            "description": "Creates and approves budgets for different departments or projects.",
            "parameters": {
                "type": "object",
                "properties": {
                    "departments": {
                        "type": "array",
                        "description": "A list of department names.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projects": {
                        "type": "array",
                        "description": "A list of project names.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "departments",
                    "projects"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "department/project name": {
                        "type": "float",
                        "description": "The approved budget for the department/project."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you create and approve budgets for my department and projects?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the list of department names and project names."
            },
            {
                "role": "user",
                "text": "Sure, the department names are ['Finance', 'Marketing'] and the project names are ['Project A', 'Project B']."
            },
            {
                "role": "assistant",
                "text": "Great, I will create and approve budgets for the departments ['Finance', 'Marketing'] and the projects ['Project A', 'Project B']."
            }
        ],
        "function_call": {
            "function_name": "create_and_approve_budgets",
            "parameters": {
                "departments": [
                    "Finance",
                    "Marketing"
                ],
                "projects": [
                    "Project A",
                    "Project B"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def create_and_approve_budgets(\\n    departments: List[str],\\n    projects: List[str]\\n) -> Dict[str, float]:\\n    \"\"\"\\n    Creates and approves budgets for different departments or projects.\\n\\n    Parameters:\\n        departments (List[str]): A list of department names.\\n        projects (List[str]): A list of project names.\\n\\n    Returns:\\n        Dict[str, float]: A dictionary with department/project names as keys and the approved budget as values.\\n    \"\"\"\\n', 'function_description': {'name': 'create_and_approve_budgets', 'description': 'Creates and approves budgets for different departments or projects.', 'parameters': {'type': 'object', 'properties': {'departments': {'type': 'array', 'description': 'A list of department names.', 'items': {'type': 'string'}}, 'projects': {'type': 'array', 'description': 'A list of project names.', 'items': {'type': 'string'}}}, 'required': ['departments', 'projects']}, 'returns': {'type': 'object', 'properties': {'department/project name': {'type': 'float', 'description': 'The approved budget for the department/project.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}

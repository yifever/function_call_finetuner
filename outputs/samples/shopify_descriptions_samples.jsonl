{
    "function_id": "shopify-1",
    "description": {
        "function_snippet": "def create_product_listing(\n    title: str,\n    description: str,\n    price: float,\n) -> Dict[str, str]:\n    \"\"\"\n    Creates a new product listing with details such as title, description, and price.\n\n    Parameters:\n        title (str): The title of the product listing.\n        description (str): The description of the product listing.\n        price (float): The price of the product listing.\n\n    Returns:\n        Dict[str, str]: A dictionary with 'title', 'description', and 'price' as keys and their respective values.\n    \"\"\"",
        "function_description": {
            "name": "create_product_listing",
            "description": "Creates a new product listing with details such as title, description, and price.",
            "parameters": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the product listing."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the product listing."
                    },
                    "price": {
                        "type": "number",
                        "description": "The price of the product listing."
                    }
                },
                "required": [
                    "title",
                    "description",
                    "price"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the product listing."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the product listing."
                    },
                    "price": {
                        "type": "number",
                        "description": "The price of the product listing."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"create_product_listing\",\n        \"description\": \"Creates a new product listing with details such as title, description, and price.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"The title of the product listing.\"\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The description of the product listing.\"\n                },\n                \"price\": {\n                    \"type\": \"number\",\n                    \"description\": \"The price of the product listing.\"\n                }\n            },\n            \"required\": [\"title\", \"description\", \"price\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"title\": {\n                    \"type\": \"string\",\n                    \"description\": \"The title of the product listing.\"\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The description of the product listing.\"\n                },\n                \"price\": {\n                    \"type\": \"number\",\n                    \"description\": \"The price of the product listing.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me create a new product listing?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I can assist you with that. Please provide the following details: title, description, and price.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure! The title is 'New Product', the description is 'This is a great product', and the price is $19.99.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will create the product listing now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"create_product_listing\",\n        \"parameters\": {\n            \"title\": \"New Product\",\n            \"description\": \"This is a great product\",\n            \"price\": 19.99\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "create_product_listing",
            "description": "Creates a new product listing with details such as title, description, and price.",
            "parameters": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the product listing."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the product listing."
                    },
                    "price": {
                        "type": "number",
                        "description": "The price of the product listing."
                    }
                },
                "required": [
                    "title",
                    "description",
                    "price"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The title of the product listing."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the product listing."
                    },
                    "price": {
                        "type": "number",
                        "description": "The price of the product listing."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me create a new product listing?"
            },
            {
                "role": "assistant",
                "text": "Of course! I can assist you with that. Please provide the following details: title, description, and price."
            },
            {
                "role": "user",
                "text": "Sure! The title is 'New Product', the description is 'This is a great product', and the price is $19.99."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will create the product listing now."
            }
        ],
        "function_call": {
            "function_name": "create_product_listing",
            "parameters": {
                "title": "New Product",
                "description": "This is a great product",
                "price": 19.99
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def create_product_listing(\\n    title: str,\\n    description: str,\\n    price: float,\\n) -> Dict[str, str]:\\n    \"\"\"\\n    Creates a new product listing with details such as title, description, and price.\\n\\n    Parameters:\\n        title (str): The title of the product listing.\\n        description (str): The description of the product listing.\\n        price (float): The price of the product listing.\\n\\n    Returns:\\n        Dict[str, str]: A dictionary with \\'title\\', \\'description\\', and \\'price\\' as keys and their respective values.\\n    \"\"\"', 'function_description': {'name': 'create_product_listing', 'description': 'Creates a new product listing with details such as title, description, and price.', 'parameters': {'type': 'object', 'properties': {'title': {'type': 'string', 'description': 'The title of the product listing.'}, 'description': {'type': 'string', 'description': 'The description of the product listing.'}, 'price': {'type': 'number', 'description': 'The price of the product listing.'}}, 'required': ['title', 'description', 'price']}, 'returns': {'type': 'object', 'properties': {'title': {'type': 'string', 'description': 'The title of the product listing.'}, 'description': {'type': 'string', 'description': 'The description of the product listing.'}, 'price': {'type': 'number', 'description': 'The price of the product listing.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-2",
    "description": {
        "function_snippet": "def update_product_listing(\n    product_id: str,\n    price: float,\n    inventory: int,\n    tags: List[str],\n) -> None:\n    \"\"\"\n    Updates an existing product listing with new details.\n\n    Parameters:\n        product_id (str): The ID of the product to update.\n        price (float): The new price of the product.\n        inventory (int): The new inventory count of the product.\n        tags (List[str]): A list of tags to associate with the product.\n\n    Returns:\n        None\n    \"\"\"\n    ",
        "function_description": {
            "name": "update_product_listing",
            "description": "Updates an existing product listing with new details.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "description": "The ID of the product to update."
                    },
                    "price": {
                        "type": "float",
                        "description": "The new price of the product."
                    },
                    "inventory": {
                        "type": "integer",
                        "description": "The new inventory count of the product."
                    },
                    "tags": {
                        "type": "array",
                        "description": "A list of tags to associate with the product.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "product_id",
                    "price",
                    "inventory",
                    "tags"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"update_product_listing\",\n        \"description\": \"Updates an existing product listing with new details.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the product to update.\"\n                },\n                \"price\": {\n                    \"type\": \"float\",\n                    \"description\": \"The new price of the product.\"\n                },\n                \"inventory\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The new inventory count of the product.\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of tags to associate with the product.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"product_id\", \"price\", \"inventory\", \"tags\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you update the product listing for product with ID '12345'?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the new price, inventory count, and tags for the product.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The new price is $9.99, inventory count is 50, and the tags are 'electronics' and 'gadgets'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm updating the product listing for product with ID '12345'.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"update_product_listing\",\n        \"parameters\": {\n            \"product_id\": \"12345\",\n            \"price\": 9.99,\n            \"inventory\": 50,\n            \"tags\": [\"electronics\", \"gadgets\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "update_product_listing",
            "description": "Updates an existing product listing with new details.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "description": "The ID of the product to update."
                    },
                    "price": {
                        "type": "float",
                        "description": "The new price of the product."
                    },
                    "inventory": {
                        "type": "integer",
                        "description": "The new inventory count of the product."
                    },
                    "tags": {
                        "type": "array",
                        "description": "A list of tags to associate with the product.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "product_id",
                    "price",
                    "inventory",
                    "tags"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you update the product listing for product with ID '12345'?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the new price, inventory count, and tags for the product."
            },
            {
                "role": "user",
                "text": "The new price is $9.99, inventory count is 50, and the tags are 'electronics' and 'gadgets'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm updating the product listing for product with ID '12345'."
            }
        ],
        "function_call": {
            "function_name": "update_product_listing",
            "parameters": {
                "product_id": "12345",
                "price": 9.99,
                "inventory": 50,
                "tags": [
                    "electronics",
                    "gadgets"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def update_product_listing(\\n    product_id: str,\\n    price: float,\\n    inventory: int,\\n    tags: List[str],\\n) -> None:\\n    \"\"\"\\n    Updates an existing product listing with new details.\\n\\n    Parameters:\\n        product_id (str): The ID of the product to update.\\n        price (float): The new price of the product.\\n        inventory (int): The new inventory count of the product.\\n        tags (List[str]): A list of tags to associate with the product.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n    ', 'function_description': {'name': 'update_product_listing', 'description': 'Updates an existing product listing with new details.', 'parameters': {'type': 'object', 'properties': {'product_id': {'type': 'string', 'description': 'The ID of the product to update.'}, 'price': {'type': 'float', 'description': 'The new price of the product.'}, 'inventory': {'type': 'integer', 'description': 'The new inventory count of the product.'}, 'tags': {'type': 'array', 'description': 'A list of tags to associate with the product.', 'items': {'type': 'string'}}}, 'required': ['product_id', 'price', 'inventory', 'tags']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-3",
    "description": {
        "function_snippet": "def delete_product_listing(\n    product_id: int,\n) -> None:\n    \"\"\"\n    Deletes a product listing from the store.\n\n    Parameters:\n        product_id (int): The ID of the product listing to delete.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "delete_product_listing",
            "description": "Deletes a product listing from the store.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "integer",
                        "description": "The ID of the product listing to delete."
                    }
                },
                "required": [
                    "product_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"delete_product_listing\",\n        \"description\": \"Deletes a product listing from the store.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the product listing to delete.\"\n                }\n            },\n            \"required\": [\"product_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me delete a product listing?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the product ID of the listing you want to delete.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The product ID is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will delete the product listing with ID '12345'.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"delete_product_listing\",\n        \"parameters\": {\n            \"product_id\": 12345\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "delete_product_listing",
            "description": "Deletes a product listing from the store.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "integer",
                        "description": "The ID of the product listing to delete."
                    }
                },
                "required": [
                    "product_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me delete a product listing?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the product ID of the listing you want to delete."
            },
            {
                "role": "user",
                "text": "The product ID is '12345'."
            },
            {
                "role": "assistant",
                "text": "Alright, I will delete the product listing with ID '12345'."
            }
        ],
        "function_call": {
            "function_name": "delete_product_listing",
            "parameters": {
                "product_id": 12345
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def delete_product_listing(\\n    product_id: int,\\n) -> None:\\n    \"\"\"\\n    Deletes a product listing from the store.\\n\\n    Parameters:\\n        product_id (int): The ID of the product listing to delete.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'delete_product_listing', 'description': 'Deletes a product listing from the store.', 'parameters': {'type': 'object', 'properties': {'product_id': {'type': 'integer', 'description': 'The ID of the product listing to delete.'}}, 'required': ['product_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-4",
    "description": {
        "function_snippet": "def create_collections(products: List[Dict[str, str]]) -> Dict[str, List[str]]:\n    \"\"\"\n    Creates collections to categorize products.\n\n    Parameters:\n        products (List[Dict[str, str]]): A list of dictionaries containing product details.\n                                         Each dictionary should have 'name' and 'category' keys.\n\n    Returns:\n        Dict[str, List[str]]: A dictionary with category names as keys and a list of product names as values.\n    \"\"\"\n",
        "function_description": {
            "name": "create_collections",
            "description": "Creates collections to categorize products.",
            "parameters": {
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "description": "A list of dictionaries containing product details. Each dictionary should have 'name' and 'category' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "category"
                            ]
                        }
                    }
                },
                "required": [
                    "products"
                ]
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"create_collections\",\n        \"description\": \"Creates collections to categorize products.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"products\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing product details. Each dictionary should have 'name' and 'category' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\"type\": \"string\"},\n                            \"category\": {\"type\": \"string\"}\n                        },\n                        \"required\": [\"name\", \"category\"]\n                    }\n                }\n            },\n            \"required\": [\"products\"]\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me create collections for my products?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide the details of your products.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have a list of products with their names and categories.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Perfect! Please provide the list of products with their names and categories.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure, here is the list: [{'name': 'Product A', 'category': 'Category 1'}, {'name': 'Product B', 'category': 'Category 2'}, {'name': 'Product C', 'category': 'Category 1'}]\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will create collections based on the product categories now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"create_collections\",\n        \"parameters\": {\n            \"products\": [\n                {\"name\": \"Product A\", \"category\": \"Category 1\"},\n                {\"name\": \"Product B\", \"category\": \"Category 2\"},\n                {\"name\": \"Product C\", \"category\": \"Category 1\"}\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "create_collections",
            "description": "Creates collections to categorize products.",
            "parameters": {
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "description": "A list of dictionaries containing product details. Each dictionary should have 'name' and 'category' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "category": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "category"
                            ]
                        }
                    }
                },
                "required": [
                    "products"
                ]
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me create collections for my products?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide the details of your products."
            },
            {
                "role": "user",
                "text": "I have a list of products with their names and categories."
            },
            {
                "role": "assistant",
                "text": "Perfect! Please provide the list of products with their names and categories."
            },
            {
                "role": "user",
                "text": "Sure, here is the list: [{'name': 'Product A', 'category': 'Category 1'}, {'name': 'Product B', 'category': 'Category 2'}, {'name': 'Product C', 'category': 'Category 1'}]"
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will create collections based on the product categories now."
            }
        ],
        "function_call": {
            "function_name": "create_collections",
            "parameters": {
                "products": [
                    {
                        "name": "Product A",
                        "category": "Category 1"
                    },
                    {
                        "name": "Product B",
                        "category": "Category 2"
                    },
                    {
                        "name": "Product C",
                        "category": "Category 1"
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def create_collections(products: List[Dict[str, str]]) -> Dict[str, List[str]]:\\n    \"\"\"\\n    Creates collections to categorize products.\\n\\n    Parameters:\\n        products (List[Dict[str, str]]): A list of dictionaries containing product details.\\n                                         Each dictionary should have \\'name\\' and \\'category\\' keys.\\n\\n    Returns:\\n        Dict[str, List[str]]: A dictionary with category names as keys and a list of product names as values.\\n    \"\"\"\\n', 'function_description': {'name': 'create_collections', 'description': 'Creates collections to categorize products.', 'parameters': {'type': 'object', 'properties': {'products': {'type': 'array', 'description': \"A list of dictionaries containing product details. Each dictionary should have 'name' and 'category' keys.\", 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'category': {'type': 'string'}}, 'required': ['name', 'category']}}}, 'required': ['products']}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-5",
    "description": {
        "function_snippet": "def add_or_remove_products(\n    collection_id: int,\n    products: List[int],\n    action: str,\n) -> str:\n    \"\"\"\n    Add or remove products from existing collections.\n\n    Parameters:\n        collection_id (int): The ID of the collection to modify.\n        products (List[int]): A list of product IDs to add or remove.\n        action (str): The action to perform, either 'add' or 'remove'.\n\n    Returns:\n        str: A message indicating the success or failure of the operation.\n    \"\"\"\n",
        "function_description": {
            "name": "add_or_remove_products",
            "description": "Add or remove products from existing collections.",
            "parameters": {
                "type": "object",
                "properties": {
                    "collection_id": {
                        "type": "integer",
                        "description": "The ID of the collection to modify."
                    },
                    "products": {
                        "type": "array",
                        "description": "A list of product IDs to add or remove.",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "action": {
                        "type": "string",
                        "description": "The action to perform, either 'add' or 'remove'."
                    }
                },
                "required": [
                    "collection_id",
                    "products",
                    "action"
                ]
            },
            "returns": {
                "type": "string",
                "description": "A message indicating the success or failure of the operation."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"add_or_remove_products\",\n        \"description\": \"Add or remove products from existing collections.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"collection_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the collection to modify.\"\n                },\n                \"products\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of product IDs to add or remove.\",\n                    \"items\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"action\": {\n                    \"type\": \"string\",\n                    \"description\": \"The action to perform, either 'add' or 'remove'.\"\n                }\n            },\n            \"required\": [\"collection_id\", \"products\", \"action\"]\n        },\n        \"returns\": {\n            \"type\": \"string\",\n            \"description\": \"A message indicating the success or failure of the operation.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me add a product to my collection?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can assist you with that. Please provide the collection ID, product ID, and specify whether you want to add or remove the product.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The collection ID is 12345, the product ID is 6789, and I want to add the product.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will add the product with ID 6789 to the collection with ID 12345.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"add_or_remove_products\",\n        \"parameters\": {\n            \"collection_id\": 12345,\n            \"products\": [6789],\n            \"action\": \"add\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "add_or_remove_products",
            "description": "Add or remove products from existing collections.",
            "parameters": {
                "type": "object",
                "properties": {
                    "collection_id": {
                        "type": "integer",
                        "description": "The ID of the collection to modify."
                    },
                    "products": {
                        "type": "array",
                        "description": "A list of product IDs to add or remove.",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "action": {
                        "type": "string",
                        "description": "The action to perform, either 'add' or 'remove'."
                    }
                },
                "required": [
                    "collection_id",
                    "products",
                    "action"
                ]
            },
            "returns": {
                "type": "string",
                "description": "A message indicating the success or failure of the operation."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me add a product to my collection?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can assist you with that. Please provide the collection ID, product ID, and specify whether you want to add or remove the product."
            },
            {
                "role": "user",
                "text": "The collection ID is 12345, the product ID is 6789, and I want to add the product."
            },
            {
                "role": "assistant",
                "text": "Alright, I will add the product with ID 6789 to the collection with ID 12345."
            }
        ],
        "function_call": {
            "function_name": "add_or_remove_products",
            "parameters": {
                "collection_id": 12345,
                "products": [
                    6789
                ],
                "action": "add"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def add_or_remove_products(\\n    collection_id: int,\\n    products: List[int],\\n    action: str,\\n) -> str:\\n    \"\"\"\\n    Add or remove products from existing collections.\\n\\n    Parameters:\\n        collection_id (int): The ID of the collection to modify.\\n        products (List[int]): A list of product IDs to add or remove.\\n        action (str): The action to perform, either \\'add\\' or \\'remove\\'.\\n\\n    Returns:\\n        str: A message indicating the success or failure of the operation.\\n    \"\"\"\\n', 'function_description': {'name': 'add_or_remove_products', 'description': 'Add or remove products from existing collections.', 'parameters': {'type': 'object', 'properties': {'collection_id': {'type': 'integer', 'description': 'The ID of the collection to modify.'}, 'products': {'type': 'array', 'description': 'A list of product IDs to add or remove.', 'items': {'type': 'integer'}}, 'action': {'type': 'string', 'description': \"The action to perform, either 'add' or 'remove'.\"}}, 'required': ['collection_id', 'products', 'action']}, 'returns': {'type': 'string', 'description': 'A message indicating the success or failure of the operation.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-6",
    "description": {
        "function_snippet": "def update_storefront_theme_settings(\n    theme_id: str,\n    settings: Dict[str, Union[str, int, bool]]\n) -> bool:\n    \"\"\"\n    Updates the storefront theme settings.\n\n    Parameters:\n        theme_id (str): The ID of the theme to update.\n        settings (Dict[str, Union[str, int, bool]]): A dictionary of settings to update.\n                                                     Each key should be a setting name and each value should be the new setting value.\n\n    Returns:\n        bool: True if the storefront theme settings were successfully updated, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "update_storefront_theme_settings",
            "description": "Updates the storefront theme settings.",
            "parameters": {
                "type": "object",
                "properties": {
                    "theme_id": {
                        "type": "string",
                        "description": "The ID of the theme to update."
                    },
                    "settings": {
                        "type": "object",
                        "description": "A dictionary of settings to update. Each key should be a setting name and each value should be the new setting value.",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "integer",
                                "boolean"
                            ]
                        }
                    }
                },
                "required": [
                    "theme_id",
                    "settings"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the storefront theme settings were successfully updated, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"update_storefront_theme_settings\",\n        \"description\": \"Updates the storefront theme settings.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"theme_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the theme to update.\"\n                },\n                \"settings\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary of settings to update. Each key should be a setting name and each value should be the new setting value.\",\n                    \"additionalProperties\": {\n                        \"type\": [\"string\", \"integer\", \"boolean\"]\n                    }\n                }\n            },\n            \"required\": [\"theme_id\", \"settings\"]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the storefront theme settings were successfully updated, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you update the settings for my storefront theme?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the theme ID and the updated settings.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The theme ID is '12345' and the updated settings are {\\\"color\\\": \\\"blue\\\", \\\"font_size\\\": 12}.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm updating the storefront theme settings now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"update_storefront_theme_settings\",\n        \"parameters\": {\n            \"theme_id\": \"12345\",\n            \"settings\": {\n                \"color\": \"blue\",\n                \"font_size\": 12\n            }\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "update_storefront_theme_settings",
            "description": "Updates the storefront theme settings.",
            "parameters": {
                "type": "object",
                "properties": {
                    "theme_id": {
                        "type": "string",
                        "description": "The ID of the theme to update."
                    },
                    "settings": {
                        "type": "object",
                        "description": "A dictionary of settings to update. Each key should be a setting name and each value should be the new setting value.",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "integer",
                                "boolean"
                            ]
                        }
                    }
                },
                "required": [
                    "theme_id",
                    "settings"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the storefront theme settings were successfully updated, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you update the settings for my storefront theme?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the theme ID and the updated settings."
            },
            {
                "role": "user",
                "text": "The theme ID is '12345' and the updated settings are {\"color\": \"blue\", \"font_size\": 12}."
            },
            {
                "role": "assistant",
                "text": "Great, I'm updating the storefront theme settings now."
            }
        ],
        "function_call": {
            "function_name": "update_storefront_theme_settings",
            "parameters": {
                "theme_id": "12345",
                "settings": {
                    "color": "blue",
                    "font_size": 12
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def update_storefront_theme_settings(\\n    theme_id: str,\\n    settings: Dict[str, Union[str, int, bool]]\\n) -> bool:\\n    \"\"\"\\n    Updates the storefront theme settings.\\n\\n    Parameters:\\n        theme_id (str): The ID of the theme to update.\\n        settings (Dict[str, Union[str, int, bool]]): A dictionary of settings to update.\\n                                                     Each key should be a setting name and each value should be the new setting value.\\n\\n    Returns:\\n        bool: True if the storefront theme settings were successfully updated, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'update_storefront_theme_settings', 'description': 'Updates the storefront theme settings.', 'parameters': {'type': 'object', 'properties': {'theme_id': {'type': 'string', 'description': 'The ID of the theme to update.'}, 'settings': {'type': 'object', 'description': 'A dictionary of settings to update. Each key should be a setting name and each value should be the new setting value.', 'additionalProperties': {'type': ['string', 'integer', 'boolean']}}}, 'required': ['theme_id', 'settings']}, 'returns': {'type': 'boolean', 'description': 'True if the storefront theme settings were successfully updated, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-7",
    "description": {
        "function_snippet": "def process_and_fulfill_orders(orders: List[Dict[str, Any]]) -> None:\n    \"\"\"\n    Process and fulfill orders, marking them as completed.\n\n    Parameters:\n        orders (List[Dict[str, Any]]): A list of dictionaries containing order details.\n                                       Each dictionary should have 'order_id' and 'status' keys.\n\n    Returns:\n        None\n    \"\"\"\n    for order in orders:\n        order_id = order['order_id']\n        status = order['status']\n        # Process and fulfill the order\n        # Mark the order as completed",
        "function_description": {
            "name": "process_and_fulfill_orders",
            "description": "Process and fulfill orders, marking them as completed.",
            "parameters": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "description": "A list of dictionaries containing order details. Each dictionary should have 'order_id' and 'status' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "order_id": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "order_id",
                                "status"
                            ]
                        }
                    }
                },
                "required": [
                    "orders"
                ]
            },
            "returns": {
                "type": "null"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"process_and_fulfill_orders\",\n        \"description\": \"Process and fulfill orders, marking them as completed.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"orders\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing order details. Each dictionary should have 'order_id' and 'status' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"order_id\": {\n                                \"type\": \"string\"\n                            },\n                            \"status\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"required\": [\"order_id\", \"status\"]\n                    }\n                }\n            },\n            \"required\": [\"orders\"]\n        },\n        \"returns\": {\n            \"type\": \"null\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you process and fulfill my orders?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the details of your orders.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have three orders. The first order has an order_id of '12345' and a status of 'pending'. The second order has an order_id of '67890' and a status of 'processing'. The third order has an order_id of '54321' and a status of 'completed'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will process and fulfill your orders now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"process_and_fulfill_orders\",\n        \"parameters\": {\n            \"orders\": [\n                {\n                    \"order_id\": \"12345\",\n                    \"status\": \"pending\"\n                },\n                {\n                    \"order_id\": \"67890\",\n                    \"status\": \"processing\"\n                },\n                {\n                    \"order_id\": \"54321\",\n                    \"status\": \"completed\"\n                }\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "process_and_fulfill_orders",
            "description": "Process and fulfill orders, marking them as completed.",
            "parameters": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "description": "A list of dictionaries containing order details. Each dictionary should have 'order_id' and 'status' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "order_id": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "order_id",
                                "status"
                            ]
                        }
                    }
                },
                "required": [
                    "orders"
                ]
            },
            "returns": {
                "type": "null"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you process and fulfill my orders?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the details of your orders."
            },
            {
                "role": "user",
                "text": "I have three orders. The first order has an order_id of '12345' and a status of 'pending'. The second order has an order_id of '67890' and a status of 'processing'. The third order has an order_id of '54321' and a status of 'completed'."
            },
            {
                "role": "assistant",
                "text": "Great, I will process and fulfill your orders now."
            }
        ],
        "function_call": {
            "function_name": "process_and_fulfill_orders",
            "parameters": {
                "orders": [
                    {
                        "order_id": "12345",
                        "status": "pending"
                    },
                    {
                        "order_id": "67890",
                        "status": "processing"
                    },
                    {
                        "order_id": "54321",
                        "status": "completed"
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def process_and_fulfill_orders(orders: List[Dict[str, Any]]) -> None:\\n    \"\"\"\\n    Process and fulfill orders, marking them as completed.\\n\\n    Parameters:\\n        orders (List[Dict[str, Any]]): A list of dictionaries containing order details.\\n                                       Each dictionary should have \\'order_id\\' and \\'status\\' keys.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n    for order in orders:\\n        order_id = order[\\'order_id\\']\\n        status = order[\\'status\\']\\n        # Process and fulfill the order\\n        # Mark the order as completed', 'function_description': {'name': 'process_and_fulfill_orders', 'description': 'Process and fulfill orders, marking them as completed.', 'parameters': {'type': 'object', 'properties': {'orders': {'type': 'array', 'description': \"A list of dictionaries containing order details. Each dictionary should have 'order_id' and 'status' keys.\", 'items': {'type': 'object', 'properties': {'order_id': {'type': 'string'}, 'status': {'type': 'string'}}, 'required': ['order_id', 'status']}}}, 'required': ['orders']}, 'returns': {'type': 'null'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-8",
    "description": {
        "function_snippet": "def generate_shipping_labels(\n    orders: List[Dict[str, Any]]\n) -> None:\n    \"\"\"\n    Generates and prints shipping labels for fulfilled orders.\n\n    Parameters:\n        orders (List[Dict[str, Any]]): A list of dictionaries containing order details.\n                                       Each dictionary should have 'order_id', 'customer_name',\n                                       'shipping_address' keys.\n\n    Returns:\n        None\n    \"\"\"\n\n",
        "function_description": {
            "name": "generate_shipping_labels",
            "description": "Generates and prints shipping labels for fulfilled orders.",
            "parameters": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "description": "A list of dictionaries containing order details. Each dictionary should have 'order_id', 'customer_name', 'shipping_address' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "order_id": {
                                    "type": "string"
                                },
                                "customer_name": {
                                    "type": "string"
                                },
                                "shipping_address": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "order_id",
                                "customer_name",
                                "shipping_address"
                            ]
                        }
                    }
                },
                "required": [
                    "orders"
                ]
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"generate_shipping_labels\",\n        \"description\": \"Generates and prints shipping labels for fulfilled orders.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"orders\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing order details. Each dictionary should have 'order_id', 'customer_name', 'shipping_address' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"order_id\": {\"type\": \"string\"},\n                            \"customer_name\": {\"type\": \"string\"},\n                            \"shipping_address\": {\"type\": \"string\"}\n                        },\n                        \"required\": [\"order_id\", \"customer_name\", \"shipping_address\"]\n                    }\n                }\n            },\n            \"required\": [\"orders\"]\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you generate shipping labels for my orders?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you provide me the details of your orders?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, I have a list of orders with their order IDs, customer names, and shipping addresses.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, please provide me the list of orders.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here is the list of orders:\\n\\nOrder 1:\\nOrder ID: 12345\\nCustomer Name: John Doe\\nShipping Address: 123 Main St\\n\\nOrder 2:\\nOrder ID: 67890\\nCustomer Name: Jane Smith\\nShipping Address: 456 Elm St\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the order details. I will generate and print the shipping labels now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"generate_shipping_labels\",\n        \"parameters\": {\n            \"orders\": [\n                {\n                    \"order_id\": \"12345\",\n                    \"customer_name\": \"John Doe\",\n                    \"shipping_address\": \"123 Main St\"\n                },\n                {\n                    \"order_id\": \"67890\",\n                    \"customer_name\": \"Jane Smith\",\n                    \"shipping_address\": \"456 Elm St\"\n                }\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "generate_shipping_labels",
            "description": "Generates and prints shipping labels for fulfilled orders.",
            "parameters": {
                "type": "object",
                "properties": {
                    "orders": {
                        "type": "array",
                        "description": "A list of dictionaries containing order details. Each dictionary should have 'order_id', 'customer_name', 'shipping_address' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "order_id": {
                                    "type": "string"
                                },
                                "customer_name": {
                                    "type": "string"
                                },
                                "shipping_address": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "order_id",
                                "customer_name",
                                "shipping_address"
                            ]
                        }
                    }
                },
                "required": [
                    "orders"
                ]
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you generate shipping labels for my orders?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you provide me the details of your orders?"
            },
            {
                "role": "user",
                "text": "Yes, I have a list of orders with their order IDs, customer names, and shipping addresses."
            },
            {
                "role": "assistant",
                "text": "Great, please provide me the list of orders."
            },
            {
                "role": "user",
                "text": "Here is the list of orders:\n\nOrder 1:\nOrder ID: 12345\nCustomer Name: John Doe\nShipping Address: 123 Main St\n\nOrder 2:\nOrder ID: 67890\nCustomer Name: Jane Smith\nShipping Address: 456 Elm St"
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the order details. I will generate and print the shipping labels now."
            }
        ],
        "function_call": {
            "function_name": "generate_shipping_labels",
            "parameters": {
                "orders": [
                    {
                        "order_id": "12345",
                        "customer_name": "John Doe",
                        "shipping_address": "123 Main St"
                    },
                    {
                        "order_id": "67890",
                        "customer_name": "Jane Smith",
                        "shipping_address": "456 Elm St"
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def generate_shipping_labels(\\n    orders: List[Dict[str, Any]]\\n) -> None:\\n    \"\"\"\\n    Generates and prints shipping labels for fulfilled orders.\\n\\n    Parameters:\\n        orders (List[Dict[str, Any]]): A list of dictionaries containing order details.\\n                                       Each dictionary should have \\'order_id\\', \\'customer_name\\',\\n                                       \\'shipping_address\\' keys.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n\\n', 'function_description': {'name': 'generate_shipping_labels', 'description': 'Generates and prints shipping labels for fulfilled orders.', 'parameters': {'type': 'object', 'properties': {'orders': {'type': 'array', 'description': \"A list of dictionaries containing order details. Each dictionary should have 'order_id', 'customer_name', 'shipping_address' keys.\", 'items': {'type': 'object', 'properties': {'order_id': {'type': 'string'}, 'customer_name': {'type': 'string'}, 'shipping_address': {'type': 'string'}}, 'required': ['order_id', 'customer_name', 'shipping_address']}}}, 'required': ['orders']}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-9",
    "description": {
        "function_snippet": "def create_discount_codes(\n    num_codes: int,\n    discount_amount: float,\n    expiration_date: str,\n    promotion_type: str,\n) -> List[str]:\n    \"\"\"\n    Creates discount codes for sales and promotions.\n\n    Parameters:\n        num_codes (int): The number of discount codes to create.\n        discount_amount (float): The amount to discount from the original price.\n        expiration_date (str): The date when the discount codes expire in YYYY-MM-DD format.\n        promotion_type (str): The type of promotion (e.g. \"holiday sale\", \"end of season clearance\").\n\n    Returns:\n        List[str]: A list of discount codes.\n    \"\"\"\n",
        "function_description": {
            "name": "create_discount_codes",
            "description": "Creates discount codes for sales and promotions.",
            "parameters": {
                "type": "object",
                "properties": {
                    "num_codes": {
                        "type": "integer",
                        "description": "The number of discount codes to create."
                    },
                    "discount_amount": {
                        "type": "float",
                        "description": "The amount to discount from the original price."
                    },
                    "expiration_date": {
                        "type": "string",
                        "description": "The date when the discount codes expire in YYYY-MM-DD format."
                    },
                    "promotion_type": {
                        "type": "string",
                        "description": "The type of promotion (e.g. \"holiday sale\", \"end of season clearance\")."
                    }
                },
                "required": [
                    "num_codes",
                    "discount_amount",
                    "expiration_date",
                    "promotion_type"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "discount_codes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of discount codes."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"create_discount_codes\",\n        \"description\": \"Creates discount codes for sales and promotions.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"num_codes\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of discount codes to create.\"\n                },\n                \"discount_amount\": {\n                    \"type\": \"float\",\n                    \"description\": \"The amount to discount from the original price.\"\n                },\n                \"expiration_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The date when the discount codes expire in YYYY-MM-DD format.\"\n                },\n                \"promotion_type\": {\n                    \"type\": \"string\",\n                    \"description\": \"The type of promotion (e.g. 'holiday sale', 'end of season clearance').\"\n                }\n            },\n            \"required\": [\n                \"num_codes\",\n                \"discount_amount\",\n                \"expiration_date\",\n                \"promotion_type\"\n            ]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"discount_codes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"A list of discount codes.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you create discount codes for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the following information:\\n1. The number of discount codes to create.\\n2. The amount to discount from the original price.\\n3. The date when the discount codes expire in YYYY-MM-DD format.\\n4. The type of promotion (e.g. 'holiday sale', 'end of season clearance').\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I need 10 discount codes with a discount amount of 20.00, expiring on 2022-12-31, for a 'holiday sale'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm creating the discount codes now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"create_discount_codes\",\n        \"parameters\": {\n            \"num_codes\": 10,\n            \"discount_amount\": 20.00,\n            \"expiration_date\": \"2022-12-31\",\n            \"promotion_type\": \"holiday sale\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "create_discount_codes",
            "description": "Creates discount codes for sales and promotions.",
            "parameters": {
                "type": "object",
                "properties": {
                    "num_codes": {
                        "type": "integer",
                        "description": "The number of discount codes to create."
                    },
                    "discount_amount": {
                        "type": "float",
                        "description": "The amount to discount from the original price."
                    },
                    "expiration_date": {
                        "type": "string",
                        "description": "The date when the discount codes expire in YYYY-MM-DD format."
                    },
                    "promotion_type": {
                        "type": "string",
                        "description": "The type of promotion (e.g. 'holiday sale', 'end of season clearance')."
                    }
                },
                "required": [
                    "num_codes",
                    "discount_amount",
                    "expiration_date",
                    "promotion_type"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "discount_codes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of discount codes."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you create discount codes for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the following information:\n1. The number of discount codes to create.\n2. The amount to discount from the original price.\n3. The date when the discount codes expire in YYYY-MM-DD format.\n4. The type of promotion (e.g. 'holiday sale', 'end of season clearance')."
            },
            {
                "role": "user",
                "text": "I need 10 discount codes with a discount amount of 20.00, expiring on 2022-12-31, for a 'holiday sale'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm creating the discount codes now."
            }
        ],
        "function_call": {
            "function_name": "create_discount_codes",
            "parameters": {
                "num_codes": 10,
                "discount_amount": 20.0,
                "expiration_date": "2022-12-31",
                "promotion_type": "holiday sale"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def create_discount_codes(\\n    num_codes: int,\\n    discount_amount: float,\\n    expiration_date: str,\\n    promotion_type: str,\\n) -> List[str]:\\n    \"\"\"\\n    Creates discount codes for sales and promotions.\\n\\n    Parameters:\\n        num_codes (int): The number of discount codes to create.\\n        discount_amount (float): The amount to discount from the original price.\\n        expiration_date (str): The date when the discount codes expire in YYYY-MM-DD format.\\n        promotion_type (str): The type of promotion (e.g. \"holiday sale\", \"end of season clearance\").\\n\\n    Returns:\\n        List[str]: A list of discount codes.\\n    \"\"\"\\n', 'function_description': {'name': 'create_discount_codes', 'description': 'Creates discount codes for sales and promotions.', 'parameters': {'type': 'object', 'properties': {'num_codes': {'type': 'integer', 'description': 'The number of discount codes to create.'}, 'discount_amount': {'type': 'float', 'description': 'The amount to discount from the original price.'}, 'expiration_date': {'type': 'string', 'description': 'The date when the discount codes expire in YYYY-MM-DD format.'}, 'promotion_type': {'type': 'string', 'description': 'The type of promotion (e.g. \"holiday sale\", \"end of season clearance\").'}}, 'required': ['num_codes', 'discount_amount', 'expiration_date', 'promotion_type']}, 'returns': {'type': 'object', 'properties': {'discount_codes': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of discount codes.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-10",
    "description": {
        "function_snippet": "def track_and_update_inventory(products: List[Dict[str, Any]]) -> None:\n    \"\"\"\n    Track and update the inventory levels of products.\n\n    Parameters:\n        products (List[Dict[str, Any]]): A list of dictionaries containing product details.\n                                         Each dictionary should have 'name', 'quantity', and 'price' keys.\n\n    Returns:\n        None\n    \"\"\"\n\n",
        "function_description": {
            "name": "track_and_update_inventory",
            "description": "Track and update the inventory levels of products.",
            "parameters": {
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "description": "A list of dictionaries containing product details. Each dictionary should have 'name', 'quantity', and 'price' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "price": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "name",
                                "quantity",
                                "price"
                            ]
                        }
                    }
                },
                "required": [
                    "products"
                ]
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"track_and_update_inventory\",\n        \"description\": \"Track and update the inventory levels of products.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"products\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing product details. Each dictionary should have 'name', 'quantity', and 'price' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\"type\": \"string\"},\n                            \"quantity\": {\"type\": \"integer\"},\n                            \"price\": {\"type\": \"number\"}\n                        },\n                        \"required\": [\"name\", \"quantity\", \"price\"]\n                    }\n                }\n            },\n            \"required\": [\"products\"]\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you track and update my product inventory?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the details of your products.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have three products. The first one is named 'Product A' with a quantity of 10 and a price of $20. The second one is named 'Product B' with a quantity of 5 and a price of $15. The third one is named 'Product C' with a quantity of 8 and a price of $25.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will track and update your product inventory now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"track_and_update_inventory\",\n        \"parameters\": {\n            \"products\": [\n                {\n                    \"name\": \"Product A\",\n                    \"quantity\": 10,\n                    \"price\": 20\n                },\n                {\n                    \"name\": \"Product B\",\n                    \"quantity\": 5,\n                    \"price\": 15\n                },\n                {\n                    \"name\": \"Product C\",\n                    \"quantity\": 8,\n                    \"price\": 25\n                }\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "track_and_update_inventory",
            "description": "Track and update the inventory levels of products.",
            "parameters": {
                "type": "object",
                "properties": {
                    "products": {
                        "type": "array",
                        "description": "A list of dictionaries containing product details. Each dictionary should have 'name', 'quantity', and 'price' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "quantity": {
                                    "type": "integer"
                                },
                                "price": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "name",
                                "quantity",
                                "price"
                            ]
                        }
                    }
                },
                "required": [
                    "products"
                ]
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you track and update my product inventory?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the details of your products."
            },
            {
                "role": "user",
                "text": "I have three products. The first one is named 'Product A' with a quantity of 10 and a price of $20. The second one is named 'Product B' with a quantity of 5 and a price of $15. The third one is named 'Product C' with a quantity of 8 and a price of $25."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will track and update your product inventory now."
            }
        ],
        "function_call": {
            "function_name": "track_and_update_inventory",
            "parameters": {
                "products": [
                    {
                        "name": "Product A",
                        "quantity": 10,
                        "price": 20
                    },
                    {
                        "name": "Product B",
                        "quantity": 5,
                        "price": 15
                    },
                    {
                        "name": "Product C",
                        "quantity": 8,
                        "price": 25
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def track_and_update_inventory(products: List[Dict[str, Any]]) -> None:\\n    \"\"\"\\n    Track and update the inventory levels of products.\\n\\n    Parameters:\\n        products (List[Dict[str, Any]]): A list of dictionaries containing product details.\\n                                         Each dictionary should have \\'name\\', \\'quantity\\', and \\'price\\' keys.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n\\n', 'function_description': {'name': 'track_and_update_inventory', 'description': 'Track and update the inventory levels of products.', 'parameters': {'type': 'object', 'properties': {'products': {'type': 'array', 'description': \"A list of dictionaries containing product details. Each dictionary should have 'name', 'quantity', and 'price' keys.\", 'items': {'type': 'object', 'properties': {'name': {'type': 'string'}, 'quantity': {'type': 'integer'}, 'price': {'type': 'number'}}, 'required': ['name', 'quantity', 'price']}}}, 'required': ['products']}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-11",
    "description": {
        "function_snippet": "def import_export_data(\nfile_path: str,\noperation: str,\n) -> bool:\n    \"\"\"\n    Import or export products and customer data in bulk.\n\n    Parameters:\n        file_path (str): The path of the file to import/export.\n        operation (str): The operation to be performed, either 'import' or 'export'.\n\n    Returns:\n        bool: True if the operation is successful, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "import_export_data",
            "description": "Import or export products and customer data in bulk.",
            "parameters": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The path of the file to import/export."
                    },
                    "operation": {
                        "type": "string",
                        "description": "The operation to be performed, either 'import' or 'export'."
                    }
                },
                "required": [
                    "file_path",
                    "operation"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the operation is successful, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"import_export_data\",\n        \"description\": \"Import or export products and customer data in bulk.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"file_path\": {\n                    \"type\": \"string\",\n                    \"description\": \"The path of the file to import/export.\"\n                },\n                \"operation\": {\n                    \"type\": \"string\",\n                    \"description\": \"The operation to be performed, either 'import' or 'export'.\"\n                }\n            },\n            \"required\": [\"file_path\", \"operation\"]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the operation is successful, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you import my customer data?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the file path and specify if it's an import or export operation.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The file path is 'path/to/file.csv' and I want to perform an import operation.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I will start importing your customer data now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"import_export_data\",\n        \"parameters\": {\n            \"file_path\": \"path/to/file.csv\",\n            \"operation\": \"import\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "import_export_data",
            "description": "Import or export products and customer data in bulk.",
            "parameters": {
                "type": "object",
                "properties": {
                    "file_path": {
                        "type": "string",
                        "description": "The path of the file to import/export."
                    },
                    "operation": {
                        "type": "string",
                        "description": "The operation to be performed, either 'import' or 'export'."
                    }
                },
                "required": [
                    "file_path",
                    "operation"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the operation is successful, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you import my customer data?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the file path and specify if it's an import or export operation."
            },
            {
                "role": "user",
                "text": "The file path is 'path/to/file.csv' and I want to perform an import operation."
            },
            {
                "role": "assistant",
                "text": "Great, I will start importing your customer data now."
            }
        ],
        "function_call": {
            "function_name": "import_export_data",
            "parameters": {
                "file_path": "path/to/file.csv",
                "operation": "import"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def import_export_data(\\nfile_path: str,\\noperation: str,\\n) -> bool:\\n    \"\"\"\\n    Import or export products and customer data in bulk.\\n\\n    Parameters:\\n        file_path (str): The path of the file to import/export.\\n        operation (str): The operation to be performed, either \\'import\\' or \\'export\\'.\\n\\n    Returns:\\n        bool: True if the operation is successful, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'import_export_data', 'description': 'Import or export products and customer data in bulk.', 'parameters': {'type': 'object', 'properties': {'file_path': {'type': 'string', 'description': 'The path of the file to import/export.'}, 'operation': {'type': 'string', 'description': \"The operation to be performed, either 'import' or 'export'.\"}}, 'required': ['file_path', 'operation']}, 'returns': {'type': 'boolean', 'description': 'True if the operation is successful, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-12",
    "description": {
        "function_snippet": "def manage_customer_accounts(\n    action: str,\n    account_id: int,\n    account_info: Dict[str, str]\n) -> Dict[str, str]:\n    \"\"\"\n    Manages customer accounts, including creation, update, and deletion.\n\n    Parameters:\n        action (str): The action to perform on the customer account (creation, update, or deletion).\n        account_id (int): The unique identifier of the customer account.\n        account_info (Dict[str, str]): A dictionary containing the account information.\n\n    Returns:\n        Dict[str, str]: A dictionary with 'status' as a key and the status message as a value.\n    \"\"\"\n",
        "function_description": {
            "name": "manage_customer_accounts",
            "description": "Manages customer accounts, including creation, update, and deletion.",
            "parameters": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the customer account (creation, update, or deletion)."
                    },
                    "account_id": {
                        "type": "integer",
                        "description": "The unique identifier of the customer account."
                    },
                    "account_info": {
                        "type": "object",
                        "description": "A dictionary containing the account information.",
                        "properties": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "action",
                    "account_id",
                    "account_info"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status message."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"manage_customer_accounts\",\n        \"description\": \"Manages customer accounts, including creation, update, and deletion.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\n                    \"type\": \"string\",\n                    \"description\": \"The action to perform on the customer account (creation, update, or deletion).\"\n                },\n                \"account_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The unique identifier of the customer account.\"\n                },\n                \"account_info\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing the account information.\",\n                    \"properties\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"action\", \"account_id\", \"account_info\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"status\": {\n                    \"type\": \"string\",\n                    \"description\": \"The status message.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me manage my customer accounts?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! How can I assist you with your customer accounts?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I need to create a new customer account.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, please provide me with the necessary information for the new account.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The account ID is 12345 and the account info is {'name': 'John Doe', 'email': 'johndoe@example.com'}\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it! I will proceed with creating the new customer account.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"manage_customer_accounts\",\n        \"parameters\": {\n            \"action\": \"creation\",\n            \"account_id\": 12345,\n            \"account_info\": {\n                \"name\": \"John Doe\",\n                \"email\": \"johndoe@example.com\"\n            }\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "manage_customer_accounts",
            "description": "Manages customer accounts, including creation, update, and deletion.",
            "parameters": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the customer account (creation, update, or deletion)."
                    },
                    "account_id": {
                        "type": "integer",
                        "description": "The unique identifier of the customer account."
                    },
                    "account_info": {
                        "type": "object",
                        "description": "A dictionary containing the account information.",
                        "properties": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "action",
                    "account_id",
                    "account_info"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status message."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me manage my customer accounts?"
            },
            {
                "role": "assistant",
                "text": "Of course! How can I assist you with your customer accounts?"
            },
            {
                "role": "user",
                "text": "I need to create a new customer account."
            },
            {
                "role": "assistant",
                "text": "Sure, please provide me with the necessary information for the new account."
            },
            {
                "role": "user",
                "text": "The account ID is 12345 and the account info is {'name': 'John Doe', 'email': 'johndoe@example.com'}"
            },
            {
                "role": "assistant",
                "text": "Got it! I will proceed with creating the new customer account."
            }
        ],
        "function_call": {
            "function_name": "manage_customer_accounts",
            "parameters": {
                "action": "creation",
                "account_id": 12345,
                "account_info": {
                    "name": "John Doe",
                    "email": "johndoe@example.com"
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def manage_customer_accounts(\\n    action: str,\\n    account_id: int,\\n    account_info: Dict[str, str]\\n) -> Dict[str, str]:\\n    \"\"\"\\n    Manages customer accounts, including creation, update, and deletion.\\n\\n    Parameters:\\n        action (str): The action to perform on the customer account (creation, update, or deletion).\\n        account_id (int): The unique identifier of the customer account.\\n        account_info (Dict[str, str]): A dictionary containing the account information.\\n\\n    Returns:\\n        Dict[str, str]: A dictionary with \\'status\\' as a key and the status message as a value.\\n    \"\"\"\\n', 'function_description': {'name': 'manage_customer_accounts', 'description': 'Manages customer accounts, including creation, update, and deletion.', 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'description': 'The action to perform on the customer account (creation, update, or deletion).'}, 'account_id': {'type': 'integer', 'description': 'The unique identifier of the customer account.'}, 'account_info': {'type': 'object', 'description': 'A dictionary containing the account information.', 'properties': {'type': 'string'}}}, 'required': ['action', 'account_id', 'account_info']}, 'returns': {'type': 'object', 'properties': {'status': {'type': 'string', 'description': 'The status message.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-13",
    "description": {
        "function_snippet": "def view_and_analyze_sales_reports() -> None:\n    \"\"\"\n    View and analyze sales reports for performance insights.\n\n    This function allows the user to view and analyze sales reports to gain insights into the performance of the business.\n    It does not return any value.\n    \"\"\"\n    # Code to view and analyze sales reports goes here",
        "function_description": {
            "name": "view_and_analyze_sales_reports",
            "description": "View and analyze sales reports for performance insights.",
            "parameters": {
                "type": "object",
                "properties": {},
                "required": []
            },
            "returns": {
                "type": "object",
                "properties": {}
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"view_and_analyze_sales_reports\",\n        \"description\": \"View and analyze sales reports for performance insights.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"required\": []\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {}\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me view and analyze my sales reports?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the necessary information.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I don't have any specific parameters. Just show me the overall sales performance.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Understood. I will proceed to view and analyze your sales reports.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"view_and_analyze_sales_reports\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "view_and_analyze_sales_reports",
            "description": "View and analyze sales reports for performance insights.",
            "parameters": {
                "type": "object",
                "properties": {},
                "required": []
            },
            "returns": {
                "type": "object",
                "properties": {}
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me view and analyze my sales reports?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the necessary information."
            },
            {
                "role": "user",
                "text": "I don't have any specific parameters. Just show me the overall sales performance."
            },
            {
                "role": "assistant",
                "text": "Understood. I will proceed to view and analyze your sales reports."
            }
        ],
        "function_call": {
            "function_name": "view_and_analyze_sales_reports",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def view_and_analyze_sales_reports() -> None:\\n    \"\"\"\\n    View and analyze sales reports for performance insights.\\n\\n    This function allows the user to view and analyze sales reports to gain insights into the performance of the business.\\n    It does not return any value.\\n    \"\"\"\\n    # Code to view and analyze sales reports goes here', 'function_description': {'name': 'view_and_analyze_sales_reports', 'description': 'View and analyze sales reports for performance insights.', 'parameters': {'type': 'object', 'properties': {}, 'required': []}, 'returns': {'type': 'object', 'properties': {}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-14",
    "description": {
        "function_snippet": "def calculate_taxes(region: str, income: float) -> float:\n    \"\"\"\n    Automatically calculates taxes for different regions.\n\n    Parameters:\n        region (str): The region in which the taxes are to be calculated.\n        income (float): The income amount on which taxes are to be calculated.\n\n    Returns:\n        float: The calculated tax amount.\n    \"\"\"\n    tax_rate = get_tax_rate(region)\n    tax_amount = income * tax_rate\n    return tax_amount",
        "function_description": {
            "name": "calculate_taxes",
            "description": "Automatically calculates taxes for different regions.",
            "parameters": {
                "type": "object",
                "properties": {
                    "region": {
                        "type": "string",
                        "description": "The region in which the taxes are to be calculated."
                    },
                    "income": {
                        "type": "float",
                        "description": "The income amount on which taxes are to be calculated."
                    }
                },
                "required": [
                    "region",
                    "income"
                ]
            },
            "returns": {
                "type": "float",
                "description": "The calculated tax amount."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"calculate_taxes\",\n        \"description\": \"Automatically calculates taxes for different regions.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"region\": {\n                    \"type\": \"string\",\n                    \"description\": \"The region in which the taxes are to be calculated.\"\n                },\n                \"income\": {\n                    \"type\": \"float\",\n                    \"description\": \"The income amount on which taxes are to be calculated.\"\n                }\n            },\n            \"required\": [\"region\", \"income\"]\n        },\n        \"returns\": {\n            \"type\": \"float\",\n            \"description\": \"The calculated tax amount.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me calculate my taxes?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. May I know the region in which you want to calculate taxes?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I live in California.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great. Now, could you please provide me with your income?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My income is $50000.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will calculate your taxes now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"calculate_taxes\",\n        \"parameters\": {\n            \"region\": \"California\",\n            \"income\": 50000.0\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "calculate_taxes",
            "description": "Automatically calculates taxes for different regions.",
            "parameters": {
                "type": "object",
                "properties": {
                    "region": {
                        "type": "string",
                        "description": "The region in which the taxes are to be calculated."
                    },
                    "income": {
                        "type": "float",
                        "description": "The income amount on which taxes are to be calculated."
                    }
                },
                "required": [
                    "region",
                    "income"
                ]
            },
            "returns": {
                "type": "float",
                "description": "The calculated tax amount."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me calculate my taxes?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. May I know the region in which you want to calculate taxes?"
            },
            {
                "role": "user",
                "text": "I live in California."
            },
            {
                "role": "assistant",
                "text": "Great. Now, could you please provide me with your income?"
            },
            {
                "role": "user",
                "text": "My income is $50000."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the information. I will calculate your taxes now."
            }
        ],
        "function_call": {
            "function_name": "calculate_taxes",
            "parameters": {
                "region": "California",
                "income": 50000.0
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def calculate_taxes(region: str, income: float) -> float:\\n    \"\"\"\\n    Automatically calculates taxes for different regions.\\n\\n    Parameters:\\n        region (str): The region in which the taxes are to be calculated.\\n        income (float): The income amount on which taxes are to be calculated.\\n\\n    Returns:\\n        float: The calculated tax amount.\\n    \"\"\"\\n    tax_rate = get_tax_rate(region)\\n    tax_amount = income * tax_rate\\n    return tax_amount', 'function_description': {'name': 'calculate_taxes', 'description': 'Automatically calculates taxes for different regions.', 'parameters': {'type': 'object', 'properties': {'region': {'type': 'string', 'description': 'The region in which the taxes are to be calculated.'}, 'income': {'type': 'float', 'description': 'The income amount on which taxes are to be calculated.'}}, 'required': ['region', 'income']}, 'returns': {'type': 'float', 'description': 'The calculated tax amount.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-15",
    "description": {
        "function_snippet": "def manage_store_blog_posts(\n    action: str,\n    post_id: int,\n    post_title: str,\n    post_content: str,\n    post_tags: List[str],\n) -> str:\n    \"\"\"\n    Manages and updates store blog posts.\n\n    Parameters:\n        action (str): The action to perform on the blog post. Can be 'create', 'update', or 'delete'.\n        post_id (int): The ID of the blog post.\n        post_title (str): The title of the blog post.\n        post_content (str): The content of the blog post.\n        post_tags (List[str]): A list of tags associated with the blog post.\n\n    Returns:\n        str: A message indicating the success or failure of the action performed on the blog post.\n    \"\"\n",
        "function_description": {
            "name": "manage_store_blog_posts",
            "description": "Manages and updates store blog posts.",
            "parameters": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the blog post. Can be 'create', 'update', or 'delete'."
                    },
                    "post_id": {
                        "type": "integer",
                        "description": "The ID of the blog post."
                    },
                    "post_title": {
                        "type": "string",
                        "description": "The title of the blog post."
                    },
                    "post_content": {
                        "type": "string",
                        "description": "The content of the blog post."
                    },
                    "post_tags": {
                        "type": "array",
                        "description": "A list of tags associated with the blog post.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "action",
                    "post_id",
                    "post_title",
                    "post_content",
                    "post_tags"
                ]
            },
            "returns": {
                "type": "string",
                "description": "A message indicating the success or failure of the action performed on the blog post."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"manage_store_blog_posts\",\n        \"description\": \"Manages and updates store blog posts.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\n                    \"type\": \"string\",\n                    \"description\": \"The action to perform on the blog post. Can be 'create', 'update', or 'delete'.\"\n                },\n                \"post_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the blog post.\"\n                },\n                \"post_title\": {\n                    \"type\": \"string\",\n                    \"description\": \"The title of the blog post.\"\n                },\n                \"post_content\": {\n                    \"type\": \"string\",\n                    \"description\": \"The content of the blog post.\"\n                },\n                \"post_tags\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of tags associated with the blog post.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"action\", \"post_id\", \"post_title\", \"post_content\", \"post_tags\"]\n        },\n        \"returns\": {\n            \"type\": \"string\",\n            \"description\": \"A message indicating the success or failure of the action performed on the blog post.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you manage and update my store's blog posts?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. What action would you like to perform on the blog post? (create/update/delete)\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I would like to create a new blog post.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Please provide the ID, title, content, and tags for the new blog post.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The ID is 12345, the title is 'New Blog Post', the content is 'Lorem ipsum dolor sit amet', and the tags are ['tag1', 'tag2'].\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm creating the new blog post with the provided information.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"manage_store_blog_posts\",\n        \"parameters\": {\n            \"action\": \"create\",\n            \"post_id\": 12345,\n            \"post_title\": \"New Blog Post\",\n            \"post_content\": \"Lorem ipsum dolor sit amet\",\n            \"post_tags\": [\"tag1\", \"tag2\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "manage_store_blog_posts",
            "description": "Manages and updates store blog posts.",
            "parameters": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the blog post. Can be 'create', 'update', or 'delete'."
                    },
                    "post_id": {
                        "type": "integer",
                        "description": "The ID of the blog post."
                    },
                    "post_title": {
                        "type": "string",
                        "description": "The title of the blog post."
                    },
                    "post_content": {
                        "type": "string",
                        "description": "The content of the blog post."
                    },
                    "post_tags": {
                        "type": "array",
                        "description": "A list of tags associated with the blog post.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "action",
                    "post_id",
                    "post_title",
                    "post_content",
                    "post_tags"
                ]
            },
            "returns": {
                "type": "string",
                "description": "A message indicating the success or failure of the action performed on the blog post."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you manage and update my store's blog posts?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. What action would you like to perform on the blog post? (create/update/delete)"
            },
            {
                "role": "user",
                "text": "I would like to create a new blog post."
            },
            {
                "role": "assistant",
                "text": "Please provide the ID, title, content, and tags for the new blog post."
            },
            {
                "role": "user",
                "text": "The ID is 12345, the title is 'New Blog Post', the content is 'Lorem ipsum dolor sit amet', and the tags are ['tag1', 'tag2']."
            },
            {
                "role": "assistant",
                "text": "Great, I'm creating the new blog post with the provided information."
            }
        ],
        "function_call": {
            "function_name": "manage_store_blog_posts",
            "parameters": {
                "action": "create",
                "post_id": 12345,
                "post_title": "New Blog Post",
                "post_content": "Lorem ipsum dolor sit amet",
                "post_tags": [
                    "tag1",
                    "tag2"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def manage_store_blog_posts(\\n    action: str,\\n    post_id: int,\\n    post_title: str,\\n    post_content: str,\\n    post_tags: List[str],\\n) -> str:\\n    \"\"\"\\n    Manages and updates store blog posts.\\n\\n    Parameters:\\n        action (str): The action to perform on the blog post. Can be \\'create\\', \\'update\\', or \\'delete\\'.\\n        post_id (int): The ID of the blog post.\\n        post_title (str): The title of the blog post.\\n        post_content (str): The content of the blog post.\\n        post_tags (List[str]): A list of tags associated with the blog post.\\n\\n    Returns:\\n        str: A message indicating the success or failure of the action performed on the blog post.\\n    \"\"\\n', 'function_description': {'name': 'manage_store_blog_posts', 'description': 'Manages and updates store blog posts.', 'parameters': {'type': 'object', 'properties': {'action': {'type': 'string', 'description': \"The action to perform on the blog post. Can be 'create', 'update', or 'delete'.\"}, 'post_id': {'type': 'integer', 'description': 'The ID of the blog post.'}, 'post_title': {'type': 'string', 'description': 'The title of the blog post.'}, 'post_content': {'type': 'string', 'description': 'The content of the blog post.'}, 'post_tags': {'type': 'array', 'description': 'A list of tags associated with the blog post.', 'items': {'type': 'string'}}}, 'required': ['action', 'post_id', 'post_title', 'post_content', 'post_tags']}, 'returns': {'type': 'string', 'description': 'A message indicating the success or failure of the action performed on the blog post.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-16",
    "description": {
        "function_snippet": "def add_or_update_product_reviews_and_ratings(\n    product_id: str,\n    reviews: List[Dict[str, Union[str, int, float]]],\n) -> Dict[str, Union[str, int, float]]:\n    \"\"\"\n    Adds or updates product reviews and ratings.\n\n    Parameters:\n        product_id (str): The ID of the product.\n        reviews (List[Dict[str, Union[str, int, float]]]): A list of dictionaries containing review details.\n                                                           Each dictionary should have 'review_id', 'rating', and 'comment' keys.\n\n    Returns:\n        Dict[str, Union[str, int, float]]: A dictionary with 'product_id' as a key and the product ID as a value.\n    \"\"\"",
        "function_description": {
            "name": "add_or_update_product_reviews_and_ratings",
            "description": "Adds or updates product reviews and ratings.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "description": "The ID of the product."
                    },
                    "reviews": {
                        "type": "array",
                        "description": "A list of dictionaries containing review details. Each dictionary should have 'review_id', 'rating', and 'comment' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "review_id": {
                                    "type": "string"
                                },
                                "rating": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "review_id",
                                "rating",
                                "comment"
                            ]
                        }
                    }
                },
                "required": [
                    "product_id",
                    "reviews"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "description": "The ID of the product."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"add_or_update_product_reviews_and_ratings\",\n        \"description\": \"Adds or updates product reviews and ratings.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the product.\"\n                },\n                \"reviews\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing review details. Each dictionary should have 'review_id', 'rating', and 'comment' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"review_id\": {\"type\": \"string\"},\n                            \"rating\": {\"type\": \"integer\"},\n                            \"comment\": {\"type\": \"string\"}\n                        },\n                        \"required\": [\"review_id\", \"rating\", \"comment\"]\n                    }\n                }\n            },\n            \"required\": [\"product_id\", \"reviews\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product_id\": {\"type\": \"string\", \"description\": \"The ID of the product.\"}\n            }\n        }\n    },\n    \"conversation\": [\n        {\"role\": \"user\", \"text\": \"Can you add or update the reviews and ratings for a product?\"},\n        {\"role\": \"assistant\", \"text\": \"Sure, I can help with that. Please provide the product ID and the reviews.\"},\n        {\"role\": \"user\", \"text\": \"The product ID is '12345' and here are the reviews: [{'review_id': '1', 'rating': 4, 'comment': 'Great product!'}, {'review_id': '2', 'rating': 5, 'comment': 'Excellent quality!'}]\"},\n        {\"role\": \"assistant\", \"text\": \"Thank you for providing the information. I will add or update the reviews and ratings for the product with ID '12345'.\"},\n        {\"role\": \"assistant\", \"text\": \"The reviews and ratings have been successfully added or updated for the product with ID '12345'.\"}\n    ],\n    \"function_call\": {\n        \"function_name\": \"add_or_update_product_reviews_and_ratings\",\n        \"parameters\": {\n            \"product_id\": \"12345\",\n            \"reviews\": [\n                {\"review_id\": \"1\", \"rating\": 4, \"comment\": \"Great product!\"},\n                {\"review_id\": \"2\", \"rating\": 5, \"comment\": \"Excellent quality!\"}\n            ]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "add_or_update_product_reviews_and_ratings",
            "description": "Adds or updates product reviews and ratings.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "description": "The ID of the product."
                    },
                    "reviews": {
                        "type": "array",
                        "description": "A list of dictionaries containing review details. Each dictionary should have 'review_id', 'rating', and 'comment' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "review_id": {
                                    "type": "string"
                                },
                                "rating": {
                                    "type": "integer"
                                },
                                "comment": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "review_id",
                                "rating",
                                "comment"
                            ]
                        }
                    }
                },
                "required": [
                    "product_id",
                    "reviews"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string",
                        "description": "The ID of the product."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you add or update the reviews and ratings for a product?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help with that. Please provide the product ID and the reviews."
            },
            {
                "role": "user",
                "text": "The product ID is '12345' and here are the reviews: [{'review_id': '1', 'rating': 4, 'comment': 'Great product!'}, {'review_id': '2', 'rating': 5, 'comment': 'Excellent quality!'}]"
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the information. I will add or update the reviews and ratings for the product with ID '12345'."
            },
            {
                "role": "assistant",
                "text": "The reviews and ratings have been successfully added or updated for the product with ID '12345'."
            }
        ],
        "function_call": {
            "function_name": "add_or_update_product_reviews_and_ratings",
            "parameters": {
                "product_id": "12345",
                "reviews": [
                    {
                        "review_id": "1",
                        "rating": 4,
                        "comment": "Great product!"
                    },
                    {
                        "review_id": "2",
                        "rating": 5,
                        "comment": "Excellent quality!"
                    }
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def add_or_update_product_reviews_and_ratings(\\n    product_id: str,\\n    reviews: List[Dict[str, Union[str, int, float]]],\\n) -> Dict[str, Union[str, int, float]]:\\n    \"\"\"\\n    Adds or updates product reviews and ratings.\\n\\n    Parameters:\\n        product_id (str): The ID of the product.\\n        reviews (List[Dict[str, Union[str, int, float]]]): A list of dictionaries containing review details.\\n                                                           Each dictionary should have \\'review_id\\', \\'rating\\', and \\'comment\\' keys.\\n\\n    Returns:\\n        Dict[str, Union[str, int, float]]: A dictionary with \\'product_id\\' as a key and the product ID as a value.\\n    \"\"\"', 'function_description': {'name': 'add_or_update_product_reviews_and_ratings', 'description': 'Adds or updates product reviews and ratings.', 'parameters': {'type': 'object', 'properties': {'product_id': {'type': 'string', 'description': 'The ID of the product.'}, 'reviews': {'type': 'array', 'description': \"A list of dictionaries containing review details. Each dictionary should have 'review_id', 'rating', and 'comment' keys.\", 'items': {'type': 'object', 'properties': {'review_id': {'type': 'string'}, 'rating': {'type': 'integer'}, 'comment': {'type': 'string'}}, 'required': ['review_id', 'rating', 'comment']}}}, 'required': ['product_id', 'reviews']}, 'returns': {'type': 'object', 'properties': {'product_id': {'type': 'string', 'description': 'The ID of the product.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-17",
    "description": {
        "function_snippet": "def manage_customer_wishlist(\n    customer_id: int,\n    product_id: int,\n    action: str,\n) -> None:\n    \"\"\"\n    Manages the customer wishlist functionality.\n\n    Parameters:\n        customer_id (int): The ID of the customer.\n        product_id (int): The ID of the product.\n        action (str): The action to perform on the wishlist (e.g. \"add\", \"remove\").\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "manage_customer_wishlist",
            "description": "Manages the customer wishlist functionality.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "description": "The ID of the customer."
                    },
                    "product_id": {
                        "type": "integer",
                        "description": "The ID of the product."
                    },
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the wishlist (e.g. \"add\", \"remove\")."
                    }
                },
                "required": [
                    "customer_id",
                    "product_id",
                    "action"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {}
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"manage_customer_wishlist\",\n        \"description\": \"Manages the customer wishlist functionality.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"customer_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the customer.\"\n                },\n                \"product_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the product.\"\n                },\n                \"action\": {\n                    \"type\": \"string\",\n                    \"description\": \"The action to perform on the wishlist (e.g. 'add', 'remove').\"\n                }\n            },\n            \"required\": [\"customer_id\", \"product_id\", \"action\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {}\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me manage my wishlist?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with your customer ID, product ID, and the action you would like to perform (e.g. 'add', 'remove').\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My customer ID is 12345, product ID is 6789, and I want to add it to my wishlist.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will add the product with ID 6789 to your wishlist.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"manage_customer_wishlist\",\n        \"parameters\": {\n            \"customer_id\": 12345,\n            \"product_id\": 6789,\n            \"action\": \"add\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "manage_customer_wishlist",
            "description": "Manages the customer wishlist functionality.",
            "parameters": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer",
                        "description": "The ID of the customer."
                    },
                    "product_id": {
                        "type": "integer",
                        "description": "The ID of the product."
                    },
                    "action": {
                        "type": "string",
                        "description": "The action to perform on the wishlist (e.g. 'add', 'remove')."
                    }
                },
                "required": [
                    "customer_id",
                    "product_id",
                    "action"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {}
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me manage my wishlist?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with your customer ID, product ID, and the action you would like to perform (e.g. 'add', 'remove')."
            },
            {
                "role": "user",
                "text": "My customer ID is 12345, product ID is 6789, and I want to add it to my wishlist."
            },
            {
                "role": "assistant",
                "text": "Alright, I will add the product with ID 6789 to your wishlist."
            }
        ],
        "function_call": {
            "function_name": "manage_customer_wishlist",
            "parameters": {
                "customer_id": 12345,
                "product_id": 6789,
                "action": "add"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def manage_customer_wishlist(\\n    customer_id: int,\\n    product_id: int,\\n    action: str,\\n) -> None:\\n    \"\"\"\\n    Manages the customer wishlist functionality.\\n\\n    Parameters:\\n        customer_id (int): The ID of the customer.\\n        product_id (int): The ID of the product.\\n        action (str): The action to perform on the wishlist (e.g. \"add\", \"remove\").\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'manage_customer_wishlist', 'description': 'Manages the customer wishlist functionality.', 'parameters': {'type': 'object', 'properties': {'customer_id': {'type': 'integer', 'description': 'The ID of the customer.'}, 'product_id': {'type': 'integer', 'description': 'The ID of the product.'}, 'action': {'type': 'string', 'description': 'The action to perform on the wishlist (e.g. \"add\", \"remove\").'}}, 'required': ['customer_id', 'product_id', 'action']}, 'returns': {'type': 'object', 'properties': {}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-18",
    "description": {
        "function_snippet": "def set_staff_roles_and_permissions(\n    staff_id: str,\n    roles: List[str],\n    permissions: List[str],\n) -> bool:\n    \"\"\"\n    Sets and manages staff roles and permissions.\n\n    Parameters:\n        staff_id (str): The unique identifier of the staff member.\n        roles (List[str]): A list of roles to assign to the staff member.\n        permissions (List[str]): A list of permissions to assign to the staff member.\n\n    Returns:\n        bool: True if the staff roles and permissions are set and managed successfully, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "set_staff_roles_and_permissions",
            "description": "Sets and manages staff roles and permissions.",
            "parameters": {
                "type": "object",
                "properties": {
                    "staff_id": {
                        "type": "string",
                        "description": "The unique identifier of the staff member."
                    },
                    "roles": {
                        "type": "array",
                        "description": "A list of roles to assign to the staff member.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "description": "A list of permissions to assign to the staff member.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "staff_id",
                    "roles",
                    "permissions"
                ]
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"set_staff_roles_and_permissions\",\n        \"description\": \"Sets and manages staff roles and permissions.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"staff_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The unique identifier of the staff member.\"\n                },\n                \"roles\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of roles to assign to the staff member.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"permissions\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of permissions to assign to the staff member.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"staff_id\", \"roles\", \"permissions\"]\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you set the roles and permissions for staff member with ID '12345'?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the roles and permissions you want to assign.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The roles are ['admin', 'manager'] and the permissions are ['read', 'write'].\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it. I will set the roles and permissions for the staff member with ID '12345' as requested.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"set_staff_roles_and_permissions\",\n        \"parameters\": {\n            \"staff_id\": \"12345\",\n            \"roles\": [\"admin\", \"manager\"],\n            \"permissions\": [\"read\", \"write\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "set_staff_roles_and_permissions",
            "description": "Sets and manages staff roles and permissions.",
            "parameters": {
                "type": "object",
                "properties": {
                    "staff_id": {
                        "type": "string",
                        "description": "The unique identifier of the staff member."
                    },
                    "roles": {
                        "type": "array",
                        "description": "A list of roles to assign to the staff member.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "description": "A list of permissions to assign to the staff member.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "staff_id",
                    "roles",
                    "permissions"
                ]
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you set the roles and permissions for staff member with ID '12345'?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the roles and permissions you want to assign."
            },
            {
                "role": "user",
                "text": "The roles are ['admin', 'manager'] and the permissions are ['read', 'write']."
            },
            {
                "role": "assistant",
                "text": "Got it. I will set the roles and permissions for the staff member with ID '12345' as requested."
            }
        ],
        "function_call": {
            "function_name": "set_staff_roles_and_permissions",
            "parameters": {
                "staff_id": "12345",
                "roles": [
                    "admin",
                    "manager"
                ],
                "permissions": [
                    "read",
                    "write"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def set_staff_roles_and_permissions(\\n    staff_id: str,\\n    roles: List[str],\\n    permissions: List[str],\\n) -> bool:\\n    \"\"\"\\n    Sets and manages staff roles and permissions.\\n\\n    Parameters:\\n        staff_id (str): The unique identifier of the staff member.\\n        roles (List[str]): A list of roles to assign to the staff member.\\n        permissions (List[str]): A list of permissions to assign to the staff member.\\n\\n    Returns:\\n        bool: True if the staff roles and permissions are set and managed successfully, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'set_staff_roles_and_permissions', 'description': 'Sets and manages staff roles and permissions.', 'parameters': {'type': 'object', 'properties': {'staff_id': {'type': 'string', 'description': 'The unique identifier of the staff member.'}, 'roles': {'type': 'array', 'description': 'A list of roles to assign to the staff member.', 'items': {'type': 'string'}}, 'permissions': {'type': 'array', 'description': 'A list of permissions to assign to the staff member.', 'items': {'type': 'string'}}}, 'required': ['staff_id', 'roles', 'permissions']}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-19",
    "description": {
        "function_snippet": "def handle_returns_and_refunds(\norder_id: str,\nreturn_reason: str,\nrefund_amount: float,\nreturn_address: str\n) -> Dict[str, str]:\n    \"\"\"\n    Handles returns and refunds for orders.\n\n    Parameters:\n        order_id (str): The unique identifier of the order.\n        return_reason (str): The reason for returning the order.\n        refund_amount (float): The amount to be refunded to the customer.\n        return_address (str): The address where the customer will return the order.\n\n    Returns:\n        Dict[str, str]: A dictionary with 'status' as a key and the status of the return/refund process as a value.\n    \"\"\"",
        "function_description": {
            "name": "handle_returns_and_refunds",
            "description": "Handles returns and refunds for orders.",
            "parameters": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "type": "string",
                        "description": "The unique identifier of the order."
                    },
                    "return_reason": {
                        "type": "string",
                        "description": "The reason for returning the order."
                    },
                    "refund_amount": {
                        "type": "float",
                        "description": "The amount to be refunded to the customer."
                    },
                    "return_address": {
                        "type": "string",
                        "description": "The address where the customer will return the order."
                    }
                },
                "required": [
                    "order_id",
                    "return_reason",
                    "refund_amount",
                    "return_address"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the return/refund process."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"handle_returns_and_refunds\",\n        \"description\": \"Handles returns and refunds for orders.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"order_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The unique identifier of the order.\"\n                },\n                \"return_reason\": {\n                    \"type\": \"string\",\n                    \"description\": \"The reason for returning the order.\"\n                },\n                \"refund_amount\": {\n                    \"type\": \"float\",\n                    \"description\": \"The amount to be refunded to the customer.\"\n                },\n                \"return_address\": {\n                    \"type\": \"string\",\n                    \"description\": \"The address where the customer will return the order.\"\n                }\n            },\n            \"required\": [\"order_id\", \"return_reason\", \"refund_amount\", \"return_address\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"status\": {\n                    \"type\": \"string\",\n                    \"description\": \"The status of the return/refund process.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, I need to return an item. Can you help me with that?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I can assist you with returns and refunds. Please provide me with the order ID.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have the order ID '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you. Could you please let me know the reason for returning the order?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I'm returning the order because it arrived damaged.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"I'm sorry to hear that. Can you also provide the refund amount?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The refund amount should be $50.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Lastly, please provide the return address.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The return address is 123 Main Street, Anytown, USA.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing all the necessary information. I will now handle the returns and refunds process for your order.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"handle_returns_and_refunds\",\n        \"parameters\": {\n            \"order_id\": \"12345\",\n            \"return_reason\": \"The order arrived damaged\",\n            \"refund_amount\": 50.0,\n            \"return_address\": \"123 Main Street, Anytown, USA\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "handle_returns_and_refunds",
            "description": "Handles returns and refunds for orders.",
            "parameters": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "type": "string",
                        "description": "The unique identifier of the order."
                    },
                    "return_reason": {
                        "type": "string",
                        "description": "The reason for returning the order."
                    },
                    "refund_amount": {
                        "type": "float",
                        "description": "The amount to be refunded to the customer."
                    },
                    "return_address": {
                        "type": "string",
                        "description": "The address where the customer will return the order."
                    }
                },
                "required": [
                    "order_id",
                    "return_reason",
                    "refund_amount",
                    "return_address"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The status of the return/refund process."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, I need to return an item. Can you help me with that?"
            },
            {
                "role": "assistant",
                "text": "Of course! I can assist you with returns and refunds. Please provide me with the order ID."
            },
            {
                "role": "user",
                "text": "I have the order ID '12345'."
            },
            {
                "role": "assistant",
                "text": "Thank you. Could you please let me know the reason for returning the order?"
            },
            {
                "role": "user",
                "text": "I'm returning the order because it arrived damaged."
            },
            {
                "role": "assistant",
                "text": "I'm sorry to hear that. Can you also provide the refund amount?"
            },
            {
                "role": "user",
                "text": "The refund amount should be $50."
            },
            {
                "role": "assistant",
                "text": "Lastly, please provide the return address."
            },
            {
                "role": "user",
                "text": "The return address is 123 Main Street, Anytown, USA."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing all the necessary information. I will now handle the returns and refunds process for your order."
            }
        ],
        "function_call": {
            "function_name": "handle_returns_and_refunds",
            "parameters": {
                "order_id": "12345",
                "return_reason": "The order arrived damaged",
                "refund_amount": 50.0,
                "return_address": "123 Main Street, Anytown, USA"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def handle_returns_and_refunds(\\norder_id: str,\\nreturn_reason: str,\\nrefund_amount: float,\\nreturn_address: str\\n) -> Dict[str, str]:\\n    \"\"\"\\n    Handles returns and refunds for orders.\\n\\n    Parameters:\\n        order_id (str): The unique identifier of the order.\\n        return_reason (str): The reason for returning the order.\\n        refund_amount (float): The amount to be refunded to the customer.\\n        return_address (str): The address where the customer will return the order.\\n\\n    Returns:\\n        Dict[str, str]: A dictionary with \\'status\\' as a key and the status of the return/refund process as a value.\\n    \"\"\"', 'function_description': {'name': 'handle_returns_and_refunds', 'description': 'Handles returns and refunds for orders.', 'parameters': {'type': 'object', 'properties': {'order_id': {'type': 'string', 'description': 'The unique identifier of the order.'}, 'return_reason': {'type': 'string', 'description': 'The reason for returning the order.'}, 'refund_amount': {'type': 'float', 'description': 'The amount to be refunded to the customer.'}, 'return_address': {'type': 'string', 'description': 'The address where the customer will return the order.'}}, 'required': ['order_id', 'return_reason', 'refund_amount', 'return_address']}, 'returns': {'type': 'object', 'properties': {'status': {'type': 'string', 'description': 'The status of the return/refund process.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-20",
    "description": {
        "function_snippet": "def integrate_payment_gateways(\n    gateways: List[str],\n) -> List[str]:\n    \"\"\"\n    Integrate third-party payment gateways or update existing ones.\n\n    Parameters:\n        gateways (List[str]): A list of payment gateways to integrate or update.\n\n    Returns:\n        List[str]: A list of successfully integrated or updated payment gateways.\n    \"\"\"\n",
        "function_description": {
            "name": "integrate_payment_gateways",
            "description": "Integrate third-party payment gateways or update existing ones.",
            "parameters": {
                "type": "object",
                "properties": {
                    "gateways": {
                        "type": "array",
                        "description": "A list of payment gateways to integrate or update.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "gateways"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of successfully integrated or updated payment gateways."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"integrate_payment_gateways\",\n        \"description\": \"Integrate third-party payment gateways or update existing ones.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"gateways\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of payment gateways to integrate or update.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"gateways\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"description\": \"A list of successfully integrated or updated payment gateways.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me integrate some payment gateways?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with the list of payment gateways you want to integrate or update.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want to integrate PayPal, Stripe, and Braintree.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Noted. I will integrate or update PayPal, Stripe, and Braintree payment gateways for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"integrate_payment_gateways\",\n        \"parameters\": {\n            \"gateways\": [\"PayPal\", \"Stripe\", \"Braintree\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "integrate_payment_gateways",
            "description": "Integrate third-party payment gateways or update existing ones.",
            "parameters": {
                "type": "object",
                "properties": {
                    "gateways": {
                        "type": "array",
                        "description": "A list of payment gateways to integrate or update.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "gateways"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of successfully integrated or updated payment gateways."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me integrate some payment gateways?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with the list of payment gateways you want to integrate or update."
            },
            {
                "role": "user",
                "text": "I want to integrate PayPal, Stripe, and Braintree."
            },
            {
                "role": "assistant",
                "text": "Noted. I will integrate or update PayPal, Stripe, and Braintree payment gateways for you."
            }
        ],
        "function_call": {
            "function_name": "integrate_payment_gateways",
            "parameters": {
                "gateways": [
                    "PayPal",
                    "Stripe",
                    "Braintree"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def integrate_payment_gateways(\\n    gateways: List[str],\\n) -> List[str]:\\n    \"\"\"\\n    Integrate third-party payment gateways or update existing ones.\\n\\n    Parameters:\\n        gateways (List[str]): A list of payment gateways to integrate or update.\\n\\n    Returns:\\n        List[str]: A list of successfully integrated or updated payment gateways.\\n    \"\"\"\\n', 'function_description': {'name': 'integrate_payment_gateways', 'description': 'Integrate third-party payment gateways or update existing ones.', 'parameters': {'type': 'object', 'properties': {'gateways': {'type': 'array', 'description': 'A list of payment gateways to integrate or update.', 'items': {'type': 'string'}}}, 'required': ['gateways']}, 'returns': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of successfully integrated or updated payment gateways.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-21",
    "description": {
        "function_snippet": "def schedule_flash_sales(\nstart_date: str,\nend_date: str,\ndiscount_percentage: float,\n) -> None:\n    \"\"\"\n    Schedule and manage flash sales or special events.\n\n    Parameters:\n        start_date (str): The start date of the flash sale in YYYY-MM-DD format.\n        end_date (str): The end date of the flash sale in YYYY-MM-DD format.\n        discount_percentage (float): The percentage discount for the flash sale.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "schedule_flash_sales",
            "description": "Schedule and manage flash sales or special events.",
            "parameters": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "type": "string",
                        "description": "The start date of the flash sale in YYYY-MM-DD format."
                    },
                    "end_date": {
                        "type": "string",
                        "description": "The end date of the flash sale in YYYY-MM-DD format."
                    },
                    "discount_percentage": {
                        "type": "float",
                        "description": "The percentage discount for the flash sale."
                    }
                },
                "required": [
                    "start_date",
                    "end_date",
                    "discount_percentage"
                ]
            },
            "returns": {
                "type": "null"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"schedule_flash_sales\",\n        \"description\": \"Schedule and manage flash sales or special events.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"start_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The start date of the flash sale in YYYY-MM-DD format.\"\n                },\n                \"end_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The end date of the flash sale in YYYY-MM-DD format.\"\n                },\n                \"discount_percentage\": {\n                    \"type\": \"float\",\n                    \"description\": \"The percentage discount for the flash sale.\"\n                }\n            },\n            \"required\": [\"start_date\", \"end_date\", \"discount_percentage\"]\n        },\n        \"returns\": {\n            \"type\": \"null\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me schedule a flash sale?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the start date, end date, and discount percentage for the flash sale.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The start date is '2022-01-01', the end date is '2022-01-07', and the discount percentage is 20%.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it! I will schedule the flash sale from '2022-01-01' to '2022-01-07' with a 20% discount.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"schedule_flash_sales\",\n        \"parameters\": {\n            \"start_date\": \"2022-01-01\",\n            \"end_date\": \"2022-01-07\",\n            \"discount_percentage\": 0.2\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "schedule_flash_sales",
            "description": "Schedule and manage flash sales or special events.",
            "parameters": {
                "type": "object",
                "properties": {
                    "start_date": {
                        "type": "string",
                        "description": "The start date of the flash sale in YYYY-MM-DD format."
                    },
                    "end_date": {
                        "type": "string",
                        "description": "The end date of the flash sale in YYYY-MM-DD format."
                    },
                    "discount_percentage": {
                        "type": "float",
                        "description": "The percentage discount for the flash sale."
                    }
                },
                "required": [
                    "start_date",
                    "end_date",
                    "discount_percentage"
                ]
            },
            "returns": {
                "type": "null"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me schedule a flash sale?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the start date, end date, and discount percentage for the flash sale."
            },
            {
                "role": "user",
                "text": "The start date is '2022-01-01', the end date is '2022-01-07', and the discount percentage is 20%."
            },
            {
                "role": "assistant",
                "text": "Got it! I will schedule the flash sale from '2022-01-01' to '2022-01-07' with a 20% discount."
            }
        ],
        "function_call": {
            "function_name": "schedule_flash_sales",
            "parameters": {
                "start_date": "2022-01-01",
                "end_date": "2022-01-07",
                "discount_percentage": 0.2
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def schedule_flash_sales(\\nstart_date: str,\\nend_date: str,\\ndiscount_percentage: float,\\n) -> None:\\n    \"\"\"\\n    Schedule and manage flash sales or special events.\\n\\n    Parameters:\\n        start_date (str): The start date of the flash sale in YYYY-MM-DD format.\\n        end_date (str): The end date of the flash sale in YYYY-MM-DD format.\\n        discount_percentage (float): The percentage discount for the flash sale.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'schedule_flash_sales', 'description': 'Schedule and manage flash sales or special events.', 'parameters': {'type': 'object', 'properties': {'start_date': {'type': 'string', 'description': 'The start date of the flash sale in YYYY-MM-DD format.'}, 'end_date': {'type': 'string', 'description': 'The end date of the flash sale in YYYY-MM-DD format.'}, 'discount_percentage': {'type': 'float', 'description': 'The percentage discount for the flash sale.'}}, 'required': ['start_date', 'end_date', 'discount_percentage']}, 'returns': {'type': 'null'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-22",
    "description": {
        "function_snippet": "def setup_subscription_products(\n    product_name: str,\n    price: float,\n    description: str,\n    duration: int,\n) -> Dict[str, Any]:\n    \"\"\"\n    Set up and manage subscription-based products.\n\n    Parameters:\n        product_name (str): The name of the product.\n        price (float): The price of the product.\n        description (str): The description of the product.\n        duration (int): The duration of the subscription in months.\n\n    Returns:\n        Dict[str, Any]: A dictionary with information about the product.\n    \"\"\"",
        "function_description": {
            "name": "setup_subscription_products",
            "description": "Set up and manage subscription-based products.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string",
                        "description": "The name of the product."
                    },
                    "price": {
                        "type": "float",
                        "description": "The price of the product."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the product."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the subscription in months."
                    }
                },
                "required": [
                    "product_name",
                    "price",
                    "description",
                    "duration"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "product_info": {
                        "type": "object",
                        "description": "A dictionary with information about the product.",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "price": {
                                "type": "float"
                            },
                            "description": {
                                "type": "string"
                            },
                            "duration": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "name",
                            "price",
                            "description",
                            "duration"
                        ]
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"setup_subscription_products\",\n        \"description\": \"Set up and manage subscription-based products.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product_name\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the product.\"\n                },\n                \"price\": {\n                    \"type\": \"float\",\n                    \"description\": \"The price of the product.\"\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The description of the product.\"\n                },\n                \"duration\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The duration of the subscription in months.\"\n                }\n            },\n            \"required\": [\"product_name\", \"price\", \"description\", \"duration\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product_info\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary with information about the product.\",\n                    \"properties\": {\n                        \"name\": {\"type\": \"string\"},\n                        \"price\": {\"type\": \"float\"},\n                        \"description\": {\"type\": \"string\"},\n                        \"duration\": {\"type\": \"integer\"}\n                    },\n                    \"required\": [\"name\", \"price\", \"description\", \"duration\"]\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me set up a subscription-based product?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! I can assist you with that. Can you provide me with the details of the product you want to set up?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure, I want to set up a product named 'Premium Membership' with a price of $10.99 per month. The product offers exclusive features and benefits to subscribers.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it! How long is the duration of the subscription?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The duration of the subscription is 12 months.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the details. I will now proceed to set up the subscription-based product.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"setup_subscription_products\",\n        \"parameters\": {\n            \"product_name\": \"Premium Membership\",\n            \"price\": 10.99,\n            \"description\": \"The product offers exclusive features and benefits to subscribers.\",\n            \"duration\": 12\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "setup_subscription_products",
            "description": "Set up and manage subscription-based products.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string",
                        "description": "The name of the product."
                    },
                    "price": {
                        "type": "float",
                        "description": "The price of the product."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the product."
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the subscription in months."
                    }
                },
                "required": [
                    "product_name",
                    "price",
                    "description",
                    "duration"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "product_info": {
                        "type": "object",
                        "description": "A dictionary with information about the product.",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "price": {
                                "type": "float"
                            },
                            "description": {
                                "type": "string"
                            },
                            "duration": {
                                "type": "integer"
                            }
                        },
                        "required": [
                            "name",
                            "price",
                            "description",
                            "duration"
                        ]
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me set up a subscription-based product?"
            },
            {
                "role": "assistant",
                "text": "Of course! I can assist you with that. Can you provide me with the details of the product you want to set up?"
            },
            {
                "role": "user",
                "text": "Sure, I want to set up a product named 'Premium Membership' with a price of $10.99 per month. The product offers exclusive features and benefits to subscribers."
            },
            {
                "role": "assistant",
                "text": "Got it! How long is the duration of the subscription?"
            },
            {
                "role": "user",
                "text": "The duration of the subscription is 12 months."
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the details. I will now proceed to set up the subscription-based product."
            }
        ],
        "function_call": {
            "function_name": "setup_subscription_products",
            "parameters": {
                "product_name": "Premium Membership",
                "price": 10.99,
                "description": "The product offers exclusive features and benefits to subscribers.",
                "duration": 12
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def setup_subscription_products(\\n    product_name: str,\\n    price: float,\\n    description: str,\\n    duration: int,\\n) -> Dict[str, Any]:\\n    \"\"\"\\n    Set up and manage subscription-based products.\\n\\n    Parameters:\\n        product_name (str): The name of the product.\\n        price (float): The price of the product.\\n        description (str): The description of the product.\\n        duration (int): The duration of the subscription in months.\\n\\n    Returns:\\n        Dict[str, Any]: A dictionary with information about the product.\\n    \"\"\"', 'function_description': {'name': 'setup_subscription_products', 'description': 'Set up and manage subscription-based products.', 'parameters': {'type': 'object', 'properties': {'product_name': {'type': 'string', 'description': 'The name of the product.'}, 'price': {'type': 'float', 'description': 'The price of the product.'}, 'description': {'type': 'string', 'description': 'The description of the product.'}, 'duration': {'type': 'integer', 'description': 'The duration of the subscription in months.'}}, 'required': ['product_name', 'price', 'description', 'duration']}, 'returns': {'type': 'object', 'properties': {'product_info': {'type': 'object', 'description': 'A dictionary with information about the product.', 'properties': {'name': {'type': 'string'}, 'price': {'type': 'float'}, 'description': {'type': 'string'}, 'duration': {'type': 'integer'}}, 'required': ['name', 'price', 'description', 'duration']}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-23",
    "description": {
        "function_snippet": "def send_abandoned_cart_emails(\n    cart_items: List[Dict[str, str]],\n    customer_email: str,\n    email_subject: str,\n    email_body: str,\n) -> None:\n    \"\"\"\n    Sends automated emails for abandoned cart recovery.\n\n    Parameters:\n        cart_items (List[Dict[str, str]]): A list of dictionaries containing cart item details.\n                                           Each dictionary should have 'product_name' and 'price' keys.\n        customer_email (str): The customer's email address.\n        email_subject (str): The subject of the email.\n        email_body (str): The body of the email.\n\n    Returns:\n        None\n    \"\"\"\n\n",
        "function_description": {
            "name": "send_abandoned_cart_emails",
            "description": "Sends automated emails for abandoned cart recovery.",
            "parameters": {
                "type": "object",
                "properties": {
                    "cart_items": {
                        "type": "array",
                        "description": "A list of dictionaries containing cart item details. Each dictionary should have 'product_name' and 'price' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "product_name": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "product_name",
                                "price"
                            ]
                        }
                    },
                    "customer_email": {
                        "type": "string",
                        "description": "The customer's email address."
                    },
                    "email_subject": {
                        "type": "string",
                        "description": "The subject of the email."
                    },
                    "email_body": {
                        "type": "string",
                        "description": "The body of the email."
                    }
                },
                "required": [
                    "cart_items",
                    "customer_email",
                    "email_subject",
                    "email_body"
                ]
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"send_abandoned_cart_emails\",\n        \"description\": \"Sends automated emails for abandoned cart recovery.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"cart_items\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of dictionaries containing cart item details. Each dictionary should have 'product_name' and 'price' keys.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"product_name\": {\"type\": \"string\"},\n                            \"price\": {\"type\": \"string\"}\n                        },\n                        \"required\": [\"product_name\", \"price\"]\n                    }\n                },\n                \"customer_email\": {\n                    \"type\": \"string\",\n                    \"description\": \"The customer's email address.\"\n                },\n                \"email_subject\": {\n                    \"type\": \"string\",\n                    \"description\": \"The subject of the email.\"\n                },\n                \"email_body\": {\n                    \"type\": \"string\",\n                    \"description\": \"The body of the email.\"\n                }\n            },\n            \"required\": [\"cart_items\", \"customer_email\", \"email_subject\", \"email_body\"]\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you send automated emails for abandoned cart recovery?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the following information: cart items, customer email, email subject, and email body.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have a list of cart items, the customer's email is 'example@example.com', the email subject is 'Abandoned Cart Recovery', and the email body is 'Please complete your purchase!'\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you for providing the information. I will now send the automated emails for abandoned cart recovery.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"send_abandoned_cart_emails\",\n        \"parameters\": {\n            \"cart_items\": [\n                {\n                    \"product_name\": \"Product A\",\n                    \"price\": \"$10.00\"\n                },\n                {\n                    \"product_name\": \"Product B\",\n                    \"price\": \"$20.00\"\n                }\n            ],\n            \"customer_email\": \"example@example.com\",\n            \"email_subject\": \"Abandoned Cart Recovery\",\n            \"email_body\": \"Please complete your purchase!\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "send_abandoned_cart_emails",
            "description": "Sends automated emails for abandoned cart recovery.",
            "parameters": {
                "type": "object",
                "properties": {
                    "cart_items": {
                        "type": "array",
                        "description": "A list of dictionaries containing cart item details. Each dictionary should have 'product_name' and 'price' keys.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "product_name": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "product_name",
                                "price"
                            ]
                        }
                    },
                    "customer_email": {
                        "type": "string",
                        "description": "The customer's email address."
                    },
                    "email_subject": {
                        "type": "string",
                        "description": "The subject of the email."
                    },
                    "email_body": {
                        "type": "string",
                        "description": "The body of the email."
                    }
                },
                "required": [
                    "cart_items",
                    "customer_email",
                    "email_subject",
                    "email_body"
                ]
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you send automated emails for abandoned cart recovery?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the following information: cart items, customer email, email subject, and email body."
            },
            {
                "role": "user",
                "text": "I have a list of cart items, the customer's email is 'example@example.com', the email subject is 'Abandoned Cart Recovery', and the email body is 'Please complete your purchase!'"
            },
            {
                "role": "assistant",
                "text": "Thank you for providing the information. I will now send the automated emails for abandoned cart recovery."
            }
        ],
        "function_call": {
            "function_name": "send_abandoned_cart_emails",
            "parameters": {
                "cart_items": [
                    {
                        "product_name": "Product A",
                        "price": "$10.00"
                    },
                    {
                        "product_name": "Product B",
                        "price": "$20.00"
                    }
                ],
                "customer_email": "example@example.com",
                "email_subject": "Abandoned Cart Recovery",
                "email_body": "Please complete your purchase!"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def send_abandoned_cart_emails(\\n    cart_items: List[Dict[str, str]],\\n    customer_email: str,\\n    email_subject: str,\\n    email_body: str,\\n) -> None:\\n    \"\"\"\\n    Sends automated emails for abandoned cart recovery.\\n\\n    Parameters:\\n        cart_items (List[Dict[str, str]]): A list of dictionaries containing cart item details.\\n                                           Each dictionary should have \\'product_name\\' and \\'price\\' keys.\\n        customer_email (str): The customer\\'s email address.\\n        email_subject (str): The subject of the email.\\n        email_body (str): The body of the email.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n\\n', 'function_description': {'name': 'send_abandoned_cart_emails', 'description': 'Sends automated emails for abandoned cart recovery.', 'parameters': {'type': 'object', 'properties': {'cart_items': {'type': 'array', 'description': \"A list of dictionaries containing cart item details. Each dictionary should have 'product_name' and 'price' keys.\", 'items': {'type': 'object', 'properties': {'product_name': {'type': 'string'}, 'price': {'type': 'string'}}, 'required': ['product_name', 'price']}}, 'customer_email': {'type': 'string', 'description': \"The customer's email address.\"}, 'email_subject': {'type': 'string', 'description': 'The subject of the email.'}, 'email_body': {'type': 'string', 'description': 'The body of the email.'}}, 'required': ['cart_items', 'customer_email', 'email_subject', 'email_body']}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-24",
    "description": {
        "function_snippet": "def integrate_with_social_media(\n    product: str,\n    platform: str,\n    listing: Dict[str, str],\n    advertising: bool,\n) -> None:\n    \"\"\"\n    Integrates with social media platforms for product listing and advertising.\n\n    Parameters:\n        product (str): The name of the product.\n        platform (str): The social media platform to integrate with.\n        listing (Dict[str, str]): A dictionary containing the product listing details.\n                                  Each key represents a detail (e.g., 'title', 'description', 'price').\n        advertising (bool): Whether to advertise the product on the social media platform.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "integrate_with_social_media",
            "description": "Integrates with social media platforms for product listing and advertising.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "string",
                        "description": "The name of the product."
                    },
                    "platform": {
                        "type": "string",
                        "description": "The social media platform to integrate with."
                    },
                    "listing": {
                        "type": "object",
                        "description": "A dictionary containing the product listing details. Each key represents a detail (e.g., 'title', 'description', 'price').",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "price": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "title",
                            "description",
                            "price"
                        ]
                    },
                    "advertising": {
                        "type": "boolean",
                        "description": "Whether to advertise the product on the social media platform."
                    }
                },
                "required": [
                    "product",
                    "platform",
                    "listing",
                    "advertising"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"integrate_with_social_media\",\n        \"description\": \"Integrates with social media platforms for product listing and advertising.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"product\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the product.\"\n                },\n                \"platform\": {\n                    \"type\": \"string\",\n                    \"description\": \"The social media platform to integrate with.\"\n                },\n                \"listing\": {\n                    \"type\": \"object\",\n                    \"description\": \"A dictionary containing the product listing details. Each key represents a detail (e.g., 'title', 'description', 'price').\",\n                    \"properties\": {\n                        \"title\": {\"type\": \"string\"},\n                        \"description\": {\"type\": \"string\"},\n                        \"price\": {\"type\": \"string\"}\n                    },\n                    \"required\": [\"title\", \"description\", \"price\"]\n                },\n                \"advertising\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Whether to advertise the product on the social media platform.\"\n                }\n            },\n            \"required\": [\"product\", \"platform\", \"listing\", \"advertising\"]\n        },\n        \"returns\": {\"type\": \"none\"}\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me integrate my product with social media?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Which social media platform would you like to integrate your product with?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want to integrate it with Facebook.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Please provide the details of your product listing, including the title, description, and price.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The title is 'Product A', the description is 'This is a great product', and the price is '$99.99'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Would you like to advertise your product on Facebook?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, please advertise it.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great! I will integrate your product with Facebook and advertise it.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"integrate_with_social_media\",\n        \"parameters\": {\n            \"product\": \"Product A\",\n            \"platform\": \"Facebook\",\n            \"listing\": {\n                \"title\": \"Product A\",\n                \"description\": \"This is a great product\",\n                \"price\": \"$99.99\"\n            },\n            \"advertising\": true\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "integrate_with_social_media",
            "description": "Integrates with social media platforms for product listing and advertising.",
            "parameters": {
                "type": "object",
                "properties": {
                    "product": {
                        "type": "string",
                        "description": "The name of the product."
                    },
                    "platform": {
                        "type": "string",
                        "description": "The social media platform to integrate with."
                    },
                    "listing": {
                        "type": "object",
                        "description": "A dictionary containing the product listing details. Each key represents a detail (e.g., 'title', 'description', 'price').",
                        "properties": {
                            "title": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "price": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "title",
                            "description",
                            "price"
                        ]
                    },
                    "advertising": {
                        "type": "boolean",
                        "description": "Whether to advertise the product on the social media platform."
                    }
                },
                "required": [
                    "product",
                    "platform",
                    "listing",
                    "advertising"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me integrate my product with social media?"
            },
            {
                "role": "assistant",
                "text": "Of course! Which social media platform would you like to integrate your product with?"
            },
            {
                "role": "user",
                "text": "I want to integrate it with Facebook."
            },
            {
                "role": "assistant",
                "text": "Please provide the details of your product listing, including the title, description, and price."
            },
            {
                "role": "user",
                "text": "The title is 'Product A', the description is 'This is a great product', and the price is '$99.99'."
            },
            {
                "role": "assistant",
                "text": "Would you like to advertise your product on Facebook?"
            },
            {
                "role": "user",
                "text": "Yes, please advertise it."
            },
            {
                "role": "assistant",
                "text": "Great! I will integrate your product with Facebook and advertise it."
            }
        ],
        "function_call": {
            "function_name": "integrate_with_social_media",
            "parameters": {
                "product": "Product A",
                "platform": "Facebook",
                "listing": {
                    "title": "Product A",
                    "description": "This is a great product",
                    "price": "$99.99"
                },
                "advertising": true
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def integrate_with_social_media(\\n    product: str,\\n    platform: str,\\n    listing: Dict[str, str],\\n    advertising: bool,\\n) -> None:\\n    \"\"\"\\n    Integrates with social media platforms for product listing and advertising.\\n\\n    Parameters:\\n        product (str): The name of the product.\\n        platform (str): The social media platform to integrate with.\\n        listing (Dict[str, str]): A dictionary containing the product listing details.\\n                                  Each key represents a detail (e.g., \\'title\\', \\'description\\', \\'price\\').\\n        advertising (bool): Whether to advertise the product on the social media platform.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'integrate_with_social_media', 'description': 'Integrates with social media platforms for product listing and advertising.', 'parameters': {'type': 'object', 'properties': {'product': {'type': 'string', 'description': 'The name of the product.'}, 'platform': {'type': 'string', 'description': 'The social media platform to integrate with.'}, 'listing': {'type': 'object', 'description': \"A dictionary containing the product listing details. Each key represents a detail (e.g., 'title', 'description', 'price').\", 'properties': {'title': {'type': 'string'}, 'description': {'type': 'string'}, 'price': {'type': 'string'}}, 'required': ['title', 'description', 'price']}, 'advertising': {'type': 'boolean', 'description': 'Whether to advertise the product on the social media platform.'}}, 'required': ['product', 'platform', 'listing', 'advertising']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-25",
    "description": {
        "function_snippet": "def manage_seo_settings(meta_description: str, url_structure: str,) -> None:",
        "function_description": {
            "name": "manage_seo_settings",
            "description": "Manage SEO settings including meta descriptions and URL structures.",
            "parameters": {
                "type": "object",
                "properties": {
                    "meta_description": {
                        "type": "string",
                        "description": "The meta description for the website."
                    },
                    "url_structure": {
                        "type": "string",
                        "description": "The desired URL structure for the website."
                    }
                },
                "required": [
                    "meta_description",
                    "url_structure"
                ]
            },
            "returns": {
                "type": "null"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"manage_seo_settings\",\n        \"description\": \"Manage SEO settings including meta descriptions and URL structures.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"meta_description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The meta description for the website.\"\n                },\n                \"url_structure\": {\n                    \"type\": \"string\",\n                    \"description\": \"The desired URL structure for the website.\"\n                }\n            },\n            \"required\": [\n                \"meta_description\",\n                \"url_structure\"\n            ]\n        },\n        \"returns\": {\n            \"type\": \"null\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me manage the SEO settings for my website?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the meta description and the desired URL structure.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The meta description should be 'This is the meta description' and the URL structure should be '/category/post-title'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it. I will manage the SEO settings with the provided meta description and URL structure.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"manage_seo_settings\",\n        \"parameters\": {\n            \"meta_description\": \"This is the meta description\",\n            \"url_structure\": \"/category/post-title\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "manage_seo_settings",
            "description": "Manage SEO settings including meta descriptions and URL structures.",
            "parameters": {
                "type": "object",
                "properties": {
                    "meta_description": {
                        "type": "string",
                        "description": "The meta description for the website."
                    },
                    "url_structure": {
                        "type": "string",
                        "description": "The desired URL structure for the website."
                    }
                },
                "required": [
                    "meta_description",
                    "url_structure"
                ]
            },
            "returns": {
                "type": "null"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me manage the SEO settings for my website?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the meta description and the desired URL structure."
            },
            {
                "role": "user",
                "text": "The meta description should be 'This is the meta description' and the URL structure should be '/category/post-title'."
            },
            {
                "role": "assistant",
                "text": "Got it. I will manage the SEO settings with the provided meta description and URL structure."
            }
        ],
        "function_call": {
            "function_name": "manage_seo_settings",
            "parameters": {
                "meta_description": "This is the meta description",
                "url_structure": "/category/post-title"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def manage_seo_settings(meta_description: str, url_structure: str,) -> None:', 'function_description': {'name': 'manage_seo_settings', 'description': 'Manage SEO settings including meta descriptions and URL structures.', 'parameters': {'type': 'object', 'properties': {'meta_description': {'type': 'string', 'description': 'The meta description for the website.'}, 'url_structure': {'type': 'string', 'description': 'The desired URL structure for the website.'}}, 'required': ['meta_description', 'url_structure']}, 'returns': {'type': 'null'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "shopify-26",
    "description": {
        "function_snippet": "def run_manage_affiliate_programs() -> None:\n    \"\"\"\n    Runs and manages affiliate programs.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "run_manage_affiliate_programs",
            "description": "Runs and manages affiliate programs.",
            "parameters": {},
            "returns": {
                "type": "None",
                "description": "This function does not return any value."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"run_manage_affiliate_programs\",\n        \"description\": \"Runs and manages affiliate programs.\",\n        \"parameters\": {},\n        \"returns\": {\n            \"type\": \"None\",\n            \"description\": \"This function does not return any value.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you run and manage my affiliate programs?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Just give me the go-ahead.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Okay, please go ahead and run and manage my affiliate programs.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm running and managing your affiliate programs now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"run_manage_affiliate_programs\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "run_manage_affiliate_programs",
            "description": "Runs and manages affiliate programs.",
            "parameters": {},
            "returns": {
                "type": "None",
                "description": "This function does not return any value."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you run and manage my affiliate programs?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Just give me the go-ahead."
            },
            {
                "role": "user",
                "text": "Okay, please go ahead and run and manage my affiliate programs."
            },
            {
                "role": "assistant",
                "text": "Great, I'm running and managing your affiliate programs now."
            }
        ],
        "function_call": {
            "function_name": "run_manage_affiliate_programs",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def run_manage_affiliate_programs() -> None:\\n    \"\"\"\\n    Runs and manages affiliate programs.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'run_manage_affiliate_programs', 'description': 'Runs and manages affiliate programs.', 'parameters': {}, 'returns': {'type': 'None', 'description': 'This function does not return any value.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"example_function\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"example_function\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}

{
    "function_id": "twitter-1",
    "description": {
        "function_snippet": "def post_tweet(user_id: str, tweet: str) -> bool:\n    \"\"\"\n    Posts a tweet to a user's timeline.\n\n    Parameters:\n        user_id (str): The user's ID.\n        tweet (str): The content of the tweet.\n\n    Returns:\n        bool: True if the tweet was successfully posted, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "post_tweet",
            "description": "Posts a tweet to a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's ID."
                    },
                    "tweet": {
                        "type": "string",
                        "description": "The content of the tweet."
                    }
                },
                "required": [
                    "user_id",
                    "tweet"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the tweet was successfully posted, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"post_tweet\",\n        \"description\": \"Posts a tweet to a user's timeline.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The user's ID.\"\n                },\n                \"tweet\": {\n                    \"type\": \"string\",\n                    \"description\": \"The content of the tweet.\"\n                }\n            },\n            \"required\": [\"user_id\", \"tweet\"]\n        },\n        \"returns\": {\n            \"type\": \"bool\",\n            \"description\": \"True if the tweet was successfully posted, False otherwise.\"\n        }\n    },\n    \"user_prompt\": \"What is the user ID and the content of the tweet?\",\n    \"function_call\": {\n        \"name\": \"post_tweet\",\n        \"arguments\": {\n            \"user_id\": \"12345\",\n            \"tweet\": \"Hello world!\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "post_tweet",
            "description": "Posts a tweet to a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's ID."
                    },
                    "tweet": {
                        "type": "string",
                        "description": "The content of the tweet."
                    }
                },
                "required": [
                    "user_id",
                    "tweet"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the tweet was successfully posted, False otherwise."
            }
        },
        "user_prompt": "What is the user ID and the content of the tweet?",
        "function_call": {
            "name": "post_tweet",
            "arguments": {
                "user_id": "12345",
                "tweet": "Hello world!"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\nWrite a user prompt that would call this function, and the function call.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"user_prompt\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def post_tweet(user_id: str, tweet: str) -> bool:\\n    \"\"\"\\n    Posts a tweet to a user\\'s timeline.\\n\\n    Parameters:\\n        user_id (str): The user\\'s ID.\\n        tweet (str): The content of the tweet.\\n\\n    Returns:\\n        bool: True if the tweet was successfully posted, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'post_tweet', 'description': \"Posts a tweet to a user's timeline.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': \"The user's ID.\"}, 'tweet': {'type': 'string', 'description': 'The content of the tweet.'}}, 'required': ['user_id', 'tweet']}, 'returns': {'type': 'bool', 'description': 'True if the tweet was successfully posted, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n\"what is the weather going to be like in Glasgow, Scotland over the next 7 days\"\n",
        "FUNCTION_EXAMPLE": "\n{\n    \"name\": \"get_n_day_weather_forecast\",\n    \"description\": \"Get an N-day weather forecast\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"location\": {\n                \"type\": \"string\",\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\n            },\n            \"format\": {\n                \"type\": \"string\",\n                \"enum\": [\"celsius\", \"fahrenheit\"],\n                \"description\": \"The temperature unit to use. Infer this from the users location.\",\n            },\n            \"num_days\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of days to forecast\",\n            }\n        },\n        \"required\": [\"location\", \"format\", \"num_days\"]\n    },\n}\n",
        "CALL_EXAMPLE": "\n    {\n        \"name\": \"get_n_day_weather_forecast\",\n        \"arguments\": \"{\n  \"location\": \"Glasgow, Scotland\",\n  \"format\": \"celsius\",\n  \"num_days\": 5\n}\"\n    }\n"
    }
}
{
    "function_id": "twitter-1",
    "description": {
        "function_snippet": "def post_tweet(user_id: str, tweet: str) -> bool:\n    \"\"\"\n    Posts a tweet to a user's timeline.\n\n    Parameters:\n        user_id (str): The user's ID.\n        tweet (str): The content of the tweet.\n\n    Returns:\n        bool: True if the tweet was successfully posted, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "post_tweet",
            "description": "Posts a tweet to a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's ID."
                    },
                    "tweet": {
                        "type": "string",
                        "description": "The content of the tweet."
                    }
                },
                "required": [
                    "user_id",
                    "tweet"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the tweet was successfully posted, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"post_tweet\",\n        \"description\": \"Posts a tweet to a user's timeline.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The user's ID.\"\n                },\n                \"tweet\": {\n                    \"type\": \"string\",\n                    \"description\": \"The content of the tweet.\"\n                }\n            },\n            \"required\": [\"user_id\", \"tweet\"]\n        },\n        \"returns\": {\n            \"type\": \"bool\",\n            \"description\": \"True if the tweet was successfully posted, False otherwise.\"\n        }\n    },\n    \"user_prompt\": \"What is your user ID and what tweet would you like to post?\",\n    \"function_call\": {\n        \"name\": \"post_tweet\",\n        \"arguments\": {\n            \"user_id\": \"12345\",\n            \"tweet\": \"Hello, world!\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "post_tweet",
            "description": "Posts a tweet to a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's ID."
                    },
                    "tweet": {
                        "type": "string",
                        "description": "The content of the tweet."
                    }
                },
                "required": [
                    "user_id",
                    "tweet"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the tweet was successfully posted, False otherwise."
            }
        },
        "user_prompt": "What is your user ID and what tweet would you like to post?",
        "function_call": {
            "name": "post_tweet",
            "arguments": {
                "user_id": "12345",
                "tweet": "Hello, world!"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\nWrite a user prompt that would call this function, and the function call.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"user_prompt\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def post_tweet(user_id: str, tweet: str) -> bool:\\n    \"\"\"\\n    Posts a tweet to a user\\'s timeline.\\n\\n    Parameters:\\n        user_id (str): The user\\'s ID.\\n        tweet (str): The content of the tweet.\\n\\n    Returns:\\n        bool: True if the tweet was successfully posted, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'post_tweet', 'description': \"Posts a tweet to a user's timeline.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': \"The user's ID.\"}, 'tweet': {'type': 'string', 'description': 'The content of the tweet.'}}, 'required': ['user_id', 'tweet']}, 'returns': {'type': 'bool', 'description': 'True if the tweet was successfully posted, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n\"what is the weather going to be like in Glasgow, Scotland over the next 7 days\"\n",
        "FUNCTION_EXAMPLE": "\n{\n    \"name\": \"get_n_day_weather_forecast\",\n    \"description\": \"Get an N-day weather forecast\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"location\": {\n                \"type\": \"string\",\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\n            },\n            \"format\": {\n                \"type\": \"string\",\n                \"enum\": [\"celsius\", \"fahrenheit\"],\n                \"description\": \"The temperature unit to use. Infer this from the users location.\",\n            },\n            \"num_days\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of days to forecast\",\n            }\n        },\n        \"required\": [\"location\", \"format\", \"num_days\"]\n    },\n}\n",
        "CALL_EXAMPLE": "\n    {\n        \"name\": \"get_n_day_weather_forecast\",\n        \"arguments\": \"{\n  \"location\": \"Glasgow, Scotland\",\n  \"format\": \"celsius\",\n  \"num_days\": 5\n}\"\n    }\n"
    }
}
{
    "function_id": "twitter-2",
    "description": {
        "function_snippet": "def delete_tweet(user_id: str, tweet_id: str) -> None:\n    \"\"\"\n    Deletes a specific tweet from a user's timeline.\n\n    Parameters:\n        user_id (str): The ID of the user whose tweet to delete.\n        tweet_id (str): The ID of the tweet to delete.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "delete_tweet",
            "description": "Deletes a specific tweet from a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user whose tweet to delete."
                    },
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to delete."
                    }
                },
                "required": [
                    "user_id",
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"delete_tweet\",\n        \"description\": \"Deletes a specific tweet from a user's timeline.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user whose tweet to delete.\"\n                },\n                \"tweet_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the tweet to delete.\"\n                }\n            },\n            \"required\": [\"user_id\", \"tweet_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"user_prompt\": \"Please provide the user ID and tweet ID to delete a specific tweet:\",\n    \"function_call\": {\n        \"name\": \"delete_tweet\",\n        \"arguments\": {\n            \"user_id\": \"123456789\",\n            \"tweet_id\": \"987654321\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "delete_tweet",
            "description": "Deletes a specific tweet from a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user whose tweet to delete."
                    },
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to delete."
                    }
                },
                "required": [
                    "user_id",
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "user_prompt": "Please provide the user ID and tweet ID to delete a specific tweet:",
        "function_call": {
            "name": "delete_tweet",
            "arguments": {
                "user_id": "123456789",
                "tweet_id": "987654321"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\nWrite a user prompt that would call this function, and the function call.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"user_prompt\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def delete_tweet(user_id: str, tweet_id: str) -> None:\\n    \"\"\"\\n    Deletes a specific tweet from a user\\'s timeline.\\n\\n    Parameters:\\n        user_id (str): The ID of the user whose tweet to delete.\\n        tweet_id (str): The ID of the tweet to delete.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'delete_tweet', 'description': \"Deletes a specific tweet from a user's timeline.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user whose tweet to delete.'}, 'tweet_id': {'type': 'string', 'description': 'The ID of the tweet to delete.'}}, 'required': ['user_id', 'tweet_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n\"what is the weather going to be like in Glasgow, Scotland over the next 7 days\"\n",
        "FUNCTION_EXAMPLE": "\n{\n    \"name\": \"get_n_day_weather_forecast\",\n    \"description\": \"Get an N-day weather forecast\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"location\": {\n                \"type\": \"string\",\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\n            },\n            \"format\": {\n                \"type\": \"string\",\n                \"enum\": [\"celsius\", \"fahrenheit\"],\n                \"description\": \"The temperature unit to use. Infer this from the users location.\",\n            },\n            \"num_days\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of days to forecast\",\n            }\n        },\n        \"required\": [\"location\", \"format\", \"num_days\"]\n    },\n}\n",
        "CALL_EXAMPLE": "\n    {\n        \"name\": \"get_n_day_weather_forecast\",\n        \"arguments\": \"{\n  \"location\": \"Glasgow, Scotland\",\n  \"format\": \"celsius\",\n  \"num_days\": 5\n}\"\n    }\n"
    }
}
{
    "function_id": "twitter-3",
    "description": {
        "function_snippet": "def retrieve_user_timeline(user_id: str) -> List[Dict[str, str]]:\n    \"\"\"\n    Retrieves a user's timeline, including tweets, retweets, and replies.\n\n    Parameters:\n        user_id (str): The ID of the user.\n\n    Returns:\n        List[Dict[str, str]]: A list of dictionaries representing each tweet\n                              in the user's timeline. Each dictionary should have\n                              'tweet_id', 'text', 'author', and 'date' keys.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_user_timeline",
            "description": "Retrieves a user's timeline, including tweets, retweets, and replies.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_user_timeline\",\n        \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user.\"\n                }\n            },\n            \"required\": [\"user_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\"type\": \"string\"},\n                \"text\": {\"type\": \"string\"},\n                \"author\": {\"type\": \"string\"},\n                \"date\": {\"type\": \"string\"}\n            }\n        }\n    },\n    \"user_prompt\": \"Retrieve the timeline for user with ID '12345'\",\n    \"function_call\": {\n        \"name\": \"retrieve_user_timeline\",\n        \"arguments\": \"user_id='12345'\"\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_user_timeline",
            "description": "Retrieves a user's timeline, including tweets, retweets, and replies.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                }
            }
        },
        "user_prompt": "Retrieve the timeline for user with ID '12345'",
        "function_call": {
            "name": "retrieve_user_timeline",
            "arguments": "user_id='12345'"
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\nWrite a user prompt that would call this function, and the function call.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"user_prompt\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_user_timeline(user_id: str) -> List[Dict[str, str]]:\\n    \"\"\"\\n    Retrieves a user\\'s timeline, including tweets, retweets, and replies.\\n\\n    Parameters:\\n        user_id (str): The ID of the user.\\n\\n    Returns:\\n        List[Dict[str, str]]: A list of dictionaries representing each tweet\\n                              in the user\\'s timeline. Each dictionary should have\\n                              \\'tweet_id\\', \\'text\\', \\'author\\', and \\'date\\' keys.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_user_timeline', 'description': \"Retrieves a user's timeline, including tweets, retweets, and replies.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user.'}}, 'required': ['user_id']}, 'returns': {'type': 'object', 'properties': {'tweet_id': {'type': 'string'}, 'text': {'type': 'string'}, 'author': {'type': 'string'}, 'date': {'type': 'string'}}}}}",
        "PROMPT_EXAMPLE": "\n\"what is the weather going to be like in Glasgow, Scotland over the next 7 days\"\n",
        "FUNCTION_EXAMPLE": "\n{\n    \"name\": \"get_n_day_weather_forecast\",\n    \"description\": \"Get an N-day weather forecast\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"location\": {\n                \"type\": \"string\",\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\n            },\n            \"format\": {\n                \"type\": \"string\",\n                \"enum\": [\"celsius\", \"fahrenheit\"],\n                \"description\": \"The temperature unit to use. Infer this from the users location.\",\n            },\n            \"num_days\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of days to forecast\",\n            }\n        },\n        \"required\": [\"location\", \"format\", \"num_days\"]\n    },\n}\n",
        "CALL_EXAMPLE": "\n    {\n        \"name\": \"get_n_day_weather_forecast\",\n        \"arguments\": \"{\n  \"location\": \"Glasgow, Scotland\",\n  \"format\": \"celsius\",\n  \"num_days\": 5\n}\"\n    }\n"
    }
}
{
    "function_id": "twitter-1",
    "description": {
        "function_snippet": "def post_tweet(user_id: str, tweet: str) -> bool:\n    \"\"\"\n    Posts a tweet to a user's timeline.\n\n    Parameters:\n        user_id (str): The user's ID.\n        tweet (str): The content of the tweet.\n\n    Returns:\n        bool: True if the tweet was successfully posted, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "post_tweet",
            "description": "Posts a tweet to a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's ID."
                    },
                    "tweet": {
                        "type": "string",
                        "description": "The content of the tweet."
                    }
                },
                "required": [
                    "user_id",
                    "tweet"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the tweet was successfully posted, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"post_tweet\",\n        \"description\": \"Posts a tweet to a user's timeline.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The user's ID.\"\n                },\n                \"tweet\": {\n                    \"type\": \"string\",\n                    \"description\": \"The content of the tweet.\"\n                }\n            },\n            \"required\": [\"user_id\", \"tweet\"]\n        },\n        \"returns\": {\n            \"type\": \"bool\",\n            \"description\": \"True if the tweet was successfully posted, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"user\": \"Hey, can you help me post a tweet on Twitter?\"\n        },\n        {\n            \"assistant\": \"Of course! Please provide me with your Twitter user ID and the content of the tweet.\"\n        },\n        {\n            \"user\": \"My Twitter user ID is '12345' and the tweet content is 'Hello world!'\"\n        },\n        {\n            \"assistant\": \"Alright, I will post the tweet on your timeline now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"post_tweet\",\n        \"parameters\": {\n            \"user_id\": \"12345\",\n            \"tweet\": \"Hello world!\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "post_tweet",
            "description": "Posts a tweet to a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's ID."
                    },
                    "tweet": {
                        "type": "string",
                        "description": "The content of the tweet."
                    }
                },
                "required": [
                    "user_id",
                    "tweet"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the tweet was successfully posted, False otherwise."
            }
        },
        "conversation": [
            {
                "user": "Hey, can you help me post a tweet on Twitter?"
            },
            {
                "assistant": "Of course! Please provide me with your Twitter user ID and the content of the tweet."
            },
            {
                "user": "My Twitter user ID is '12345' and the tweet content is 'Hello world!'"
            },
            {
                "assistant": "Alright, I will post the tweet on your timeline now."
            }
        ],
        "function_call": {
            "function_name": "post_tweet",
            "parameters": {
                "user_id": "12345",
                "tweet": "Hello world!"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def post_tweet(user_id: str, tweet: str) -> bool:\\n    \"\"\"\\n    Posts a tweet to a user\\'s timeline.\\n\\n    Parameters:\\n        user_id (str): The user\\'s ID.\\n        tweet (str): The content of the tweet.\\n\\n    Returns:\\n        bool: True if the tweet was successfully posted, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'post_tweet', 'description': \"Posts a tweet to a user's timeline.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': \"The user's ID.\"}, 'tweet': {'type': 'string', 'description': 'The content of the tweet.'}}, 'required': ['user_id', 'tweet']}, 'returns': {'type': 'bool', 'description': 'True if the tweet was successfully posted, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"user\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"assistant\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"user\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"assistant\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-2",
    "description": {
        "function_snippet": "def delete_tweet(user_id: str, tweet_id: str) -> None:\n    \"\"\"\n    Deletes a specific tweet from a user's timeline.\n\n    Parameters:\n        user_id (str): The ID of the user whose tweet to delete.\n        tweet_id (str): The ID of the tweet to delete.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "delete_tweet",
            "description": "Deletes a specific tweet from a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user whose tweet to delete."
                    },
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to delete."
                    }
                },
                "required": [
                    "user_id",
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"delete_tweet\",\n        \"description\": \"Deletes a specific tweet from a user's timeline.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user whose tweet to delete.\"\n                },\n                \"tweet_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the tweet to delete.\"\n                }\n            },\n            \"required\": [\"user_id\", \"tweet_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"user\": \"Hey, can you delete a tweet for me?\"\n        },\n        {\n            \"assistant\": \"Of course! Please provide me with your user ID and the ID of the tweet you want to delete.\"\n        },\n        {\n            \"user\": \"My user ID is '12345' and the tweet ID is '67890'.\"\n        },\n        {\n            \"assistant\": \"Alright, I will delete the tweet with ID '67890' from your timeline.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"delete_tweet\",\n        \"parameters\": {\n            \"user_id\": \"12345\",\n            \"tweet_id\": \"67890\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "delete_tweet",
            "description": "Deletes a specific tweet from a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user whose tweet to delete."
                    },
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to delete."
                    }
                },
                "required": [
                    "user_id",
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "user": "Hey, can you delete a tweet for me?"
            },
            {
                "assistant": "Of course! Please provide me with your user ID and the ID of the tweet you want to delete."
            },
            {
                "user": "My user ID is '12345' and the tweet ID is '67890'."
            },
            {
                "assistant": "Alright, I will delete the tweet with ID '67890' from your timeline."
            }
        ],
        "function_call": {
            "function_name": "delete_tweet",
            "parameters": {
                "user_id": "12345",
                "tweet_id": "67890"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def delete_tweet(user_id: str, tweet_id: str) -> None:\\n    \"\"\"\\n    Deletes a specific tweet from a user\\'s timeline.\\n\\n    Parameters:\\n        user_id (str): The ID of the user whose tweet to delete.\\n        tweet_id (str): The ID of the tweet to delete.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'delete_tweet', 'description': \"Deletes a specific tweet from a user's timeline.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user whose tweet to delete.'}, 'tweet_id': {'type': 'string', 'description': 'The ID of the tweet to delete.'}}, 'required': ['user_id', 'tweet_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"user\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"assistant\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"user\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"assistant\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-3",
    "description": {
        "function_snippet": "def retrieve_user_timeline(user_id: str) -> List[Dict[str, str]]:\n    \"\"\"\n    Retrieves a user's timeline, including tweets, retweets, and replies.\n\n    Parameters:\n        user_id (str): The ID of the user.\n\n    Returns:\n        List[Dict[str, str]]: A list of dictionaries representing each tweet\n                              in the user's timeline. Each dictionary should have\n                              'tweet_id', 'text', 'author', and 'date' keys.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_user_timeline",
            "description": "Retrieves a user's timeline, including tweets, retweets, and replies.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_user_timeline\",\n        \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user.\"\n                }\n            },\n            \"required\": [\"user_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\"type\": \"string\"},\n                \"text\": {\"type\": \"string\"},\n                \"author\": {\"type\": \"string\"},\n                \"date\": {\"type\": \"string\"}\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"user\": \"Hey, can you show me my Twitter timeline?\"\n        },\n        {\n            \"assistant\": \"Sure, I can do that. May I know your Twitter user ID?\"\n        },\n        {\n            \"user\": \"Yes, my Twitter user ID is '13579'.\"\n        },\n        {\n            \"assistant\": \"Great, I'm retrieving your Twitter timeline now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_user_timeline\",\n        \"parameters\": {\n            \"user_id\": \"13579\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_user_timeline",
            "description": "Retrieves a user's timeline, including tweets, retweets, and replies.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                }
            }
        },
        "conversation": [
            {
                "user": "Hey, can you show me my Twitter timeline?"
            },
            {
                "assistant": "Sure, I can do that. May I know your Twitter user ID?"
            },
            {
                "user": "Yes, my Twitter user ID is '13579'."
            },
            {
                "assistant": "Great, I'm retrieving your Twitter timeline now."
            }
        ],
        "function_call": {
            "function_name": "retrieve_user_timeline",
            "parameters": {
                "user_id": "13579"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_user_timeline(user_id: str) -> List[Dict[str, str]]:\\n    \"\"\"\\n    Retrieves a user\\'s timeline, including tweets, retweets, and replies.\\n\\n    Parameters:\\n        user_id (str): The ID of the user.\\n\\n    Returns:\\n        List[Dict[str, str]]: A list of dictionaries representing each tweet\\n                              in the user\\'s timeline. Each dictionary should have\\n                              \\'tweet_id\\', \\'text\\', \\'author\\', and \\'date\\' keys.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_user_timeline', 'description': \"Retrieves a user's timeline, including tweets, retweets, and replies.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user.'}}, 'required': ['user_id']}, 'returns': {'type': 'object', 'properties': {'tweet_id': {'type': 'string'}, 'text': {'type': 'string'}, 'author': {'type': 'string'}, 'date': {'type': 'string'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"user\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"assistant\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"user\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"assistant\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-4",
    "description": {
        "function_snippet": "def retrieve_user_info(username: str) -> Dict[str, Any]:\n    \"\"\"\n    Retrieve information about a specific user based on their username.\n\n    Parameters:\n        username (str): The username of the user.\n\n    Returns:\n        Dict[str, Any]: A dictionary containing information about the user.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_user_info",
            "description": "Retrieve information about a specific user based on their username.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "information": {
                        "type": "any",
                        "description": "A dictionary containing information about the user."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_user_info\",\n        \"description\": \"Retrieve information about a specific user based on their username.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"The username of the user.\"\n                }\n            },\n            \"required\": [\"username\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"information\": {\n                    \"type\": \"any\",\n                    \"description\": \"A dictionary containing information about the user.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"user\": \"Hey, can you retrieve my user information?\"\n        },\n        {\n            \"assistant\": \"Sure, I can do that. Please provide me with your username.\"\n        },\n        {\n            \"user\": \"My username is 'JohnDoe'.\"\n        },\n        {\n            \"assistant\": \"Great, I'm retrieving your user information now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_user_info\",\n        \"parameters\": {\n            \"username\": \"JohnDoe\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_user_info",
            "description": "Retrieve information about a specific user based on their username.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "information": {
                        "type": "any",
                        "description": "A dictionary containing information about the user."
                    }
                }
            }
        },
        "conversation": [
            {
                "user": "Hey, can you retrieve my user information?"
            },
            {
                "assistant": "Sure, I can do that. Please provide me with your username."
            },
            {
                "user": "My username is 'JohnDoe'."
            },
            {
                "assistant": "Great, I'm retrieving your user information now."
            }
        ],
        "function_call": {
            "function_name": "retrieve_user_info",
            "parameters": {
                "username": "JohnDoe"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_user_info(username: str) -> Dict[str, Any]:\\n    \"\"\"\\n    Retrieve information about a specific user based on their username.\\n\\n    Parameters:\\n        username (str): The username of the user.\\n\\n    Returns:\\n        Dict[str, Any]: A dictionary containing information about the user.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_user_info', 'description': 'Retrieve information about a specific user based on their username.', 'parameters': {'type': 'object', 'properties': {'username': {'type': 'string', 'description': 'The username of the user.'}}, 'required': ['username']}, 'returns': {'type': 'object', 'properties': {'information': {'type': 'any', 'description': 'A dictionary containing information about the user.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"user\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"assistant\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"user\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"assistant\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-1",
    "description": {
        "function_snippet": "def post_tweet(user_id: str, tweet: str) -> bool:\n    \"\"\"\n    Posts a tweet to a user's timeline.\n\n    Parameters:\n        user_id (str): The user's ID.\n        tweet (str): The content of the tweet.\n\n    Returns:\n        bool: True if the tweet was successfully posted, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "post_tweet",
            "description": "Posts a tweet to a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's ID."
                    },
                    "tweet": {
                        "type": "string",
                        "description": "The content of the tweet."
                    }
                },
                "required": [
                    "user_id",
                    "tweet"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the tweet was successfully posted, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"post_tweet\",\n        \"description\": \"Posts a tweet to a user's timeline.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The user's ID.\"\n                },\n                \"tweet\": {\n                    \"type\": \"string\",\n                    \"description\": \"The content of the tweet.\"\n                }\n            },\n            \"required\": [\"user_id\", \"tweet\"]\n        },\n        \"returns\": {\n            \"type\": \"bool\",\n            \"description\": \"True if the tweet was successfully posted, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me post a tweet?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with your Twitter user ID and the content of the tweet you want to post.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My user ID is '12345' and the tweet says 'Hello World!'\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will now post the tweet to your timeline.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"post_tweet\",\n        \"parameters\": {\n            \"user_id\": \"12345\",\n            \"tweet\": \"Hello World!\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "post_tweet",
            "description": "Posts a tweet to a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The user's ID."
                    },
                    "tweet": {
                        "type": "string",
                        "description": "The content of the tweet."
                    }
                },
                "required": [
                    "user_id",
                    "tweet"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the tweet was successfully posted, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me post a tweet?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with your Twitter user ID and the content of the tweet you want to post."
            },
            {
                "role": "user",
                "text": "My user ID is '12345' and the tweet says 'Hello World!'"
            },
            {
                "role": "assistant",
                "text": "Alright, I will now post the tweet to your timeline."
            }
        ],
        "function_call": {
            "function_name": "post_tweet",
            "parameters": {
                "user_id": "12345",
                "tweet": "Hello World!"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def post_tweet(user_id: str, tweet: str) -> bool:\\n    \"\"\"\\n    Posts a tweet to a user\\'s timeline.\\n\\n    Parameters:\\n        user_id (str): The user\\'s ID.\\n        tweet (str): The content of the tweet.\\n\\n    Returns:\\n        bool: True if the tweet was successfully posted, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'post_tweet', 'description': \"Posts a tweet to a user's timeline.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': \"The user's ID.\"}, 'tweet': {'type': 'string', 'description': 'The content of the tweet.'}}, 'required': ['user_id', 'tweet']}, 'returns': {'type': 'bool', 'description': 'True if the tweet was successfully posted, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-2",
    "description": {
        "function_snippet": "def delete_tweet(user_id: str, tweet_id: str) -> None:\n    \"\"\"\n    Deletes a specific tweet from a user's timeline.\n\n    Parameters:\n        user_id (str): The ID of the user whose tweet to delete.\n        tweet_id (str): The ID of the tweet to delete.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "delete_tweet",
            "description": "Deletes a specific tweet from a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user whose tweet to delete."
                    },
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to delete."
                    }
                },
                "required": [
                    "user_id",
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"delete_tweet\",\n        \"description\": \"Deletes a specific tweet from a user's timeline.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user whose tweet to delete.\"\n                },\n                \"tweet_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the tweet to delete.\"\n                }\n            },\n            \"required\": [\"user_id\", \"tweet_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me delete a tweet from my Twitter timeline?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with your Twitter user ID and the ID of the tweet you want to delete.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"My Twitter user ID is '12345' and the tweet ID is '67890'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it! I will delete the specified tweet from your timeline.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"delete_tweet\",\n        \"parameters\": {\n            \"user_id\": \"12345\",\n            \"tweet_id\": \"67890\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "delete_tweet",
            "description": "Deletes a specific tweet from a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user whose tweet to delete."
                    },
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to delete."
                    }
                },
                "required": [
                    "user_id",
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me delete a tweet from my Twitter timeline?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with your Twitter user ID and the ID of the tweet you want to delete."
            },
            {
                "role": "user",
                "text": "My Twitter user ID is '12345' and the tweet ID is '67890'."
            },
            {
                "role": "assistant",
                "text": "Got it! I will delete the specified tweet from your timeline."
            }
        ],
        "function_call": {
            "function_name": "delete_tweet",
            "parameters": {
                "user_id": "12345",
                "tweet_id": "67890"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def delete_tweet(user_id: str, tweet_id: str) -> None:\\n    \"\"\"\\n    Deletes a specific tweet from a user\\'s timeline.\\n\\n    Parameters:\\n        user_id (str): The ID of the user whose tweet to delete.\\n        tweet_id (str): The ID of the tweet to delete.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'delete_tweet', 'description': \"Deletes a specific tweet from a user's timeline.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user whose tweet to delete.'}, 'tweet_id': {'type': 'string', 'description': 'The ID of the tweet to delete.'}}, 'required': ['user_id', 'tweet_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-3",
    "description": {
        "function_snippet": "def retrieve_user_timeline(user_id: str) -> List[Dict[str, str]]:\n    \"\"\"\n    Retrieves a user's timeline, including tweets, retweets, and replies.\n\n    Parameters:\n        user_id (str): The ID of the user.\n\n    Returns:\n        List[Dict[str, str]]: A list of dictionaries representing each tweet\n                              in the user's timeline. Each dictionary should have\n                              'tweet_id', 'text', 'author', and 'date' keys.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_user_timeline",
            "description": "Retrieves a user's timeline, including tweets, retweets, and replies.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_user_timeline\",\n        \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user.\"\n                }\n            },\n            \"required\": [\"user_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\"type\": \"string\"},\n                \"text\": {\"type\": \"string\"},\n                \"author\": {\"type\": \"string\"},\n                \"date\": {\"type\": \"string\"}\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you show me my Twitter timeline?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, my Twitter user ID is '13579'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_user_timeline\",\n        \"parameters\": {\n            \"user_id\": \"13579\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_user_timeline",
            "description": "Retrieves a user's timeline, including tweets, retweets, and replies.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you show me my Twitter timeline?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. May I know your Twitter user ID?"
            },
            {
                "role": "user",
                "text": "Yes, my Twitter user ID is '13579'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm retrieving your Twitter timeline now."
            }
        ],
        "function_call": {
            "function_name": "retrieve_user_timeline",
            "parameters": {
                "user_id": "13579"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_user_timeline(user_id: str) -> List[Dict[str, str]]:\\n    \"\"\"\\n    Retrieves a user\\'s timeline, including tweets, retweets, and replies.\\n\\n    Parameters:\\n        user_id (str): The ID of the user.\\n\\n    Returns:\\n        List[Dict[str, str]]: A list of dictionaries representing each tweet\\n                              in the user\\'s timeline. Each dictionary should have\\n                              \\'tweet_id\\', \\'text\\', \\'author\\', and \\'date\\' keys.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_user_timeline', 'description': \"Retrieves a user's timeline, including tweets, retweets, and replies.\", 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user.'}}, 'required': ['user_id']}, 'returns': {'type': 'object', 'properties': {'tweet_id': {'type': 'string'}, 'text': {'type': 'string'}, 'author': {'type': 'string'}, 'date': {'type': 'string'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-4",
    "description": {
        "function_snippet": "def retrieve_user_info(username: str) -> Dict[str, Any]:\n    \"\"\"\n    Retrieve information about a specific user based on their username.\n\n    Parameters:\n        username (str): The username of the user.\n\n    Returns:\n        Dict[str, Any]: A dictionary containing information about the user.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_user_info",
            "description": "Retrieve information about a specific user based on their username.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "information": {
                        "type": "any",
                        "description": "A dictionary containing information about the user."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_user_info\",\n        \"description\": \"Retrieve information about a specific user based on their username.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"The username of the user.\"\n                }\n            },\n            \"required\": [\"username\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"information\": {\n                    \"type\": \"any\",\n                    \"description\": \"A dictionary containing information about the user.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you retrieve my user information?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. May I know your username?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, my username is 'john_doe'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm retrieving your user information now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_user_info\",\n        \"parameters\": {\n            \"username\": \"john_doe\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_user_info",
            "description": "Retrieve information about a specific user based on their username.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "information": {
                        "type": "any",
                        "description": "A dictionary containing information about the user."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you retrieve my user information?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. May I know your username?"
            },
            {
                "role": "user",
                "text": "Yes, my username is 'john_doe'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm retrieving your user information now."
            }
        ],
        "function_call": {
            "function_name": "retrieve_user_info",
            "parameters": {
                "username": "john_doe"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_user_info(username: str) -> Dict[str, Any]:\\n    \"\"\"\\n    Retrieve information about a specific user based on their username.\\n\\n    Parameters:\\n        username (str): The username of the user.\\n\\n    Returns:\\n        Dict[str, Any]: A dictionary containing information about the user.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_user_info', 'description': 'Retrieve information about a specific user based on their username.', 'parameters': {'type': 'object', 'properties': {'username': {'type': 'string', 'description': 'The username of the user.'}}, 'required': ['username']}, 'returns': {'type': 'object', 'properties': {'information': {'type': 'any', 'description': 'A dictionary containing information about the user.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-5",
    "description": {
        "function_snippet": "def follow_user(username: str) -> bool:\n    \"\"\"\n    Follows a specific user.\n\n    Parameters:\n        username (str): The username of the user to follow.\n\n    Returns:\n        bool: True if the user was successfully followed, False otherwise.\n    \"\"\"\n    ",
        "function_description": {
            "name": "follow_user",
            "description": "Follows a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user to follow."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "True if the user was successfully followed, False otherwise."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"follow_user\",\n        \"description\": \"Follows a specific user.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"The username of the user to follow.\"\n                }\n            },\n            \"required\": [\"username\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"result\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"True if the user was successfully followed, False otherwise.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you please follow a user for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me the username of the user you want to follow.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The username is 'example_user'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will follow the user 'example_user' for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"follow_user\",\n        \"parameters\": {\n            \"username\": \"example_user\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "follow_user",
            "description": "Follows a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user to follow."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "boolean",
                        "description": "True if the user was successfully followed, False otherwise."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you please follow a user for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me the username of the user you want to follow."
            },
            {
                "role": "user",
                "text": "The username is 'example_user'."
            },
            {
                "role": "assistant",
                "text": "Alright, I will follow the user 'example_user' for you."
            }
        ],
        "function_call": {
            "function_name": "follow_user",
            "parameters": {
                "username": "example_user"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def follow_user(username: str) -> bool:\\n    \"\"\"\\n    Follows a specific user.\\n\\n    Parameters:\\n        username (str): The username of the user to follow.\\n\\n    Returns:\\n        bool: True if the user was successfully followed, False otherwise.\\n    \"\"\"\\n    ', 'function_description': {'name': 'follow_user', 'description': 'Follows a specific user.', 'parameters': {'type': 'object', 'properties': {'username': {'type': 'string', 'description': 'The username of the user to follow.'}}, 'required': ['username']}, 'returns': {'type': 'object', 'properties': {'result': {'type': 'boolean', 'description': 'True if the user was successfully followed, False otherwise.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-6",
    "description": {
        "function_snippet": "def unfollow_user(username: str) -> None:\n    \"\"\"\n    Unfollows a specific user.\n\n    Parameters:\n        username (str): The username of the user to unfollow.\n\n    Returns:\n        None\n    \"\"\"\n\n",
        "function_description": {
            "name": "unfollow_user",
            "description": "Unfollows a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user to unfollow."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {}
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"unfollow_user\",\n        \"description\": \"Unfollows a specific user.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"The username of the user to unfollow.\"\n                }\n            },\n            \"required\": [\"username\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {}\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me unfollow a user on Twitter?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with the username of the user you want to unfollow.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The username is 'john_doe'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will unfollow the user 'john_doe' for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"unfollow_user\",\n        \"parameters\": {\n            \"username\": \"john_doe\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "unfollow_user",
            "description": "Unfollows a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user to unfollow."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {}
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me unfollow a user on Twitter?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with the username of the user you want to unfollow."
            },
            {
                "role": "user",
                "text": "The username is 'john_doe'."
            },
            {
                "role": "assistant",
                "text": "Alright, I will unfollow the user 'john_doe' for you."
            }
        ],
        "function_call": {
            "function_name": "unfollow_user",
            "parameters": {
                "username": "john_doe"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def unfollow_user(username: str) -> None:\\n    \"\"\"\\n    Unfollows a specific user.\\n\\n    Parameters:\\n        username (str): The username of the user to unfollow.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n\\n', 'function_description': {'name': 'unfollow_user', 'description': 'Unfollows a specific user.', 'parameters': {'type': 'object', 'properties': {'username': {'type': 'string', 'description': 'The username of the user to unfollow.'}}, 'required': ['username']}, 'returns': {'type': 'object', 'properties': {}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-7",
    "description": {
        "function_snippet": "def like_tweet(tweet_id: str) -> None:\n    \"\"\"\n    Likes a specific tweet.\n\n    Parameters:\n        tweet_id (str): The ID of the tweet to like.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "like_tweet",
            "description": "Likes a specific tweet.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to like."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"like_tweet\",\n        \"description\": \"Likes a specific tweet.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the tweet to like.\"\n                }\n            },\n            \"required\": [\"tweet_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you like this tweet for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, please provide me with the ID of the tweet you want to like.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The ID of the tweet is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Okay, I will like the tweet with ID '12345' for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"like_tweet\",\n        \"parameters\": {\n            \"tweet_id\": \"12345\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "like_tweet",
            "description": "Likes a specific tweet.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to like."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you like this tweet for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, please provide me with the ID of the tweet you want to like."
            },
            {
                "role": "user",
                "text": "The ID of the tweet is '12345'."
            },
            {
                "role": "assistant",
                "text": "Okay, I will like the tweet with ID '12345' for you."
            }
        ],
        "function_call": {
            "function_name": "like_tweet",
            "parameters": {
                "tweet_id": "12345"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def like_tweet(tweet_id: str) -> None:\\n    \"\"\"\\n    Likes a specific tweet.\\n\\n    Parameters:\\n        tweet_id (str): The ID of the tweet to like.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'like_tweet', 'description': 'Likes a specific tweet.', 'parameters': {'type': 'object', 'properties': {'tweet_id': {'type': 'string', 'description': 'The ID of the tweet to like.'}}, 'required': ['tweet_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-8",
    "description": {
        "function_snippet": "def unlike_tweet(tweet_id: str) -> None:\n    \"\"\"\n    Unlike a specific tweet.\n\n    Parameters:\n        tweet_id (str): The ID of the tweet to unlike.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "unlike_tweet",
            "description": "Unlike a specific tweet.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to unlike."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"unlike_tweet\",\n        \"description\": \"Unlike a specific tweet.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the tweet to unlike.\"\n                }\n            },\n            \"required\": [\"tweet_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you help me unlike a tweet?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with the ID of the tweet you want to unlike.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The tweet ID is '123456789'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will unlike the tweet with ID '123456789'.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"unlike_tweet\",\n        \"parameters\": {\n            \"tweet_id\": \"123456789\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "unlike_tweet",
            "description": "Unlike a specific tweet.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to unlike."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you help me unlike a tweet?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with the ID of the tweet you want to unlike."
            },
            {
                "role": "user",
                "text": "The tweet ID is '123456789'."
            },
            {
                "role": "assistant",
                "text": "Alright, I will unlike the tweet with ID '123456789'."
            }
        ],
        "function_call": {
            "function_name": "unlike_tweet",
            "parameters": {
                "tweet_id": "123456789"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def unlike_tweet(tweet_id: str) -> None:\\n    \"\"\"\\n    Unlike a specific tweet.\\n\\n    Parameters:\\n        tweet_id (str): The ID of the tweet to unlike.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'unlike_tweet', 'description': 'Unlike a specific tweet.', 'parameters': {'type': 'object', 'properties': {'tweet_id': {'type': 'string', 'description': 'The ID of the tweet to unlike.'}}, 'required': ['tweet_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-9",
    "description": {
        "function_snippet": "def retweet_tweet(\n    tweet_id: str,\n) -> bool:\n    \"\"\"\n    Retweets a specific tweet.\n\n    Parameters:\n        tweet_id (str): The ID of the tweet to retweet.\n\n    Returns:\n        bool: True if the tweet was successfully retweeted, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "retweet_tweet",
            "description": "Retweets a specific tweet.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to retweet."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "boolean",
                        "description": "True if the tweet was successfully retweeted, False otherwise."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retweet_tweet\",\n        \"description\": \"Retweets a specific tweet.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the tweet to retweet.\"\n                }\n            },\n            \"required\": [\"tweet_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"value\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"True if the tweet was successfully retweeted, False otherwise.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you retweet a tweet for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the tweet ID.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The tweet ID is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will retweet the tweet with ID '12345'.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retweet_tweet\",\n        \"parameters\": {\n            \"tweet_id\": \"12345\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retweet_tweet",
            "description": "Retweets a specific tweet.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to retweet."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "boolean",
                        "description": "True if the tweet was successfully retweeted, False otherwise."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you retweet a tweet for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the tweet ID."
            },
            {
                "role": "user",
                "text": "The tweet ID is '12345'."
            },
            {
                "role": "assistant",
                "text": "Alright, I will retweet the tweet with ID '12345'."
            }
        ],
        "function_call": {
            "function_name": "retweet_tweet",
            "parameters": {
                "tweet_id": "12345"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retweet_tweet(\\n    tweet_id: str,\\n) -> bool:\\n    \"\"\"\\n    Retweets a specific tweet.\\n\\n    Parameters:\\n        tweet_id (str): The ID of the tweet to retweet.\\n\\n    Returns:\\n        bool: True if the tweet was successfully retweeted, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'retweet_tweet', 'description': 'Retweets a specific tweet.', 'parameters': {'type': 'object', 'properties': {'tweet_id': {'type': 'string', 'description': 'The ID of the tweet to retweet.'}}, 'required': ['tweet_id']}, 'returns': {'type': 'object', 'properties': {'value': {'type': 'boolean', 'description': 'True if the tweet was successfully retweeted, False otherwise.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-10",
    "description": {
        "function_snippet": "def undo_retweet(tweet_id: str) -> None:\n    \"\"\"\n    Undo a retweet.\n\n    Parameters:\n        tweet_id (str): The ID of the tweet to undo the retweet.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "undo_retweet",
            "description": "Undo a retweet.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to undo the retweet."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"undo_retweet\",\n        \"description\": \"Undo a retweet.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the tweet to undo the retweet.\"\n                }\n            },\n            \"required\": [\"tweet_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me undo a retweet?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the ID of the tweet you want to undo the retweet from.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The ID of the tweet is '123456789'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I'm undoing the retweet now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"undo_retweet\",\n        \"parameters\": {\n            \"tweet_id\": \"123456789\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "undo_retweet",
            "description": "Undo a retweet.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to undo the retweet."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me undo a retweet?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the ID of the tweet you want to undo the retweet from."
            },
            {
                "role": "user",
                "text": "The ID of the tweet is '123456789'."
            },
            {
                "role": "assistant",
                "text": "Alright, I'm undoing the retweet now."
            }
        ],
        "function_call": {
            "function_name": "undo_retweet",
            "parameters": {
                "tweet_id": "123456789"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def undo_retweet(tweet_id: str) -> None:\\n    \"\"\"\\n    Undo a retweet.\\n\\n    Parameters:\\n        tweet_id (str): The ID of the tweet to undo the retweet.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'undo_retweet', 'description': 'Undo a retweet.', 'parameters': {'type': 'object', 'properties': {'tweet_id': {'type': 'string', 'description': 'The ID of the tweet to undo the retweet.'}}, 'required': ['tweet_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-11",
    "description": {
        "function_snippet": "def send_direct_message(\n    recipient: str,\n    message: str,\n) -> None:\n    \"\"\"\n    Sends a direct message to a specific user.\n\n    Parameters:\n        recipient (str): The username or ID of the recipient.\n        message (str): The content of the message.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "send_direct_message",
            "description": "Sends a direct message to a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "recipient": {
                        "type": "string",
                        "description": "The username or ID of the recipient."
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the message."
                    }
                },
                "required": [
                    "recipient",
                    "message"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"send_direct_message\",\n        \"description\": \"Sends a direct message to a specific user.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recipient\": {\n                    \"type\": \"string\",\n                    \"description\": \"The username or ID of the recipient.\"\n                },\n                \"message\": {\n                    \"type\": \"string\",\n                    \"description\": \"The content of the message.\"\n                }\n            },\n            \"required\": [\"recipient\", \"message\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you send a direct message to a specific user?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, who is the recipient of the message?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The recipient is 'john_doe'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"What message would you like to send?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The message is 'Hello, how are you?'\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will send the direct message to 'john_doe' with the content 'Hello, how are you?'\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"send_direct_message\",\n        \"parameters\": {\n            \"recipient\": \"john_doe\",\n            \"message\": \"Hello, how are you?\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "send_direct_message",
            "description": "Sends a direct message to a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "recipient": {
                        "type": "string",
                        "description": "The username or ID of the recipient."
                    },
                    "message": {
                        "type": "string",
                        "description": "The content of the message."
                    }
                },
                "required": [
                    "recipient",
                    "message"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you send a direct message to a specific user?"
            },
            {
                "role": "assistant",
                "text": "Sure, who is the recipient of the message?"
            },
            {
                "role": "user",
                "text": "The recipient is 'john_doe'."
            },
            {
                "role": "assistant",
                "text": "What message would you like to send?"
            },
            {
                "role": "user",
                "text": "The message is 'Hello, how are you?'"
            },
            {
                "role": "assistant",
                "text": "Alright, I will send the direct message to 'john_doe' with the content 'Hello, how are you?'"
            }
        ],
        "function_call": {
            "function_name": "send_direct_message",
            "parameters": {
                "recipient": "john_doe",
                "message": "Hello, how are you?"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def send_direct_message(\\n    recipient: str,\\n    message: str,\\n) -> None:\\n    \"\"\"\\n    Sends a direct message to a specific user.\\n\\n    Parameters:\\n        recipient (str): The username or ID of the recipient.\\n        message (str): The content of the message.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'send_direct_message', 'description': 'Sends a direct message to a specific user.', 'parameters': {'type': 'object', 'properties': {'recipient': {'type': 'string', 'description': 'The username or ID of the recipient.'}, 'message': {'type': 'string', 'description': 'The content of the message.'}}, 'required': ['recipient', 'message']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-12",
    "description": {
        "function_snippet": "def delete_direct_message(\n    message_id: str,\n) -> bool:\n    \"\"\"\n    Deletes a sent direct message.\n\n    Parameters:\n        message_id (str): The ID of the direct message to delete.\n\n    Returns:\n        bool: True if the direct message was successfully deleted, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "delete_direct_message",
            "description": "Deletes a sent direct message.",
            "parameters": {
                "type": "object",
                "properties": {
                    "message_id": {
                        "type": "string",
                        "description": "The ID of the direct message to delete."
                    }
                },
                "required": [
                    "message_id"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the direct message was successfully deleted, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"delete_direct_message\",\n        \"description\": \"Deletes a sent direct message.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"message_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the direct message to delete.\"\n                }\n            },\n            \"required\": [\"message_id\"]\n        },\n        \"returns\": {\n            \"type\": \"boolean\",\n            \"description\": \"True if the direct message was successfully deleted, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me delete a direct message?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Of course! Please provide me with the ID of the direct message you want to delete.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The ID of the direct message is '9876543210'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will now proceed to delete the direct message with the ID '9876543210'.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"delete_direct_message\",\n        \"parameters\": {\n            \"message_id\": \"9876543210\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "delete_direct_message",
            "description": "Deletes a sent direct message.",
            "parameters": {
                "type": "object",
                "properties": {
                    "message_id": {
                        "type": "string",
                        "description": "The ID of the direct message to delete."
                    }
                },
                "required": [
                    "message_id"
                ]
            },
            "returns": {
                "type": "boolean",
                "description": "True if the direct message was successfully deleted, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me delete a direct message?"
            },
            {
                "role": "assistant",
                "text": "Of course! Please provide me with the ID of the direct message you want to delete."
            },
            {
                "role": "user",
                "text": "The ID of the direct message is '9876543210'."
            },
            {
                "role": "assistant",
                "text": "Alright, I will now proceed to delete the direct message with the ID '9876543210'."
            }
        ],
        "function_call": {
            "function_name": "delete_direct_message",
            "parameters": {
                "message_id": "9876543210"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def delete_direct_message(\\n    message_id: str,\\n) -> bool:\\n    \"\"\"\\n    Deletes a sent direct message.\\n\\n    Parameters:\\n        message_id (str): The ID of the direct message to delete.\\n\\n    Returns:\\n        bool: True if the direct message was successfully deleted, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'delete_direct_message', 'description': 'Deletes a sent direct message.', 'parameters': {'type': 'object', 'properties': {'message_id': {'type': 'string', 'description': 'The ID of the direct message to delete.'}}, 'required': ['message_id']}, 'returns': {'type': 'boolean', 'description': 'True if the direct message was successfully deleted, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-13",
    "description": {
        "function_snippet": "def retrieve_direct_messages(\n    user_id: str,\n) -> List[Dict[str, str]]:\n    \"\"\"\n    Retrieves a list of direct messages sent and received by a user.\n\n    Parameters:\n        user_id (str): The ID of the user.\n\n    Returns:\n        List[Dict[str, str]]: A list of dictionaries containing direct message details.\n                              Each dictionary should have 'sender' and 'message' keys.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_direct_messages",
            "description": "Retrieves a list of direct messages sent and received by a user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "sender": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "sender",
                        "message"
                    ]
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_direct_messages\",\n        \"description\": \"Retrieves a list of direct messages sent and received by a user.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user.\"\n                }\n            },\n            \"required\": [\"user_id\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"sender\": {\"type\": \"string\"},\n                    \"message\": {\"type\": \"string\"}\n                },\n                \"required\": [\"sender\", \"message\"]\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you show me my direct messages?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. May I know your user ID?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, my user ID is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm retrieving your direct messages now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_direct_messages\",\n        \"parameters\": {\n            \"user_id\": \"12345\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_direct_messages",
            "description": "Retrieves a list of direct messages sent and received by a user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "sender": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "sender",
                        "message"
                    ]
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you show me my direct messages?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. May I know your user ID?"
            },
            {
                "role": "user",
                "text": "Yes, my user ID is '12345'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm retrieving your direct messages now."
            }
        ],
        "function_call": {
            "function_name": "retrieve_direct_messages",
            "parameters": {
                "user_id": "12345"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_direct_messages(\\n    user_id: str,\\n) -> List[Dict[str, str]]:\\n    \"\"\"\\n    Retrieves a list of direct messages sent and received by a user.\\n\\n    Parameters:\\n        user_id (str): The ID of the user.\\n\\n    Returns:\\n        List[Dict[str, str]]: A list of dictionaries containing direct message details.\\n                              Each dictionary should have \\'sender\\' and \\'message\\' keys.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_direct_messages', 'description': 'Retrieves a list of direct messages sent and received by a user.', 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user.'}}, 'required': ['user_id']}, 'returns': {'type': 'array', 'items': {'type': 'object', 'properties': {'sender': {'type': 'string'}, 'message': {'type': 'string'}}, 'required': ['sender', 'message']}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-14",
    "description": {
        "function_snippet": "def retrieve_trending_topics(location: str) -> List[str]:\n    \"\"\"\n    Retrieves trending topics for a specific location.\n\n    Parameters:\n        location (str): The specific location to retrieve trending topics for.\n\n    Returns:\n        List[str]: A list of trending topics for the specified location.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_trending_topics",
            "description": "Retrieves trending topics for a specific location.",
            "parameters": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The specific location to retrieve trending topics for."
                    }
                },
                "required": [
                    "location"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "trending_topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of trending topics for the specified location."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_trending_topics\",\n        \"description\": \"Retrieves trending topics for a specific location.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"The specific location to retrieve trending topics for.\"\n                }\n            },\n            \"required\": [\"location\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"trending_topics\": {\n                    \"type\": \"array\",\n                    \"items\": {\"type\": \"string\"},\n                    \"description\": \"A list of trending topics for the specified location.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you show me the trending topics for New York City?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. May I know the specific location you want to retrieve trending topics for?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want to see the trending topics for New York City.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm retrieving the trending topics for New York City now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_trending_topics\",\n        \"parameters\": {\n            \"location\": \"New York City\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_trending_topics",
            "description": "Retrieves trending topics for a specific location.",
            "parameters": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The specific location to retrieve trending topics for."
                    }
                },
                "required": [
                    "location"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "trending_topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of trending topics for the specified location."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you show me the trending topics for New York City?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. May I know the specific location you want to retrieve trending topics for?"
            },
            {
                "role": "user",
                "text": "I want to see the trending topics for New York City."
            },
            {
                "role": "assistant",
                "text": "Great, I'm retrieving the trending topics for New York City now."
            }
        ],
        "function_call": {
            "function_name": "retrieve_trending_topics",
            "parameters": {
                "location": "New York City"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_trending_topics(location: str) -> List[str]:\\n    \"\"\"\\n    Retrieves trending topics for a specific location.\\n\\n    Parameters:\\n        location (str): The specific location to retrieve trending topics for.\\n\\n    Returns:\\n        List[str]: A list of trending topics for the specified location.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_trending_topics', 'description': 'Retrieves trending topics for a specific location.', 'parameters': {'type': 'object', 'properties': {'location': {'type': 'string', 'description': 'The specific location to retrieve trending topics for.'}}, 'required': ['location']}, 'returns': {'type': 'object', 'properties': {'trending_topics': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of trending topics for the specified location.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-15",
    "description": {
        "function_snippet": "def get_followers(user_id: int) -> List[str]:\n    \"\"\"\n    Retrieves a list of followers for a specific user.\n\n    Parameters:\n        user_id (int): The ID of the user.\n\n    Returns:\n        List[str]: A list of usernames of the followers.\n    \"\"\"",
        "function_description": {
            "name": "get_followers",
            "description": "Retrieves a list of followers for a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "followers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of usernames of the followers."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"get_followers\",\n        \"description\": \"Retrieves a list of followers for a specific user.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the user.\"\n                }\n            },\n            \"required\": [\"user_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"followers\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"A list of usernames of the followers.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you retrieve my followers on Twitter?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you please provide me with your Twitter user ID?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, my Twitter user ID is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm retrieving your followers now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"get_followers\",\n        \"parameters\": {\n            \"user_id\": 12345\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "get_followers",
            "description": "Retrieves a list of followers for a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "followers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of usernames of the followers."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you retrieve my followers on Twitter?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you please provide me with your Twitter user ID?"
            },
            {
                "role": "user",
                "text": "Yes, my Twitter user ID is '12345'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm retrieving your followers now."
            }
        ],
        "function_call": {
            "function_name": "get_followers",
            "parameters": {
                "user_id": 12345
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def get_followers(user_id: int) -> List[str]:\\n    \"\"\"\\n    Retrieves a list of followers for a specific user.\\n\\n    Parameters:\\n        user_id (int): The ID of the user.\\n\\n    Returns:\\n        List[str]: A list of usernames of the followers.\\n    \"\"\"', 'function_description': {'name': 'get_followers', 'description': 'Retrieves a list of followers for a specific user.', 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'integer', 'description': 'The ID of the user.'}}, 'required': ['user_id']}, 'returns': {'type': 'object', 'properties': {'followers': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of usernames of the followers.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-16",
    "description": {
        "function_snippet": "def get_following_accounts(user_id: int) -> List[str]:\n    \"\"\"\n    Retrieves a list of accounts that a specific user is following.\n\n    Parameters:\n        user_id (int): The ID of the user whose following accounts are to be retrieved.\n\n    Returns:\n        List[str]: A list of account names that the user is following.\n    \"\"\"\n    pass",
        "function_description": {
            "name": "get_following_accounts",
            "description": "Retrieves a list of accounts that a specific user is following.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "description": "The ID of the user whose following accounts are to be retrieved."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "list": {
                        "type": "string",
                        "description": "A list of account names that the user is following."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"get_following_accounts\",\n        \"description\": \"Retrieves a list of accounts that a specific user is following.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The ID of the user whose following accounts are to be retrieved.\"\n                }\n            },\n            \"required\": [\"user_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"list\": {\n                    \"type\": \"string\",\n                    \"description\": \"A list of account names that the user is following.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you show me the accounts that I am following?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. May I know your user ID?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, my user ID is 123456.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm retrieving the accounts you are following now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"get_following_accounts\",\n        \"parameters\": {\n            \"user_id\": 123456\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "get_following_accounts",
            "description": "Retrieves a list of accounts that a specific user is following.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "description": "The ID of the user whose following accounts are to be retrieved."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "list": {
                        "type": "string",
                        "description": "A list of account names that the user is following."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you show me the accounts that I am following?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. May I know your user ID?"
            },
            {
                "role": "user",
                "text": "Yes, my user ID is 123456."
            },
            {
                "role": "assistant",
                "text": "Great, I'm retrieving the accounts you are following now."
            }
        ],
        "function_call": {
            "function_name": "get_following_accounts",
            "parameters": {
                "user_id": 123456
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def get_following_accounts(user_id: int) -> List[str]:\\n    \"\"\"\\n    Retrieves a list of accounts that a specific user is following.\\n\\n    Parameters:\\n        user_id (int): The ID of the user whose following accounts are to be retrieved.\\n\\n    Returns:\\n        List[str]: A list of account names that the user is following.\\n    \"\"\"\\n    pass', 'function_description': {'name': 'get_following_accounts', 'description': 'Retrieves a list of accounts that a specific user is following.', 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'integer', 'description': 'The ID of the user whose following accounts are to be retrieved.'}}, 'required': ['user_id']}, 'returns': {'type': 'object', 'properties': {'list': {'type': 'string', 'description': 'A list of account names that the user is following.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-17",
    "description": {
        "function_snippet": "def search_tweets(\n    keywords: List[str],\n    hashtags: List[str],\n    users: List[str],\n) -> List[str]:\n    \"\"\"\n    Searches for tweets containing specific keywords, hashtags, or mentioning specific users.\n\n    Parameters:\n        keywords (List[str]): A list of keywords to search for in tweets.\n        hashtags (List[str]): A list of hashtags to search for in tweets.\n        users (List[str]): A list of usernames to search for in tweets.\n\n    Returns:\n        List[str]: A list of tweets matching the specified criteria.\n    \"\"\"\n",
        "function_description": {
            "name": "search_tweets",
            "description": "Searches for tweets containing specific keywords, hashtags, or mentioning specific users.",
            "parameters": {
                "type": "object",
                "properties": {
                    "keywords": {
                        "type": "array",
                        "description": "A list of keywords to search for in tweets.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hashtags": {
                        "type": "array",
                        "description": "A list of hashtags to search for in tweets.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "description": "A list of usernames to search for in tweets.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "keywords",
                    "hashtags",
                    "users"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of tweets matching the specified criteria."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"search_tweets\",\n        \"description\": \"Searches for tweets containing specific keywords, hashtags, or mentioning specific users.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"keywords\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of keywords to search for in tweets.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"hashtags\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of hashtags to search for in tweets.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"users\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of usernames to search for in tweets.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\n                \"keywords\",\n                \"hashtags\",\n                \"users\"\n            ]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"description\": \"A list of tweets matching the specified criteria.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you search for tweets containing the keyword 'python'?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Can you provide any hashtags or usernames to include in the search?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, please include the hashtag 'programming' and the username 'twitterdev'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm searching for tweets now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"search_tweets\",\n        \"parameters\": {\n            \"keywords\": [\"python\"],\n            \"hashtags\": [\"programming\"],\n            \"users\": [\"twitterdev\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "search_tweets",
            "description": "Searches for tweets containing specific keywords, hashtags, or mentioning specific users.",
            "parameters": {
                "type": "object",
                "properties": {
                    "keywords": {
                        "type": "array",
                        "description": "A list of keywords to search for in tweets.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hashtags": {
                        "type": "array",
                        "description": "A list of hashtags to search for in tweets.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "description": "A list of usernames to search for in tweets.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "keywords",
                    "hashtags",
                    "users"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of tweets matching the specified criteria."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you search for tweets containing the keyword 'python'?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Can you provide any hashtags or usernames to include in the search?"
            },
            {
                "role": "user",
                "text": "Yes, please include the hashtag 'programming' and the username 'twitterdev'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm searching for tweets now."
            }
        ],
        "function_call": {
            "function_name": "search_tweets",
            "parameters": {
                "keywords": [
                    "python"
                ],
                "hashtags": [
                    "programming"
                ],
                "users": [
                    "twitterdev"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def search_tweets(\\n    keywords: List[str],\\n    hashtags: List[str],\\n    users: List[str],\\n) -> List[str]:\\n    \"\"\"\\n    Searches for tweets containing specific keywords, hashtags, or mentioning specific users.\\n\\n    Parameters:\\n        keywords (List[str]): A list of keywords to search for in tweets.\\n        hashtags (List[str]): A list of hashtags to search for in tweets.\\n        users (List[str]): A list of usernames to search for in tweets.\\n\\n    Returns:\\n        List[str]: A list of tweets matching the specified criteria.\\n    \"\"\"\\n', 'function_description': {'name': 'search_tweets', 'description': 'Searches for tweets containing specific keywords, hashtags, or mentioning specific users.', 'parameters': {'type': 'object', 'properties': {'keywords': {'type': 'array', 'description': 'A list of keywords to search for in tweets.', 'items': {'type': 'string'}}, 'hashtags': {'type': 'array', 'description': 'A list of hashtags to search for in tweets.', 'items': {'type': 'string'}}, 'users': {'type': 'array', 'description': 'A list of usernames to search for in tweets.', 'items': {'type': 'string'}}}, 'required': ['keywords', 'hashtags', 'users']}, 'returns': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of tweets matching the specified criteria.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-18",
    "description": {
        "function_snippet": "def update_profile_details(\n    description: str,\n    location: str,\n    profile_image: str,\n) -> None:\n    \"\"\"\n    Updates the profile details such as description, location, and profile image.\n\n    Parameters:\n        description (str): The new description for the profile.\n        location (str): The new location for the profile.\n        profile_image (str): The new profile image for the profile.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "update_profile_details",
            "description": "Updates the profile details such as description, location, and profile image.",
            "parameters": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The new description for the profile."
                    },
                    "location": {
                        "type": "string",
                        "description": "The new location for the profile."
                    },
                    "profile_image": {
                        "type": "string",
                        "description": "The new profile image for the profile."
                    }
                },
                "required": [
                    "description",
                    "location",
                    "profile_image"
                ]
            },
            "returns": {
                "type": "none"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"update_profile_details\",\n        \"description\": \"Updates the profile details such as description, location, and profile image.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"description\": {\n                    \"type\": \"string\",\n                    \"description\": \"The new description for the profile.\"\n                },\n                \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"The new location for the profile.\"\n                },\n                \"profile_image\": {\n                    \"type\": \"string\",\n                    \"description\": \"The new profile image for the profile.\"\n                }\n            },\n            \"required\": [\"description\", \"location\", \"profile_image\"]\n        },\n        \"returns\": {\n            \"type\": \"none\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, I want to update my profile details.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, what changes would you like to make? Please provide the new description, location, and profile image.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I want to update my description to 'Software Engineer', my location to 'San Francisco', and my profile image to 'https://example.com/profile.jpg'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Got it. Updating your profile details now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"update_profile_details\",\n        \"parameters\": {\n            \"description\": \"Software Engineer\",\n            \"location\": \"San Francisco\",\n            \"profile_image\": \"https://example.com/profile.jpg\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "update_profile_details",
            "description": "Updates the profile details such as description, location, and profile image.",
            "parameters": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The new description for the profile."
                    },
                    "location": {
                        "type": "string",
                        "description": "The new location for the profile."
                    },
                    "profile_image": {
                        "type": "string",
                        "description": "The new profile image for the profile."
                    }
                },
                "required": [
                    "description",
                    "location",
                    "profile_image"
                ]
            },
            "returns": {
                "type": "none"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, I want to update my profile details."
            },
            {
                "role": "assistant",
                "text": "Sure, what changes would you like to make? Please provide the new description, location, and profile image."
            },
            {
                "role": "user",
                "text": "I want to update my description to 'Software Engineer', my location to 'San Francisco', and my profile image to 'https://example.com/profile.jpg'."
            },
            {
                "role": "assistant",
                "text": "Got it. Updating your profile details now."
            }
        ],
        "function_call": {
            "function_name": "update_profile_details",
            "parameters": {
                "description": "Software Engineer",
                "location": "San Francisco",
                "profile_image": "https://example.com/profile.jpg"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def update_profile_details(\\n    description: str,\\n    location: str,\\n    profile_image: str,\\n) -> None:\\n    \"\"\"\\n    Updates the profile details such as description, location, and profile image.\\n\\n    Parameters:\\n        description (str): The new description for the profile.\\n        location (str): The new location for the profile.\\n        profile_image (str): The new profile image for the profile.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'update_profile_details', 'description': 'Updates the profile details such as description, location, and profile image.', 'parameters': {'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'The new description for the profile.'}, 'location': {'type': 'string', 'description': 'The new location for the profile.'}, 'profile_image': {'type': 'string', 'description': 'The new profile image for the profile.'}}, 'required': ['description', 'location', 'profile_image']}, 'returns': {'type': 'none'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-19",
    "description": {
        "function_snippet": "def retrieve_user_engagement_metrics(\n    tweet_ids: List[str]\n) -> Dict[str, Dict[str, int]]:\n    \"\"\"\n    Retrieves user engagement metrics like likes, retweets, and impressions for specific tweets.\n\n    Parameters:\n        tweet_ids (List[str]): A list of tweet IDs for which to retrieve metrics.\n\n    Returns:\n        Dict[str, Dict[str, int]]: A dictionary with tweet IDs as keys and a dictionary of engagement metrics as values.\n                                   The engagement metrics dictionary should have 'likes', 'retweets', and 'impressions' as keys.\n    \"\"\"\n",
        "function_description": {
            "name": "retrieve_user_engagement_metrics",
            "description": "Retrieves user engagement metrics like likes, retweets, and impressions for specific tweets.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_ids": {
                        "type": "array",
                        "description": "A list of tweet IDs for which to retrieve metrics.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "tweet_ids"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "object",
                        "properties": {
                            "likes": {
                                "type": "integer"
                            },
                            "retweets": {
                                "type": "integer"
                            },
                            "impressions": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"retrieve_user_engagement_metrics\",\n        \"description\": \"Retrieves user engagement metrics like likes, retweets, and impressions for specific tweets.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_ids\": {\n                    \"type\": \"array\",\n                    \"description\": \"A list of tweet IDs for which to retrieve metrics.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"tweet_ids\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"likes\": {\n                            \"type\": \"integer\"\n                        },\n                        \"retweets\": {\n                            \"type\": \"integer\"\n                        },\n                        \"impressions\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you retrieve the engagement metrics for my tweets?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the tweet IDs for which you want to retrieve the metrics.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"I have the tweet IDs '12345', '67890', and '54321'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm retrieving the engagement metrics for your tweets now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"retrieve_user_engagement_metrics\",\n        \"parameters\": {\n            \"tweet_ids\": [\"12345\", \"67890\", \"54321\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "retrieve_user_engagement_metrics",
            "description": "Retrieves user engagement metrics like likes, retweets, and impressions for specific tweets.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_ids": {
                        "type": "array",
                        "description": "A list of tweet IDs for which to retrieve metrics.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "tweet_ids"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "object",
                        "properties": {
                            "likes": {
                                "type": "integer"
                            },
                            "retweets": {
                                "type": "integer"
                            },
                            "impressions": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you retrieve the engagement metrics for my tweets?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the tweet IDs for which you want to retrieve the metrics."
            },
            {
                "role": "user",
                "text": "I have the tweet IDs '12345', '67890', and '54321'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm retrieving the engagement metrics for your tweets now."
            }
        ],
        "function_call": {
            "function_name": "retrieve_user_engagement_metrics",
            "parameters": {
                "tweet_ids": [
                    "12345",
                    "67890",
                    "54321"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def retrieve_user_engagement_metrics(\\n    tweet_ids: List[str]\\n) -> Dict[str, Dict[str, int]]:\\n    \"\"\"\\n    Retrieves user engagement metrics like likes, retweets, and impressions for specific tweets.\\n\\n    Parameters:\\n        tweet_ids (List[str]): A list of tweet IDs for which to retrieve metrics.\\n\\n    Returns:\\n        Dict[str, Dict[str, int]]: A dictionary with tweet IDs as keys and a dictionary of engagement metrics as values.\\n                                   The engagement metrics dictionary should have \\'likes\\', \\'retweets\\', and \\'impressions\\' as keys.\\n    \"\"\"\\n', 'function_description': {'name': 'retrieve_user_engagement_metrics', 'description': 'Retrieves user engagement metrics like likes, retweets, and impressions for specific tweets.', 'parameters': {'type': 'object', 'properties': {'tweet_ids': {'type': 'array', 'description': 'A list of tweet IDs for which to retrieve metrics.', 'items': {'type': 'string'}}}, 'required': ['tweet_ids']}, 'returns': {'type': 'object', 'properties': {'tweet_id': {'type': 'object', 'properties': {'likes': {'type': 'integer'}, 'retweets': {'type': 'integer'}, 'impressions': {'type': 'integer'}}}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-20",
    "description": {
        "function_snippet": "def pin_tweet(tweet_id: str) -> bool:\n    \"\"\"\n    Pins a tweet to the top of a user's timeline.\n\n    Parameters:\n        tweet_id (str): The ID of the tweet to be pinned.\n\n    Returns:\n        bool: Returns True if the tweet was successfully pinned, False otherwise.\n    \"\"\"\n",
        "function_description": {
            "name": "pin_tweet",
            "description": "Pins a tweet to the top of a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to be pinned."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "Returns True if the tweet was successfully pinned, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"pin_tweet\",\n        \"description\": \"Pins a tweet to the top of a user's timeline.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"tweet_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the tweet to be pinned.\"\n                }\n            },\n            \"required\": [\"tweet_id\"]\n        },\n        \"returns\": {\n            \"type\": \"bool\",\n            \"description\": \"Returns True if the tweet was successfully pinned, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you pin a tweet for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me the ID of the tweet you want to pin.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The ID of the tweet I want to pin is '123456'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I'm pinning the tweet now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"pin_tweet\",\n        \"parameters\": {\n            \"tweet_id\": \"123456\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "pin_tweet",
            "description": "Pins a tweet to the top of a user's timeline.",
            "parameters": {
                "type": "object",
                "properties": {
                    "tweet_id": {
                        "type": "string",
                        "description": "The ID of the tweet to be pinned."
                    }
                },
                "required": [
                    "tweet_id"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "Returns True if the tweet was successfully pinned, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you pin a tweet for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me the ID of the tweet you want to pin."
            },
            {
                "role": "user",
                "text": "The ID of the tweet I want to pin is '123456'."
            },
            {
                "role": "assistant",
                "text": "Alright, I'm pinning the tweet now."
            }
        ],
        "function_call": {
            "function_name": "pin_tweet",
            "parameters": {
                "tweet_id": "123456"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def pin_tweet(tweet_id: str) -> bool:\\n    \"\"\"\\n    Pins a tweet to the top of a user\\'s timeline.\\n\\n    Parameters:\\n        tweet_id (str): The ID of the tweet to be pinned.\\n\\n    Returns:\\n        bool: Returns True if the tweet was successfully pinned, False otherwise.\\n    \"\"\"\\n', 'function_description': {'name': 'pin_tweet', 'description': \"Pins a tweet to the top of a user's timeline.\", 'parameters': {'type': 'object', 'properties': {'tweet_id': {'type': 'string', 'description': 'The ID of the tweet to be pinned.'}}, 'required': ['tweet_id']}, 'returns': {'type': 'bool', 'description': 'Returns True if the tweet was successfully pinned, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-21",
    "description": {
        "function_snippet": "def unpin_tweet():\n    \"\"\"\n    Unpins a tweet from the top of a user's timeline.\n    \"\"\"",
        "function_description": {
            "name": "unpin_tweet",
            "description": "Unpins a tweet from the top of a user's timeline.",
            "parameters": {},
            "returns": {}
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"unpin_tweet\",\n        \"description\": \"Unpins a tweet from the top of a user's timeline.\",\n        \"parameters\": {},\n        \"returns\": {}\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you help me unpin a tweet from the top of my timeline?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Let me unpin the tweet for you.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"unpin_tweet\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "unpin_tweet",
            "description": "Unpins a tweet from the top of a user's timeline.",
            "parameters": {},
            "returns": {}
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you help me unpin a tweet from the top of my timeline?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Let me unpin the tweet for you."
            }
        ],
        "function_call": {
            "function_name": "unpin_tweet",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def unpin_tweet():\\n    \"\"\"\\n    Unpins a tweet from the top of a user\\'s timeline.\\n    \"\"\"', 'function_description': {'name': 'unpin_tweet', 'description': \"Unpins a tweet from the top of a user's timeline.\", 'parameters': {}, 'returns': {}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-22",
    "description": {
        "function_snippet": "def get_member_lists(user_id: str) -> List[str]:\n    \"\"\"\n    Retrieves the lists that a user is a member of.\n\n    Parameters:\n        user_id (str): The ID of the user.\n\n    Returns:\n        List[str]: A list of the names of the lists that the user is a member of.\n    \"\"\"\n    # Implementation goes here",
        "function_description": {
            "name": "get_member_lists",
            "description": "Retrieves the lists that a user is a member of.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "List[str]": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the names of the lists that the user is a member of."
                    }
                }
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"get_member_lists\",\n        \"description\": \"Retrieves the lists that a user is a member of.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user.\"\n                }\n            },\n            \"required\": [\"user_id\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"List[str]\": {\n                    \"type\": \"array\",\n                    \"items\": {\"type\": \"string\"},\n                    \"description\": \"A list of the names of the lists that the user is a member of.\"\n                }\n            }\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you retrieve the lists I am a member of?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. May I know your user ID?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, my user ID is '12345'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm retrieving the lists you are a member of now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"get_member_lists\",\n        \"parameters\": {\n            \"user_id\": \"12345\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "get_member_lists",
            "description": "Retrieves the lists that a user is a member of.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "List[str]": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the names of the lists that the user is a member of."
                    }
                }
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you retrieve the lists I am a member of?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. May I know your user ID?"
            },
            {
                "role": "user",
                "text": "Yes, my user ID is '12345'."
            },
            {
                "role": "assistant",
                "text": "Great, I'm retrieving the lists you are a member of now."
            }
        ],
        "function_call": {
            "function_name": "get_member_lists",
            "parameters": {
                "user_id": "12345"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def get_member_lists(user_id: str) -> List[str]:\\n    \"\"\"\\n    Retrieves the lists that a user is a member of.\\n\\n    Parameters:\\n        user_id (str): The ID of the user.\\n\\n    Returns:\\n        List[str]: A list of the names of the lists that the user is a member of.\\n    \"\"\"\\n    # Implementation goes here', 'function_description': {'name': 'get_member_lists', 'description': 'Retrieves the lists that a user is a member of.', 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user.'}}, 'required': ['user_id']}, 'returns': {'type': 'object', 'properties': {'List[str]': {'type': 'array', 'items': {'type': 'string'}, 'description': 'A list of the names of the lists that the user is a member of.'}}}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-23",
    "description": {
        "function_snippet": "def create_new_list() -> List:\n    \"\"\"\n    Creates a new empty list.\n\n    Returns:\n        List: An empty list.\n    \"\"\"\n    return []",
        "function_description": {
            "name": "create_new_list",
            "description": "Creates a new empty list.",
            "parameters": {},
            "returns": {
                "type": "List",
                "description": "An empty list."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"create_new_list\",\n        \"description\": \"Creates a new empty list.\",\n        \"parameters\": {},\n        \"returns\": {\n            \"type\": \"List\",\n            \"description\": \"An empty list.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you create a new list for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Just give me a moment.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"create_new_list\",\n        \"parameters\": {}\n    }\n}",
    "data": {
        "function_description": {
            "name": "create_new_list",
            "description": "Creates a new empty list.",
            "parameters": {},
            "returns": {
                "type": "List",
                "description": "An empty list."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you create a new list for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Just give me a moment."
            }
        ],
        "function_call": {
            "function_name": "create_new_list",
            "parameters": {}
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def create_new_list() -> List:\\n    \"\"\"\\n    Creates a new empty list.\\n\\n    Returns:\\n        List: An empty list.\\n    \"\"\"\\n    return []', 'function_description': {'name': 'create_new_list', 'description': 'Creates a new empty list.', 'parameters': {}, 'returns': {'type': 'List', 'description': 'An empty list.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-24",
    "description": {
        "function_snippet": "def add_users_to_list(users: List[str], new_users: List[str]) -> List[str]:\n    \"\"\"\n    Adds new users to an existing list of users.\n\n    Parameters:\n        users (List[str]): The existing list of users.\n        new_users (List[str]): The list of new users to add.\n\n    Returns:\n        List[str]: The updated list of users.\n    \"\"\"\n",
        "function_description": {
            "name": "add_users_to_list",
            "description": "Adds new users to an existing list of users.",
            "parameters": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "description": "The existing list of users.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_users": {
                        "type": "array",
                        "description": "The list of new users to add.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "users",
                    "new_users"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "The updated list of users."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"add_users_to_list\",\n        \"description\": \"Adds new users to an existing list of users.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"users\": {\n                    \"type\": \"array\",\n                    \"description\": \"The existing list of users.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"new_users\": {\n                    \"type\": \"array\",\n                    \"description\": \"The list of new users to add.\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"required\": [\"users\", \"new_users\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"description\": \"The updated list of users.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you add some new users to my existing list?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can help you with that. Please provide me the existing list of users.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here is my existing list of users: ['user1', 'user2', 'user3']\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Thank you. Now, please provide me the list of new users to add.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Sure, here is the list of new users: ['user4', 'user5']\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm adding the new users to your existing list now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"add_users_to_list\",\n        \"parameters\": {\n            \"users\": [\"user1\", \"user2\", \"user3\"],\n            \"new_users\": [\"user4\", \"user5\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "add_users_to_list",
            "description": "Adds new users to an existing list of users.",
            "parameters": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "description": "The existing list of users.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "new_users": {
                        "type": "array",
                        "description": "The list of new users to add.",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "users",
                    "new_users"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "The updated list of users."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you add some new users to my existing list?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can help you with that. Please provide me the existing list of users."
            },
            {
                "role": "user",
                "text": "Here is my existing list of users: ['user1', 'user2', 'user3']"
            },
            {
                "role": "assistant",
                "text": "Thank you. Now, please provide me the list of new users to add."
            },
            {
                "role": "user",
                "text": "Sure, here is the list of new users: ['user4', 'user5']"
            },
            {
                "role": "assistant",
                "text": "Great, I'm adding the new users to your existing list now."
            }
        ],
        "function_call": {
            "function_name": "add_users_to_list",
            "parameters": {
                "users": [
                    "user1",
                    "user2",
                    "user3"
                ],
                "new_users": [
                    "user4",
                    "user5"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def add_users_to_list(users: List[str], new_users: List[str]) -> List[str]:\\n    \"\"\"\\n    Adds new users to an existing list of users.\\n\\n    Parameters:\\n        users (List[str]): The existing list of users.\\n        new_users (List[str]): The list of new users to add.\\n\\n    Returns:\\n        List[str]: The updated list of users.\\n    \"\"\"\\n', 'function_description': {'name': 'add_users_to_list', 'description': 'Adds new users to an existing list of users.', 'parameters': {'type': 'object', 'properties': {'users': {'type': 'array', 'description': 'The existing list of users.', 'items': {'type': 'string'}}, 'new_users': {'type': 'array', 'description': 'The list of new users to add.', 'items': {'type': 'string'}}}, 'required': ['users', 'new_users']}, 'returns': {'type': 'array', 'items': {'type': 'string'}, 'description': 'The updated list of users.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-25",
    "description": {
        "function_snippet": "def remove_users(existing_list: List[str], users_to_remove: List[str]) -> List[str]:\n    \"\"\"\n    Removes users from an existing list.\n\n    Parameters:\n        existing_list (List[str]): The original list of users.\n        users_to_remove (List[str]): The list of users to remove.\n\n    Returns:\n        List[str]: The updated list with the specified users removed.\n    \"\"\"\n\n",
        "function_description": {
            "name": "remove_users",
            "description": "Removes users from an existing list.",
            "parameters": {
                "type": "object",
                "properties": {
                    "existing_list": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The original list of users."
                    },
                    "users_to_remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of users to remove."
                    }
                },
                "required": [
                    "existing_list",
                    "users_to_remove"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "The updated list with the specified users removed."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"remove_users\",\n        \"description\": \"Removes users from an existing list.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"existing_list\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"The original list of users.\"\n                },\n                \"users_to_remove\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": \"The list of users to remove.\"\n                }\n            },\n            \"required\": [\"existing_list\", \"users_to_remove\"]\n        },\n        \"returns\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            },\n            \"description\": \"The updated list with the specified users removed.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you remove some users from my list?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the list of users to remove.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Here is the list of users: ['user1', 'user2', 'user3'].\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm removing the specified users from your list now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"remove_users\",\n        \"parameters\": {\n            \"existing_list\": [\"user1\", \"user2\", \"user3\"],\n            \"users_to_remove\": [\"user1\", \"user2\", \"user3\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "remove_users",
            "description": "Removes users from an existing list.",
            "parameters": {
                "type": "object",
                "properties": {
                    "existing_list": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The original list of users."
                    },
                    "users_to_remove": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of users to remove."
                    }
                },
                "required": [
                    "existing_list",
                    "users_to_remove"
                ]
            },
            "returns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "The updated list with the specified users removed."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you remove some users from my list?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the list of users to remove."
            },
            {
                "role": "user",
                "text": "Here is the list of users: ['user1', 'user2', 'user3']."
            },
            {
                "role": "assistant",
                "text": "Great, I'm removing the specified users from your list now."
            }
        ],
        "function_call": {
            "function_name": "remove_users",
            "parameters": {
                "existing_list": [
                    "user1",
                    "user2",
                    "user3"
                ],
                "users_to_remove": [
                    "user1",
                    "user2",
                    "user3"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def remove_users(existing_list: List[str], users_to_remove: List[str]) -> List[str]:\\n    \"\"\"\\n    Removes users from an existing list.\\n\\n    Parameters:\\n        existing_list (List[str]): The original list of users.\\n        users_to_remove (List[str]): The list of users to remove.\\n\\n    Returns:\\n        List[str]: The updated list with the specified users removed.\\n    \"\"\"\\n\\n', 'function_description': {'name': 'remove_users', 'description': 'Removes users from an existing list.', 'parameters': {'type': 'object', 'properties': {'existing_list': {'type': 'array', 'items': {'type': 'string'}, 'description': 'The original list of users.'}, 'users_to_remove': {'type': 'array', 'items': {'type': 'string'}, 'description': 'The list of users to remove.'}}, 'required': ['existing_list', 'users_to_remove']}, 'returns': {'type': 'array', 'items': {'type': 'string'}, 'description': 'The updated list with the specified users removed.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-26",
    "description": {
        "function_snippet": "def delete_list(existing_list: List) -> None:\n    \"\"\"\n    Deletes an existing list.\n\n    Parameters:\n        existing_list (List): The list to be deleted.\n\n    Returns:\n        None\n    \"\"\"\n\n",
        "function_description": {
            "name": "delete_list",
            "description": "Deletes an existing list.",
            "parameters": {
                "type": "object",
                "properties": {
                    "existing_list": {
                        "type": "array",
                        "description": "The list to be deleted."
                    }
                },
                "required": [
                    "existing_list"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"delete_list\",\n        \"description\": \"Deletes an existing list.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"existing_list\": {\n                    \"type\": \"array\",\n                    \"description\": \"The list to be deleted.\"\n                }\n            },\n            \"required\": [\"existing_list\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you delete my shopping list?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Could you provide me with the shopping list you want to delete?\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"Yes, here is the list: ['apples', 'bananas', 'oranges']\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Great, I'm deleting your shopping list now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"delete_list\",\n        \"parameters\": {\n            \"existing_list\": [\"apples\", \"bananas\", \"oranges\"]\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "delete_list",
            "description": "Deletes an existing list.",
            "parameters": {
                "type": "object",
                "properties": {
                    "existing_list": {
                        "type": "array",
                        "description": "The list to be deleted."
                    }
                },
                "required": [
                    "existing_list"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you delete my shopping list?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Could you provide me with the shopping list you want to delete?"
            },
            {
                "role": "user",
                "text": "Yes, here is the list: ['apples', 'bananas', 'oranges']"
            },
            {
                "role": "assistant",
                "text": "Great, I'm deleting your shopping list now."
            }
        ],
        "function_call": {
            "function_name": "delete_list",
            "parameters": {
                "existing_list": [
                    "apples",
                    "bananas",
                    "oranges"
                ]
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def delete_list(existing_list: List) -> None:\\n    \"\"\"\\n    Deletes an existing list.\\n\\n    Parameters:\\n        existing_list (List): The list to be deleted.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n\\n', 'function_description': {'name': 'delete_list', 'description': 'Deletes an existing list.', 'parameters': {'type': 'object', 'properties': {'existing_list': {'type': 'array', 'description': 'The list to be deleted.'}}, 'required': ['existing_list']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-27",
    "description": {
        "function_snippet": "def check_follow(user: str, followed_user: str) -> bool:\n    \"\"\"\n    Checks if a user is following another user.\n\n    Parameters:\n        user (str): The username of the user.\n        followed_user (str): The username of the user being followed.\n\n    Returns:\n        bool: True if the user is following the followed_user, False otherwise.\n    \"\"\"\n    # Implementation code to check if user is following followed_user\n    return result",
        "function_description": {
            "name": "check_follow",
            "description": "Checks if a user is following another user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "The username of the user."
                    },
                    "followed_user": {
                        "type": "string",
                        "description": "The username of the user being followed."
                    }
                },
                "required": [
                    "user",
                    "followed_user"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the user is following the followed_user, False otherwise."
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"check_follow\",\n        \"description\": \"Checks if a user is following another user.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user\": {\n                    \"type\": \"string\",\n                    \"description\": \"The username of the user.\"\n                },\n                \"followed_user\": {\n                    \"type\": \"string\",\n                    \"description\": \"The username of the user being followed.\"\n                }\n            },\n            \"required\": [\"user\", \"followed_user\"]\n        },\n        \"returns\": {\n            \"type\": \"bool\",\n            \"description\": \"True if the user is following the followed_user, False otherwise.\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Can you check if user 'john123' is following 'mary456'?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the usernames of the user and the followed user.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The user is 'john123' and the followed user is 'mary456'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, let me check if 'john123' is following 'mary456'.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"check_follow\",\n        \"parameters\": {\n            \"user\": \"john123\",\n            \"followed_user\": \"mary456\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "check_follow",
            "description": "Checks if a user is following another user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "The username of the user."
                    },
                    "followed_user": {
                        "type": "string",
                        "description": "The username of the user being followed."
                    }
                },
                "required": [
                    "user",
                    "followed_user"
                ]
            },
            "returns": {
                "type": "bool",
                "description": "True if the user is following the followed_user, False otherwise."
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Can you check if user 'john123' is following 'mary456'?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the usernames of the user and the followed user."
            },
            {
                "role": "user",
                "text": "The user is 'john123' and the followed user is 'mary456'."
            },
            {
                "role": "assistant",
                "text": "Alright, let me check if 'john123' is following 'mary456'."
            }
        ],
        "function_call": {
            "function_name": "check_follow",
            "parameters": {
                "user": "john123",
                "followed_user": "mary456"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def check_follow(user: str, followed_user: str) -> bool:\\n    \"\"\"\\n    Checks if a user is following another user.\\n\\n    Parameters:\\n        user (str): The username of the user.\\n        followed_user (str): The username of the user being followed.\\n\\n    Returns:\\n        bool: True if the user is following the followed_user, False otherwise.\\n    \"\"\"\\n    # Implementation code to check if user is following followed_user\\n    return result', 'function_description': {'name': 'check_follow', 'description': 'Checks if a user is following another user.', 'parameters': {'type': 'object', 'properties': {'user': {'type': 'string', 'description': 'The username of the user.'}, 'followed_user': {'type': 'string', 'description': 'The username of the user being followed.'}}, 'required': ['user', 'followed_user']}, 'returns': {'type': 'bool', 'description': 'True if the user is following the followed_user, False otherwise.'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-28",
    "description": {
        "function_snippet": "def block_user(username: str) -> None:\n    \"\"\"\n    Blocks a specific user.\n\n    Parameters:\n        username (str): The username of the user to be blocked.\n\n    Returns:\n        None\n    \"\"\"\n",
        "function_description": {
            "name": "block_user",
            "description": "Blocks a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user to be blocked."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"block_user\",\n        \"description\": \"Blocks a specific user.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"username\": {\n                    \"type\": \"string\",\n                    \"description\": \"The username of the user to be blocked.\"\n                }\n            },\n            \"required\": [\"username\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you please block a user for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide me with the username of the user you want to block.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The username of the user I want to block is 'john_doe'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I'm blocking the user 'john_doe' now.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"block_user\",\n        \"parameters\": {\n            \"username\": \"john_doe\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "block_user",
            "description": "Blocks a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username of the user to be blocked."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you please block a user for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide me with the username of the user you want to block."
            },
            {
                "role": "user",
                "text": "The username of the user I want to block is 'john_doe'."
            },
            {
                "role": "assistant",
                "text": "Alright, I'm blocking the user 'john_doe' now."
            }
        ],
        "function_call": {
            "function_name": "block_user",
            "parameters": {
                "username": "john_doe"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def block_user(username: str) -> None:\\n    \"\"\"\\n    Blocks a specific user.\\n\\n    Parameters:\\n        username (str): The username of the user to be blocked.\\n\\n    Returns:\\n        None\\n    \"\"\"\\n', 'function_description': {'name': 'block_user', 'description': 'Blocks a specific user.', 'parameters': {'type': 'object', 'properties': {'username': {'type': 'string', 'description': 'The username of the user to be blocked.'}}, 'required': ['username']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}
{
    "function_id": "twitter-29",
    "description": {
        "function_snippet": "def unblock_user(user_id: str) -> None:",
        "function_description": {
            "name": "unblock_user",
            "description": "Unblock a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user to unblock."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        }
    },
    "completion-content": "{\n    \"function_description\": {\n        \"name\": \"unblock_user\",\n        \"description\": \"Unblock a specific user.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"user_id\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the user to unblock.\"\n                }\n            },\n            \"required\": [\"user_id\"]\n        },\n        \"returns\": {\n            \"type\": \"None\"\n        }\n    },\n    \"conversation\": [\n        {\n            \"role\": \"user\",\n            \"text\": \"Hey, can you unblock a user for me?\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Sure, I can do that. Please provide the user ID of the user you want to unblock.\"\n        },\n        {\n            \"role\": \"user\",\n            \"text\": \"The user ID is '98765'.\"\n        },\n        {\n            \"role\": \"assistant\",\n            \"text\": \"Alright, I will proceed to unblock the user with ID '98765'.\"\n        }\n    ],\n    \"function_call\": {\n        \"function_name\": \"unblock_user\",\n        \"parameters\": {\n            \"user_id\": \"98765\"\n        }\n    }\n}",
    "data": {
        "function_description": {
            "name": "unblock_user",
            "description": "Unblock a specific user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "The ID of the user to unblock."
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "returns": {
                "type": "None"
            }
        },
        "conversation": [
            {
                "role": "user",
                "text": "Hey, can you unblock a user for me?"
            },
            {
                "role": "assistant",
                "text": "Sure, I can do that. Please provide the user ID of the user you want to unblock."
            },
            {
                "role": "user",
                "text": "The user ID is '98765'."
            },
            {
                "role": "assistant",
                "text": "Alright, I will proceed to unblock the user with ID '98765'."
            }
        ],
        "function_call": {
            "function_name": "unblock_user",
            "parameters": {
                "user_id": "98765"
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\nBelow is the description of a function:\n    \"function_description\":\n    {FUNCTION_DESCRIPTION}\n\n\nA user is asking an assisstant a request that would eventually call the function, can you write that conversation for me.\nReturn the output as this example:\n    {{\n        \"function_description\":\n        {FUNCTION_EXAMPLE},\n        \"conversation\": {PROMPT_EXAMPLE},\n        \"function_call\": {CALL_EXAMPLE}\n    }}\n",
        "FUNCTION_DESCRIPTION": "{'function_snippet': 'def unblock_user(user_id: str) -> None:', 'function_description': {'name': 'unblock_user', 'description': 'Unblock a specific user.', 'parameters': {'type': 'object', 'properties': {'user_id': {'type': 'string', 'description': 'The ID of the user to unblock.'}}, 'required': ['user_id']}, 'returns': {'type': 'None'}}}",
        "PROMPT_EXAMPLE": "\n[\n    {\n        \"role\": \"user\",\n        \"text\": \"Hey, can you show me my Twitter timeline?\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Sure, I can do that. May I know your Twitter user ID?\"\n    },\n    {\n        \"role\": \"user\",\n        \"text\": \"Yes, my Twitter user ID is '13579'.\"\n    },\n    {\n        \"role\": \"assistant\",\n        \"text\": \"Great, I'm retrieving your Twitter timeline now.\"\n    }\n]\n",
        "FUNCTION_EXAMPLE": "\n\"function_description\": {\n    \"name\": \"retrieve_user_timeline\",\n    \"description\": \"Retrieves a user's timeline, including tweets, retweets, and replies.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"user_id\": {\n                \"type\": \"string\",\n                \"description\": \"The ID of the user.\"\n            }\n        },\n        \"required\": [\"user_id\"]\n    },\n    \"returns\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"tweet_id\": {\"type\": \"string\"},\n            \"text\": {\"type\": \"string\"},\n            \"author\": {\"type\": \"string\"},\n            \"date\": {\"type\": \"string\"}\n        }\n    }\n}\n",
        "CALL_EXAMPLE": "\n{\n    \"function_name\": \"retrieve_user_timeline\",\n    \"parameters\": {\n        \"user_id\": \"13579\"\n    }\n}\n"
    }
}

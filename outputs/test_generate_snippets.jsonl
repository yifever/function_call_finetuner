{
    "description": "\ndef order_airplane_tickets(\n    num_tickets: int,\n    destination: str,\n    departure_date: str,\n    passengers: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders airplane tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        destination (str): The destination city.\n        departure_date (str): The departure date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"\n",
    "completion-content": "{\n    \"function_snippet\": \n\ndef order_airplane_tickets(\n    num_tickets: int,\n    destination: str,\n    departure_date: str,\n    passengers: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders airplane tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        destination (str): The destination city.\n        departure_date (str): The departure date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"},\n    \n    \"function_description\": \n    {\n        \"name\": \"order_airplane_tickets\",\n        \"description\": \"Orders airplane tickets and returns the total price.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"num_tickets\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of tickets to buy.\"\n                },\n                \"destination\": {\n                    \"type\": \"string\",\n                    \"description\": \"The destination city.\"\n                },\n                \"departure_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The departure date in YYYY-MM-DD format.\"\n                },\n                \"passengers\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                                \"description\": \"The name of the passenger.\"\n                            },\n                            \"age\": {\n                                \"type\": \"string\",\n                                \"description\": \"The age of the passenger.\"\n                            }\n                        },\n                        \"required\": [\"name\", \"age\"]\n                    },\n                    \"description\": \"A list of dictionaries containing passenger details. Each dictionary should have 'name' and 'age' keys.\"\n                }\n            },\n            \"required\": [\"num_tickets\", \"destination\", \"departure_date\", \"passengers\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"total_price\": {\n                    \"type\": \"number\",\n                    \"description\": \"The total price of the airplane tickets.\"\n                }\n            }\n        }\n    }\n}",
    "data": null,
    "metadata": {
        "TEMPLATE": "\n###\nBelow is a snippet of a python function in natural language:\n    {FUNCTION_SNIPPET}    \n\n### \nWrite a description of this function.\nReturn the output as this example:\n    {{\n        \"function_snippet\": \n        {SNIPPET_EXAMPLE},\n        \"function_description\": {DESCRIPTION_EXAMPLE}\n    }}\n",
        "FUNCTION_SNIPPET": "\ndef order_airplane_tickets(\n    num_tickets: int,\n    destination: str,\n    departure_date: str,\n    passengers: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders airplane tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        destination (str): The destination city.\n        departure_date (str): The departure date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"\n",
        "SNIPPET_EXAMPLE": "\ndef get_current_weather(\n    location: str,\n    unit: str=\"fahrenheit\"\n) -> str:\n    \"\"\"\n    Get the current weather in a given location\n    \"\"\"\n    <function implementation...>\n",
        "DESCRIPTION_EXAMPLE": "\n{\n    \"name\": \"get_current_weather\",\n    \"description\": \"Get the current weather in a given location\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"location\": {\n                \"type\": \"string\",\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\n            },\n            \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\n        },\n        \"required\": [\"location\"],\n    },\n}\n"
    }
}
{
    "description": "\ndef order_airplane_tickets(\n    num_tickets: int,\n    destination: str,\n    departure_date: str,\n    passengers: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders airplane tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        destination (str): The destination city.\n        departure_date (str): The departure date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"\n",
    "completion-content": "{\n\"function_snippet\": \"def order_airplane_tickets(\\n    num_tickets: int,\\n    destination: str,\\n    departure_date: str,\\n    passengers: List[Dict[str, str]],\\n) -> Dict[str, float]:\\n    \\\"\\\"\\\"\\n    Orders airplane tickets and returns the total price.\\n\\n    Parameters:\\n        num_tickets (int): The number of tickets to buy.\\n        destination (str): The destination city.\\n        departure_date (str): The departure date in YYYY-MM-DD format.\\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\\n                                          Each dictionary should have 'name' and 'age' keys.\\n\\n    Returns:\\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\\n    \\\"\\\"\\\"\\n\\n\",\n\"function_description\": {\n    \"name\": \"order_airplane_tickets\",\n    \"description\": \"Orders airplane tickets and returns the total price.\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"num_tickets\": {\n                \"type\": \"integer\",\n                \"description\": \"The number of tickets to buy.\"\n            },\n            \"destination\": {\n                \"type\": \"string\",\n                \"description\": \"The destination city.\"\n            },\n            \"departure_date\": {\n                \"type\": \"string\",\n                \"description\": \"The departure date in YYYY-MM-DD format.\"\n            },\n            \"passengers\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"name\": {\n                            \"type\": \"string\",\n                            \"description\": \"The name of the passenger.\"\n                        },\n                        \"age\": {\n                            \"type\": \"string\",\n                            \"description\": \"The age of the passenger.\"\n                        }\n                    },\n                    \"required\": [\"name\", \"age\"]\n                }\n            }\n        },\n        \"required\": [\"num_tickets\", \"destination\", \"departure_date\", \"passengers\"]\n    },\n}\n}",
    "data": null,
    "metadata": {
        "TEMPLATE": "\n###\nBelow is a snippet of a python function in natural language:\n    {FUNCTION_SNIPPET}    \n\n### \nWrite a description of this function.\nReturn the output as this example:\n    {{\n        \"function_snippet\": \n        {SNIPPET_EXAMPLE},\n        \"function_description\": {DESCRIPTION_EXAMPLE}\n    }}\n",
        "FUNCTION_SNIPPET": "\ndef order_airplane_tickets(\n    num_tickets: int,\n    destination: str,\n    departure_date: str,\n    passengers: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders airplane tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        destination (str): The destination city.\n        departure_date (str): The departure date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"\n",
        "SNIPPET_EXAMPLE": "\ndef get_current_weather(\n    location: str,\n    unit: str=\"fahrenheit\"\n) -> str:\n    \"\"\"\n    Get the current weather in a given location\n    \"\"\"\n    <function implementation...>\n",
        "DESCRIPTION_EXAMPLE": "\n{\n    \"name\": \"get_current_weather\",\n    \"description\": \"Get the current weather in a given location\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"location\": {\n                \"type\": \"string\",\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\n            },\n            \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\n        },\n        \"required\": [\"location\"],\n    },\n}\n"
    }
}
{
    "description": "\ndef order_airplane_tickets(\n    num_tickets: int,\n    destination: str,\n    departure_date: str,\n    passengers: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders airplane tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        destination (str): The destination city.\n        departure_date (str): The departure date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"\n",
    "completion-content": "{\n    \"function_snippet\": \"def order_airplane_tickets(\\n    num_tickets: int,\\n    destination: str,\\n    departure_date: str,\\n    passengers: List[Dict[str, str]],\\n) -> Dict[str, float]:\\n    \\\"\\\"\\\"\\n    Orders airplane tickets and returns the total price.\\n\\n    Parameters:\\n        num_tickets (int): The number of tickets to buy.\\n        destination (str): The destination city.\\n        departure_date (str): The departure date in YYYY-MM-DD format.\\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\\n                                          Each dictionary should have 'name' and 'age' keys.\\n\\n    Returns:\\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\\n    \\\"\\\"\\\"\\n    \",\n    \"function_description\": {\n        \"name\": \"order_airplane_tickets\",\n        \"description\": \"Orders airplane tickets and returns the total price.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"num_tickets\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of tickets to buy.\"\n                },\n                \"destination\": {\n                    \"type\": \"string\",\n                    \"description\": \"The destination city.\"\n                },\n                \"departure_date\": {\n                    \"type\": \"string\",\n                    \"description\": \"The departure date in YYYY-MM-DD format.\"\n                },\n                \"passengers\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                                \"description\": \"The passenger's name.\"\n                            },\n                            \"age\": {\n                                \"type\": \"string\",\n                                \"description\": \"The passenger's age.\"\n                            }\n                        },\n                        \"required\": [\"name\", \"age\"]\n                    },\n                    \"description\": \"A list of dictionaries containing passenger details. Each dictionary should have 'name' and 'age' keys.\"\n                }\n            },\n            \"required\": [\"num_tickets\", \"destination\", \"departure_date\", \"passengers\"]\n        },\n        \"returns\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"total_price\": {\"type\": \"number\", \"description\": \"The total price of the airplane tickets.\"}\n            }\n        }\n    }\n}",
    "data": {
        "function_snippet": "def order_airplane_tickets(\n    num_tickets: int,\n    destination: str,\n    departure_date: str,\n    passengers: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders airplane tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        destination (str): The destination city.\n        departure_date (str): The departure date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"\n    ",
        "function_description": {
            "name": "order_airplane_tickets",
            "description": "Orders airplane tickets and returns the total price.",
            "parameters": {
                "type": "object",
                "properties": {
                    "num_tickets": {
                        "type": "integer",
                        "description": "The number of tickets to buy."
                    },
                    "destination": {
                        "type": "string",
                        "description": "The destination city."
                    },
                    "departure_date": {
                        "type": "string",
                        "description": "The departure date in YYYY-MM-DD format."
                    },
                    "passengers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The passenger's name."
                                },
                                "age": {
                                    "type": "string",
                                    "description": "The passenger's age."
                                }
                            },
                            "required": [
                                "name",
                                "age"
                            ]
                        },
                        "description": "A list of dictionaries containing passenger details. Each dictionary should have 'name' and 'age' keys."
                    }
                },
                "required": [
                    "num_tickets",
                    "destination",
                    "departure_date",
                    "passengers"
                ]
            },
            "returns": {
                "type": "object",
                "properties": {
                    "total_price": {
                        "type": "number",
                        "description": "The total price of the airplane tickets."
                    }
                }
            }
        }
    },
    "metadata": {
        "TEMPLATE": "\n###\nBelow is a snippet of a python function in natural language:\n    {FUNCTION_SNIPPET}    \n\n### \nWrite a description of this function.\nReturn the output as this example:\n    {{\n        \"function_snippet\": \n        {SNIPPET_EXAMPLE},\n        \"function_description\": {DESCRIPTION_EXAMPLE}\n    }}\n",
        "FUNCTION_SNIPPET": "\ndef order_airplane_tickets(\n    num_tickets: int,\n    destination: str,\n    departure_date: str,\n    passengers: List[Dict[str, str]],\n) -> Dict[str, float]:\n    \"\"\"\n    Orders airplane tickets and returns the total price.\n\n    Parameters:\n        num_tickets (int): The number of tickets to buy.\n        destination (str): The destination city.\n        departure_date (str): The departure date in YYYY-MM-DD format.\n        passengers (List[Dict[str, str]]): A list of dictionaries containing passenger details.\n                                          Each dictionary should have 'name' and 'age' keys.\n\n    Returns:\n        Dict[str, float]: A dictionary with 'total_price' as a key and the total price as a value.\n    \"\"\"\n",
        "SNIPPET_EXAMPLE": "\ndef get_current_weather(\n    location: str,\n    unit: str=\"fahrenheit\"\n) -> str:\n    \"\"\"\n    Get the current weather in a given location\n    \"\"\"\n    <function implementation...>\n",
        "DESCRIPTION_EXAMPLE": "\n{\n    \"name\": \"get_current_weather\",\n    \"description\": \"Get the current weather in a given location\",\n    \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"location\": {\n                \"type\": \"string\",\n                \"description\": \"The city and state, e.g. San Francisco, CA\",\n            },\n            \"unit\": {\"type\": \"string\", \"enum\": [\"celsius\", \"fahrenheit\"]},\n        },\n        \"required\": [\"location\"],\n    },\n}\n"
    }
}
